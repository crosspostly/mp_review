name: üöÄ Deploy & Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  # üè∑Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞
  create-release:
    name: üè∑Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: üì• Checkout –∫–æ–¥–∞
      uses: actions/checkout@v4
      
    - name: üè∑Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## üöÄ –ù–æ–≤—ã–π —Ä–µ–ª–∏–∑ ${{ github.ref_name }}
          
          ### ‚ú® –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
          - WB API v2 —Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
          - Ozon API –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
          - –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
          - –£–ª—É—á—à–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
          - GitHub Actions CI/CD
          
          ### üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
          - –£–¥–∞–ª–µ–Ω –¥—É–±–ª–∏—Ä—É—é—â–∏–π WB API v1
          - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
          - –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
          
          ### üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:
          - –ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é
          - –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
          - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
          
          ### üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
          - 95+ unit —Ç–µ—Å—Ç–æ–≤
          - Security —Ç–µ—Å—Ç—ã
          - Performance —Ç–µ—Å—Ç—ã
          - API compliance —Ç–µ—Å—Ç—ã
          
          **üì• –°–∫–∞—á–∞—Ç—å:** [–ê—Ä—Ö–∏–≤ —Å –∫–æ–¥–æ–º](https://github.com/${{ github.repository }}/archive/${{ github.ref_name }}.zip)
        draft: false
        prerelease: false

  # üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
  create-archive:
    name: üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: üì• Checkout –∫–æ–¥–∞
      uses: actions/checkout@v4
      
    - name: üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
      run: |
        echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è —Ä–µ–ª–∏–∑–∞..."
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∞—Ä—Ö–∏–≤–∞
        mkdir -p release-package
        
        # –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
        echo "üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
        cp *.gs release-package/ 2>/dev/null || true
        cp *.html release-package/ 2>/dev/null || true
        cp *.md release-package/ 2>/dev/null || true
        
        # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
        echo "üóúÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ZIP –∞—Ä—Ö–∏–≤–∞..."
        cd release-package
        zip -r ../mp-review-manager-${{ github.ref_name }}.zip .
        cd ..
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞—Ä—Ö–∏–≤–∞
        echo "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞—Ä—Ö–∏–≤–∞:"
        unzip -l mp-review-manager-${{ github.ref_name }}.zip
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—Ä—Ö–∏–≤ –∫–∞–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç
        echo "üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ö–∏–≤–∞ –∫–∞–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç..."
        
    - name: üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ö–∏–≤–∞
      uses: actions/upload-artifact@v3
      with:
        name: mp-review-manager-${{ github.ref_name }}
        path: mp-review-manager-${{ github.ref_name }}.zip

  # üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é
  deployment-check:
    name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout –∫–æ–¥–∞
      uses: actions/checkout@v4
      
    - name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
        echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤:"
        required_files=(
          "code.gs"
          "ozon_functions.gs"
          "tests.gs"
          "test_functions.gs"
          "comprehensive_tests.gs"
          "api_fixes_implementation.gs"
          "wb_v2_only_tests.gs"
          "wb_api_comparison_test.gs"
          "StoreManagerSidebar.html"
          "README_GITHUB.md"
          "DEPLOYMENT_GUIDE.md"
          "API_DOCUMENTATION_ANALYSIS.md"
        )
        
        missing_files=()
        for file in "${required_files[@]}"; do
          if [ -f "$file" ]; then
            echo "  ‚úÖ $file"
          else
            echo "  ‚ùå $file - –û–¢–°–£–¢–°–¢–í–£–ï–¢"
            missing_files+=("$file")
          fi
        done
        
        if [ ${#missing_files[@]} -gt 0 ]; then
          echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: ${missing_files[*]}"
          exit 1
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤
        echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–æ–≤:"
        for file in "${required_files[@]}"; do
          if [ -f "$file" ]; then
            size=$(wc -c < "$file")
            if [ $size -gt 100 ]; then
              echo "  ‚úÖ $file - $size –±–∞–π—Ç"
            else
              echo "  ‚ö†Ô∏è $file - $size –±–∞–π—Ç (–º–∞–ª–æ)"
            fi
          fi
        done
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞:"
        for file in *.gs; do
          if [ -f "$file" ]; then
            if grep -q "function " "$file"; then
              echo "  ‚úÖ $file - —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏"
            else
              echo "  ‚ö†Ô∏è $file - –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–π"
            fi
          fi
        done
        
        echo "üéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"

  # üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏
  deployment-report:
    name: üìä –û—Ç—á–µ—Ç –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏
    runs-on: ubuntu-latest
    needs: [create-release, create-archive, deployment-check]
    if: always()
    
    steps:
    - name: üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
      run: |
        echo "üìä ===== –û–¢–ß–ï–¢ –û –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ò ====="
        echo ""
        echo "üè∑Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞: ${{ needs.create-release.result }}"
        echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞: ${{ needs.create-archive.result }}"
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏: ${{ needs.deployment-check.result }}"
        echo ""
        
        if [ "${{ needs.create-release.result }}" = "success" ] && 
           [ "${{ needs.create-archive.result }}" = "success" ] && 
           [ "${{ needs.deployment-check.result }}" = "success" ]; then
          echo "üéâ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–û!"
          echo "‚úÖ –†–µ–ª–∏–∑ —Å–æ–∑–¥–∞–Ω"
          echo "‚úÖ –ê—Ä—Ö–∏–≤ –≥–æ—Ç–æ–≤"
          echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
          exit 0
        else
          echo "‚ùå –û–®–ò–ë–ö–ò –ü–†–ò –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ò"
          echo "üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ"
          exit 1
        fi
        
        echo ""
        echo "üìö –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
        echo "1. –°–∫–∞—á–∞–π—Ç–µ –∞—Ä—Ö–∏–≤ —Ä–µ–ª–∏–∑–∞"
        echo "2. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ DEPLOYMENT_GUIDE.md"
        echo "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Google Apps Script"
        echo "4. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –≤ –ø—Ä–æ–µ–∫—Ç"
        echo "5. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á–∏"
        echo "6. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã"
        echo ""
        echo "üìä ===== –ö–û–ù–ï–¶ –û–¢–ß–ï–¢–ê ====="