/**
 * @file Code.gs
 * @description Main backend logic for the Multi-Store Auto-Reply Manager.
 */

// ============ GLOBAL CONFIGURATION ============
const CONFIG = {
  PROPERTIES_KEY: 'REGISTERED_STORES',
  DEV_MODE_KEY: 'DEV_MODE_ENABLED',
  PROGRESS_KEY: 'PROCESSING_PROGRESS', // üöÄ NEW: –ö–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
  SHEETS: {
    TEMPLATES: '–®–∞–±–ª–æ–Ω—ã –æ—Ç–≤–µ—Ç–æ–≤'
  },
  LOG_SHEET_NAME: 'üêû –õ–æ–≥ –æ—Ç–ª–∞–¥–∫–∏',
  LOG_MAX_ROWS: 2500,
  RESPOND_TO_RATINGS: [4, 5],
  DELAY_BETWEEN_REQUESTS: 1100,
  MAX_FEEDBACKS_PER_RUN: 50,
  MIN_REVIEW_TEXT_LENGTH: 3, // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ –æ—Ç–∑—ã–≤–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
  HEADERS: ['‚Ññ', 'ID –æ—Ç–∑—ã–≤–∞', '–î–∞—Ç–∞ –æ—Ç–∑—ã–≤–∞', '–ê—Ä—Ç–∏–∫—É–ª', '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞', '–°—Å—ã–ª–∫–∞', '–û—Ü–µ–Ω–∫–∞', '–¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞', '–ü–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç', '–°—Ç–∞—Ç—É—Å', '–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏', '–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏'],
  STATUS: {
    NEW: 'NEW',                     // –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ (–µ—â–µ –Ω–µ –ø–æ–¥–æ–±—Ä–∞–Ω —à–∞–±–ª–æ–Ω)
    PENDING: '–ì–æ—Ç–æ–≤–æ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ',   // –®–∞–±–ª–æ–Ω –ø–æ–¥–æ–±—Ä–∞–Ω, –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ
    SENT: '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ',             // –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
    ERROR: '–û—à–∏–±–∫–∞',                // –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ
    MANUAL: '–†—É—á–Ω–æ–π –æ—Ç–≤–µ—Ç',         // –û—Ç–≤–µ—á–µ–Ω–æ –≤—Ä—É—á–Ω—É—é
    SKIPPED_RATING: '–ü—Ä–æ–ø—É—â–µ–Ω–æ (—Ä–µ–π—Ç–∏–Ω–≥)',
    SKIPPED_PROCESSED: '–ü—Ä–æ–ø—É—â–µ–Ω–æ (—É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω)',
    SKIPPED_EMPTY: '–ü—Ä–æ–ø—É—â–µ–Ω–æ (–ø—É—Å—Ç–æ–π –æ—Ç–∑—ã–≤)',
    NO_TEMPLATE: '–ù–µ—Ç —à–∞–±–ª–æ–Ω–∞'      // –ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π —à–∞–±–ª–æ–Ω
  },
  // üöÄ NEW: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  PROGRESS: {
    MAX_EXECUTION_TIME: 5.5 * 60 * 1000, // 5.5 –º–∏–Ω—É—Ç (—Å –∑–∞–ø–∞—Å–æ–º –¥–æ 6-–º–∏–Ω—É—Ç–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞)
    SAVE_PROGRESS_INTERVAL: 30 * 1000,    // –°–æ—Ö—Ä–∞–Ω—è—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    RESET_PROGRESS_AFTER_HOURS: 24        // –°–±—Ä–∞—Å—ã–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤
  }
};

// ============ WILDBERRIES API CONFIGURATION ============
const WB_CONFIG = {
  MARKETPLACE_NAME: 'Wildberries',
  MARKETPLACE_CODE: 'WB',
  API_BASE_URL: 'https://feedbacks-api.wildberries.ru/api/v1',
  ENDPOINTS: {
    GET_FEEDBACKS: '/feedbacks',
    SEND_ANSWER: '/feedbacks'  // {id} –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
  },
  API_LIMITS: {
    MAX_TAKE: 1000,          // –ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç (–ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω)
    DEFAULT_SKIP: 0,
    RECOMMENDED_TAKE: 100,   // –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ª–∏–º–∏—Ç
    SAFE_TAKE: 500,          // –ó–æ–ª–æ—Ç–∞—è —Å–µ—Ä–µ–¥–∏–Ω–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
    PAGINATION_STEP: 100,    // –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    MAX_PAGES: 10            // –ú–∞–∫—Å–∏–º—É–º —Å—Ç—Ä–∞–Ω–∏—Ü –∑–∞ –æ–¥–∏–Ω –∑–∞–ø—É—Å–∫ (1000 –æ—Ç–∑—ã–≤–æ–≤)
  },
  PAGINATION: {
    ENABLED: false,          // WB —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ-–¥—Ä—É–≥–æ–º—É, –ø–∞–≥–∏–Ω–∞—Ü–∏—è –Ω–µ –Ω—É–∂–Ω–∞
    SIMPLE_APPROACH: true    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø–æ–¥—Ö–æ–¥
  },
  RATE_LIMITS: {
    REQUESTS_PER_MINUTE: 60,        // –ú–∞–∫—Å–∏–º—É–º –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É
    DELAY_BETWEEN_REQUESTS: 1100,   // –ú–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    BURST_LIMIT: 10,                // –ú–∞–∫—Å–∏–º—É–º –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–¥—Ä—è–¥ (–±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏)
    BURST_DELAY: 100,               // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ burst —Ä–µ–∂–∏–º–µ (–º—Å)
    RECOVERY_DELAY: 5000            // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –∏—Å—á–µ—Ä–ø–∞–Ω–∏—è burst –ª–∏–º–∏—Ç–∞ (–º—Å)
  },
  BATCH_PROCESSING: {
    ENABLED: false,                 // WB API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç batch –æ—Ç–ø—Ä–∞–≤–∫—É
    ALTERNATIVE: 'smart_throttling' // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–º–Ω–æ–µ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏
  },
  RATING_FIELDS: {
    REVIEW_RATING: 'rating',        // –†–µ–π—Ç–∏–Ω–≥ –û–¢–ó–´–í–ê (1-5, –º–æ–∂–µ—Ç –±—ã—Ç—å null –µ—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞ –æ—Ç–∑—ã–≤–∞)
    PRODUCT_RATING: 'productValuation' // –û–±—â–∞—è –û–¶–ï–ù–ö–ê –¢–û–í–ê–†–ê (1-5, –≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ)
  },
  DATA_EXPLANATION: {
    // –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö WB API:
    // 1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫—É–ø–∞–µ—Ç —Ç–æ–≤–∞—Ä ‚Üí —Å—Ç–∞–≤–∏—Ç productValuation (1-5 –∑–≤–µ–∑–¥)
    // 2. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –æ—Ç–∑—ã–≤ ‚Üí –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è rating + text
    // 3. –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –æ—Ü–µ–Ω–∫–∞ —Ç–æ–≤–∞—Ä–∞ (–±–µ–∑ —Ç–µ–∫—Å—Ç–∞) ‚Üí rating=null, text=null
    // 4. –û—Ç–≤–µ—á–∞—Ç—å –º–æ–∂–Ω–æ –¢–û–õ–¨–ö–û –Ω–∞ –æ—Ç–∑—ã–≤—ã —Å —Ç–µ–∫—Å—Ç–æ–º (rating –Ω–µ null)
    RATING_LOGIC: 'rating || productValuation || 0', // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: —Ä–µ–π—Ç–∏–Ω–≥ –æ—Ç–∑—ã–≤–∞, –∑–∞—Ç–µ–º —Ç–æ–≤–∞—Ä–∞
    RESPONDABLE: '–¢–æ–ª—å–∫–æ –æ—Ç–∑—ã–≤—ã —Å —Ç–µ–∫—Å—Ç–æ–º (rating != null && text != null)'
  },
  REQUIRED_TEXT_FIELDS: ['text'], // –ü–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–∫—Å—Ç
  PRODUCT_URL_TEMPLATE: 'https://www.wildberries.ru/catalog/{productId}/detail.aspx'
};

// ============ OZON API CONFIGURATION ============
const OZON_CONFIG = {
  MARKETPLACE_NAME: 'Ozon',
  MARKETPLACE_CODE: 'OZON',
  API_BASE_URL: 'https://api-seller.ozon.ru/v1',
  ENDPOINTS: {
    GET_REVIEWS: '/review/list',
    SEND_COMMENT: '/review/comment/create'
  },
  API_LIMITS: {
    MAX_LIMIT: 100,          // –†–ï–ê–õ–¨–ù–´–ô –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç Ozon API (–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ)
    MIN_LIMIT: 20,           // –†–ï–ê–õ–¨–ù–´–ô –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç Ozon API
    DEFAULT_LIMIT: 100,      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç
    RECOMMENDED_LIMIT: 100,  // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π = –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    PAGINATION_STEP: 100     // –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã - –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∞–∫—Å–∏–º—É–º
  },
  PAGINATION: {
    ENABLED: false,          // Ozon API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç skip/offset –ø–∞–≥–∏–Ω–∞—Ü–∏—é
    ALTERNATIVE: 'timestamp_based' // –ò—Å–ø–æ–ª—å–∑—É–µ–º timestamp-based filtering
  },
  RATE_LIMITS: {
    REQUESTS_PER_MINUTE: 100,       // –ú–∞–∫—Å–∏–º—É–º –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É (–≤—ã—à–µ —á–µ–º WB)
    DELAY_BETWEEN_REQUESTS: 600,    // –ú–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (–±—ã—Å—Ç—Ä–µ–µ WB)
    BURST_LIMIT: 20,                // –ú–∞–∫—Å–∏–º—É–º –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–¥—Ä—è–¥ (–±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏)
    BURST_DELAY: 50,                // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ burst —Ä–µ–∂–∏–º–µ (–º—Å)
    RECOVERY_DELAY: 3000            // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –∏—Å—á–µ—Ä–ø–∞–Ω–∏—è burst –ª–∏–º–∏—Ç–∞ (–º—Å)
  },
  BATCH_PROCESSING: {
    ENABLED: false,                 // Ozon API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç batch –æ—Ç–ø—Ä–∞–≤–∫—É
    ALTERNATIVE: 'sequential_with_smart_throttling' // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å —É–º–Ω—ã–º throttling
  },
  WEBHOOK: {
    SUPPORTED: false,               // Ozon API webhook —Ç—Ä–µ–±—É–µ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    ALTERNATIVE: 'intelligent_polling' // –£–º–Ω—ã–π polling —Å timestamp filtering
  },
  RATING_FIELDS: {
    REVIEW_RATING: 'rating'
  },
  REVIEW_STATUSES: {
    UNPROCESSED: 'UNPROCESSED',
    PROCESSED: 'PROCESSED'
  },
  REQUIRED_TEXT_FIELDS: ['text'], // –ü–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–∫—Å—Ç
  PRODUCT_URL_TEMPLATE: 'https://www.ozon.ru/product/{sku}'
};

// ============ MENU CREATION ============
function onOpen(e) {
  const ui = SpreadsheetApp.getUi();
  const menu = ui.createMenu('ü§ñ –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã');
  menu.addItem('‚öôÔ∏è –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞', 'initialSetup');
  menu.addItem('üè™ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏', 'showStoreManagerSidebar');
  menu.addSeparator();
  menu.addItem('‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–µ–π—á–∞—Å', 'processAllStores');
  menu.addItem('‚ñ∂Ô∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã', 'sendPendingAnswers');
  menu.addSeparator();
  menu.addItem('üì• –°–æ–±—Ä–∞—Ç—å –æ—Ç–∑—ã–≤—ã Ozon –≤—Ä—É—á–Ω—É—é', 'collectOzonReviewsAuto');
  menu.addItem('ü§ñ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å NEW –æ—Ç–∑—ã–≤—ã Ozon (—à–∞–±–ª–æ–Ω—ã)', 'processNewOzonReviews');
  menu.addItem('üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å PENDING –æ—Ç–≤–µ—Ç—ã Ozon', 'sendPendingAnswersOzonOnly');
  menu.addSeparator();
  
  const ozonMenu = ui.createMenu('üéØ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è Ozon');
  ozonMenu.addItem('‚úÖ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä—ã Ozon (2 –∞–≤—Ç–æ–º–∞—Ç–∞)', 'setupOzonTriggers');
  ozonMenu.addItem('‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ Ozon', 'checkOzonTriggersStatus');
  ozonMenu.addItem('‚ùå –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã Ozon', 'deleteAllOzonTriggers');
  menu.addSubMenu(ozonMenu);
  menu.addSeparator();
  const devMenu = ui.createMenu('üõ†Ô∏è –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞');
  devMenu.addItem('–í–∫–ª—é—á–∏—Ç—å', 'enableDevMode');
  devMenu.addItem('–í—ã–∫–ª—é—á–∏—Ç—å', 'disableDevMode');
  menu.addSubMenu(devMenu);
  
  const triggerSubMenu = ui.createMenu('üîÑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º');
  triggerSubMenu.addItem('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ (5 –º–∏–Ω)', 'createTrigger5Min');
  triggerSubMenu.addItem('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ (30 –º–∏–Ω)', 'createTrigger30Min');
  triggerSubMenu.addItem('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ (1 —á–∞—Å)', 'createTrigger1Hour');
  triggerSubMenu.addSeparator();
  triggerSubMenu.addItem('‚ùå –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞', 'deleteAllTriggers');
  menu.addSubMenu(triggerSubMenu);
  
  menu.addSeparator();
  menu.addItem('üêû –ü–æ–∫–∞–∑–∞—Ç—å/–°–∫—Ä—ã—Ç—å –ª–æ–≥ –æ—Ç–ª–∞–¥–∫–∏', 'toggleLogSheet');
  menu.addToUi();
  updateDevModeStatus();
}

// ============ DEV MODE ============
function setDevMode(enabled) {
  PropertiesService.getUserProperties().setProperty(CONFIG.DEV_MODE_KEY, enabled);
  const status = enabled ? '–í–ö–õ–Æ–ß–ï–ù' : '–í–´–ö–õ–Æ–ß–ï–ù';
  log(`–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ ${status}.`);
  SpreadsheetApp.getUi().alert(`–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ ${status}.`);
  updateDevModeStatus();
}

function enableDevMode() { setDevMode('true'); }
function disableDevMode() { setDevMode('false'); }

function isDevMode() {
  return PropertiesService.getUserProperties().getProperty(CONFIG.DEV_MODE_KEY) === 'true';
}

function updateDevModeStatus() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(CONFIG.SHEETS.TEMPLATES);
  if (sheet) {
    sheet.getRange("D1").setValue(isDevMode() ? "–†–ï–ñ–ò–ú –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–ê: –í–ö–õ" : "–†–ï–ñ–ò–ú –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–ê: –í–´–ö–õ")
         .setFontWeight("bold")
         .setFontColor(isDevMode() ? "#EA4335" : "#34A853");
  }
}

// ============ –û–ë–û–ì–ê–©–ï–ù–ò–ï –ù–ê–ó–í–ê–ù–ò–Ø–ú–ò –¢–û–í–ê–†–û–í ============

/**
 * WB: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ nmId —á–µ—Ä–µ–∑ Content API
 * @param {Array} nmIds - –ú–∞—Å—Å–∏–≤ nmId —Ç–æ–≤–∞—Ä–æ–≤
 * @param {string} apiKey - WB API –∫–ª—é—á
 * @returns {Object} –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ {nmId: –Ω–∞–∑–≤–∞–Ω–∏–µ}
 */
function getWbProductNames(nmIds, apiKey) {
    if (!nmIds || nmIds.length === 0) return {};
    
    // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    const uniqueNmIds = [...new Set(nmIds)];
    log(`[WB Products] üè∑Ô∏è –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è ${uniqueNmIds.length} —Ç–æ–≤–∞—Ä–æ–≤...`);
    
    const url = 'https://suppliers-api.wildberries.ru/content/v2/cards/cursor/list';
    const payload = {
        filter: {
            nmID: uniqueNmIds
        },
        limit: Math.min(uniqueNmIds.length, 100) // WB –ª–∏–º–∏—Ç
    };
    
    try {
        const response = UrlFetchApp.fetch(url, {
            method: 'POST',
            headers: { 
                'Authorization': apiKey,
                'Content-Type': 'application/json'
            },
            payload: JSON.stringify(payload),
            muteHttpExceptions: true
        });
        
        const responseCode = response.getResponseCode();
        const responseBody = response.getContentText();
        
        if (responseCode !== 200) {
            log(`[WB Products] ‚ùå –û–®–ò–ë–ö–ê –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π: ${responseCode}. ${responseBody}`);
            // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —á–∞—Å—Ç—ã—Ö –æ—à–∏–±–æ–∫ API
            if (responseCode === 401) {
                log(`[WB Products] ‚ùå –ö–†–ò–¢–ò–ß–ù–û: –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á –¥–ª—è Content API`);
            } else if (responseCode === 403) {
                log(`[WB Products] ‚ùå –ö–†–ò–¢–ò–ß–ù–û: API –∫–ª—é—á –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ Content API`);
            } else if (responseCode === 404) {
                log(`[WB Products] ‚ùå –ö–†–ò–¢–ò–ß–ù–û: Content API endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏–ª—Å—è URL.`);
            } else if (responseCode === 429) {
                log(`[WB Products] ‚ùå –ü–†–ï–í–´–®–ï–ù –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ Content API. –ù—É–∂–Ω–∞ –ø–∞—É–∑–∞.`);
            }
            return {};
        }
        
        const json = JSON.parse(responseBody);
        const cards = json.data?.cards || [];
        
        const productNames = {};
        cards.forEach(card => {
            if (card.nmID && card.name) {
                productNames[card.nmID] = card.name;
            }
        });
        
        log(`[WB Products] ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${Object.keys(productNames).length} –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤`);
        return productNames;
        
    } catch (e) {
        log(`[WB Products] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${e.message}`);
        // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ DNS –æ—à–∏–±–æ–∫
        if (e.message.includes('DNS') || e.message.includes('resolve')) {
            log(`[WB Products] ‚ùå DNS –û–®–ò–ë–ö–ê: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å suppliers-api.wildberries.ru. –í–æ–∑–º–æ–∂–Ω–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é.`);
        }
        return {};
    }
}

/**
 * Ozon: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ offer_id —á–µ—Ä–µ–∑ Product API
 * @param {Array} offerIds - –ú–∞—Å—Å–∏–≤ offer_id —Ç–æ–≤–∞—Ä–æ–≤
 * @param {string} clientId - Ozon Client ID
 * @param {string} apiKey - Ozon API –∫–ª—é—á
 * @returns {Object} –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ {offer_id: –Ω–∞–∑–≤–∞–Ω–∏–µ}
 */
function getOzonProductNames(offerIds, clientId, apiKey) {
    if (!offerIds || offerIds.length === 0) return {};
    
    // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ offer_id
    const uniqueOfferIds = [...new Set(offerIds)].filter(id => {
        // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–æ–≤—ã–µ offer_id –∏ –∏—Å–∫–ª—é—á–∞–µ–º —á–∏—Å–ª–æ–≤—ã–µ sku
        if (!id || typeof id !== 'string') return false;
        // –ò—Å–∫–ª—é—á–∞–µ–º —á–∏—Å—Ç–æ —á–∏—Å–ª–æ–≤—ã–µ ID (—ç—Ç–æ sku, –Ω–µ offer_id)
        if (/^\d+$/.test(id)) return false;
        return true;
    });
    
    log(`[Ozon Products] üè∑Ô∏è –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è ${uniqueOfferIds.length} —Ç–æ–≤–∞—Ä–æ–≤ (–æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ ${offerIds.length - uniqueOfferIds.length} –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö ID)...`);
    
    if (uniqueOfferIds.length === 0) {
        log(`[Ozon Products] ‚ö†Ô∏è –ù–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö offer_id –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞–∑–≤–∞–Ω–∏–π`);
        return {};
    }
    
    const url = 'https://api-seller.ozon.ru/v3/product/list';
    const payload = {
        filter: {
            offer_id: uniqueOfferIds
        },
        last_id: "",
        limit: Math.min(uniqueOfferIds.length, 100) // Ozon –ª–∏–º–∏—Ç
    };
    
    try {
        const response = UrlFetchApp.fetch(url, {
            method: 'POST',
            headers: { 
                'Client-Id': clientId, 
                'Api-Key': apiKey,
                'Content-Type': 'application/json'
            },
            payload: JSON.stringify(payload),
            muteHttpExceptions: true
        });
        
        const responseCode = response.getResponseCode();
        const responseBody = response.getContentText();
        
        if (responseCode !== 200) {
            log(`[Ozon Products] ‚ùå –û–®–ò–ë–ö–ê –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π: ${responseCode}. ${responseBody}`);
            return {};
        }
        
        const json = JSON.parse(responseBody);
        const items = json.result?.items || [];
        
        const productNames = {};
        items.forEach(item => {
            if (item.offer_id && item.name) {
                productNames[item.offer_id] = item.name;
            }
        });
        
        log(`[Ozon Products] ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${Object.keys(productNames).length} –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤`);
        return productNames;
        
    } catch (e) {
        log(`[Ozon Products] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${e.message}`);
        return {};
    }
}

// ============ –î–ê–¢–ê –£–¢–ò–õ–ò–¢–´ ============

/**
 * –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–∞—Ç—ã –≤ Unix timestamp –¥–ª—è WB API
 * @param {string} dateString - –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "YYYY-MM-DD"
 * @returns {number} Unix timestamp
 */
function getUnixTimestamp(dateString) {
    return Math.floor(new Date(dateString).getTime() / 1000);
}

/**
 * –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–∞—Ç—ã –≤ RFC3339 —Ñ–æ—Ä–º–∞—Ç –¥–ª—è Ozon API
 * @param {string} dateString - –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "YYYY-MM-DD" 
 * @returns {string} RFC3339 —Ñ–æ—Ä–º–∞—Ç
 */
function formatDateForOzon(dateString) {
    return new Date(dateString + 'T00:00:00.000Z').toISOString();
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç (–ø–æ—Å–ª–µ–¥–Ω–∏–µ N –¥–Ω–µ–π)
 * @param {number} days - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –Ω–∞–∑–∞–¥
 * @returns {Object} {dateFrom, dateTo}
 */
function getDateRange(days = 30) {
    const today = new Date();
    const dateFrom = new Date(today.getTime() - (days * 24 * 60 * 60 * 1000));
    
    return {
        dateFrom: dateFrom.toISOString().split('T')[0], // YYYY-MM-DD
        dateTo: today.toISOString().split('T')[0]       // YYYY-MM-DD
    };
}

// ============ WB - –ü–†–û–°–¢–ê–Ø –ü–ê–ì–ò–ù–ê–¶–ò–Ø ============
// üöÄ –í–°–ï –°–õ–û–ñ–ù–´–ï –§–£–ù–ö–¶–ò–ò –£–î–ê–õ–ï–ù–´! –û—Å—Ç–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è –≤ getWbFeedbacks() –Ω–∏–∂–µ

// ============ HELPER FUNCTIONS FOR API TESTING ============
function testWbContentApiAccess(apiKey) {
  try {
    const url = 'https://suppliers-api.wildberries.ru/content/v2/cards/cursor/list';
    const payload = { limit: 1 }; // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç-–∑–∞–ø—Ä–æ—Å
    
    const response = UrlFetchApp.fetch(url, {
      method: 'POST',
      headers: { 
        'Authorization': apiKey,
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify(payload),
      muteHttpExceptions: true
    });
    
    const code = response.getResponseCode();
    log(`[WB Content API Test] –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${code}`);
    
    return code === 200;
  } catch (e) {
    log(`[WB Content API Test] –û—à–∏–±–∫–∞: ${e.message}`);
    return false;
  }
}

function testOzonProductApiAccess(clientId, apiKey) {
  try {
    const url = 'https://api-seller.ozon.ru/v3/product/list';
    const payload = { limit: 1, last_id: "", filter: {} }; // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç-–∑–∞–ø—Ä–æ—Å
    
    const response = UrlFetchApp.fetch(url, {
      method: 'POST',
      headers: { 
        'Client-Id': clientId,
        'Api-Key': apiKey,
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify(payload),
      muteHttpExceptions: true
    });
    
    const code = response.getResponseCode();
    log(`[Ozon Product API Test] –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${code}`);
    
    return code === 200;
  } catch (e) {
    log(`[Ozon Product API Test] –û—à–∏–±–∫–∞: ${e.message}`);
    return false;
  }
}

// ============ CONNECTION TESTER ============
function testStoreConnection(credentials, marketplace) {
  log(`[–¢–µ—Å—Ç] –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è ${marketplace}.`);
  if (!marketplace) {
    return { success: false, message: '–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å.' };
  }
  try {
    if (marketplace === 'Wildberries') {
      if (!credentials.apiKey) return { success: false, message: 'API –∫–ª—é—á –Ω–µ —É–∫–∞–∑–∞–Ω.' };
      
      // –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –∫–ª—é—á–∞
      if (!credentials.apiKey.trim() || credentials.apiKey.length < 10) {
        return { success: false, message: 'API –∫–ª—é—á —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∏–ª–∏ –ø—É—Å—Ç–æ–π.' };
      }
      
      const url = 'https://feedbacks-api.wildberries.ru/api/v1/feedbacks?isAnswered=false&take=1&skip=0';
      const response = UrlFetchApp.fetch(url, { method: 'GET', headers: { 'Authorization': credentials.apiKey }, muteHttpExceptions: true });
      const code = response.getResponseCode();
      const responseBody = response.getContentText();
      
      log(`[–¢–µ—Å—Ç WB] –û—Ç–≤–µ—Ç: ${code}. –¢–µ–ª–æ: ${responseBody.substring(0, 200)}...`);
      
      if (code === 200) {
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º Content API –¥–æ—Å—Ç—É–ø
        const contentTestResult = testWbContentApiAccess(credentials.apiKey);
        const mainMessage = '–£—Å–ø–µ—à–Ω–æ! –ö–ª—é—á –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤—ã–º –æ—Ç–∑—ã–≤–∞–º.';
        if (contentTestResult) {
          return { success: true, message: mainMessage + ' Content API —Ç–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–µ–Ω.' };
        } else {
          return { success: true, message: mainMessage + ' ‚ö†Ô∏è Content API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –±—É–¥—É—Ç "–ù–µ —É–∫–∞–∑–∞–Ω–æ".' };
        }
      }
      if (code === 401) return { success: false, message: '–û—à–∏–±–∫–∞ 401: –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á.' };
      if (code === 403) return { success: false, message: '–û—à–∏–±–∫–∞ 403: API –∫–ª—é—á –Ω–µ –∏–º–µ–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π.' };
      if (code === 429) return { success: false, message: '–û—à–∏–±–∫–∞ 429: –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' };
      return { success: false, message: `–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${code}. ${responseBody.substring(0, 100)}...` };
    } else if (marketplace === 'Ozon') {
      if (!credentials.clientId || !credentials.apiKey) return { success: false, message: 'Client ID –∏ API Key –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–∫–∞–∑–∞–Ω—ã.' };
      
      // –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –∫–ª—é—á–µ–π
      if (!credentials.clientId.trim() || credentials.clientId.length < 5) {
        return { success: false, message: 'Client ID —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∏–ª–∏ –ø—É—Å—Ç–æ–π.' };
      }
      if (!credentials.apiKey.trim() || credentials.apiKey.length < 10) {
        return { success: false, message: 'API Key —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∏–ª–∏ –ø—É—Å—Ç–æ–π.' };
      }
      
      const url = 'https://api-seller.ozon.ru/v1/review/list';
      const payload = { limit: 20 };
      const response = UrlFetchApp.fetch(url, {
        method: 'POST',
        headers: { 'Client-Id': credentials.clientId, 'Api-Key': credentials.apiKey },
        contentType: 'application/json',
        payload: JSON.stringify(payload),
        muteHttpExceptions: true
      });
      const code = response.getResponseCode();
      const responseBody = response.getContentText();
      log(`[–¢–µ—Å—Ç Ozon] –û—Ç–≤–µ—Ç: ${code}. –¢–µ–ª–æ: ${responseBody.substring(0, 300)}...`);
      
      if (code === 200) {
        try {
          const json = JSON.parse(responseBody);
          // –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞ - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
          if (json.reviews !== undefined || (json.result && json.result.reviews) || (json.data && json.data.reviews)) {
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º Product API –¥–æ—Å—Ç—É–ø
            const productTestResult = testOzonProductApiAccess(credentials.clientId, credentials.apiKey);
            const mainMessage = '–£—Å–ø–µ—à–Ω–æ! –ö–ª—é—á–∏ –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø –∫ –æ—Ç–∑—ã–≤–∞–º.';
            if (productTestResult) {
              return { success: true, message: mainMessage + ' Product API —Ç–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–µ–Ω.' };
            } else {
              return { success: true, message: mainMessage + ' ‚ö†Ô∏è Product API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –±—É–¥—É—Ç "–ù–µ —É–∫–∞–∑–∞–Ω–æ".' };
            }
          } else {
            return { success: false, message: 'API –∏–∑–º–µ–Ω–∏–ª—Å—è: –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞. –ü–æ–ª—É—á–µ–Ω—ã –∫–ª—é—á–∏: ' + Object.keys(json).join(', ') };
          }
        } catch (e) {
          return { success: false, message: '–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –æ—Ç–≤–µ—Ç–∞: ' + e.message };
        }
      }
      if (code === 401) return { success: false, message: '–û—à–∏–±–∫–∞ 401: –ù–µ–≤–µ—Ä–Ω—ã–π Api-Key –∏–ª–∏ Client-Id.' };
      if (code === 403) {
        try {
          const json = JSON.parse(responseBody);
          return { success: false, message: `–û—à–∏–±–∫–∞ 403: ${json.message || '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ API –∫–ª—é—á–∞.'}` };
        } catch (e) {
          return { success: false, message: '–û—à–∏–±–∫–∞ 403: –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Client-Id –∏ API Key.' };
        }
      }
      if (code === 404) return { success: false, message: '–û—à–∏–±–∫–∞ 404: –ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å –∑–∞–ø—Ä–æ—Å–∞. –í–æ–∑–º–æ–∂–Ω–æ, API Ozon –∏–∑–º–µ–Ω–∏–ª—Å—è.' };
      if (code === 429) return { success: false, message: '–û—à–∏–±–∫–∞ 429: –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' };
      if (code >= 500) return { success: false, message: `–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ Ozon (${code}). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.` };
      return { success: false, message: `–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${code}. ${responseBody.substring(0, 100)}...` };
    }
    return { success: false, message: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å.' };
  } catch (e) {
    log(`[–¢–µ—Å—Ç] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${e.stack}`);
    return { success: false, message: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${e.message}` };
  }
}

// ============ üöÄ PROGRESS MEMORY FUNCTIONS ============

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤
 * @returns {Object} –û–±—ä–µ–∫—Ç —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –∫–∞–∂–¥–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
 */
function getProcessingProgress() {
  try {
    const progressJson = PropertiesService.getUserProperties().getProperty(CONFIG.PROGRESS_KEY);
    if (!progressJson) return {};
    
    const progress = JSON.parse(progressJson);
    const now = Date.now();
    
    // üßπ –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å (—Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤)
    const cleanProgress = {};
    for (const [storeId, storeProgress] of Object.entries(progress)) {
      const age = now - (storeProgress.lastUpdated || 0);
      const maxAge = CONFIG.PROGRESS.RESET_PROGRESS_AFTER_HOURS * 60 * 60 * 1000;
      
      if (age < maxAge) {
        cleanProgress[storeId] = storeProgress;
      } else {
        log(`[Progress] üßπ –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ ${storeId} (–≤–æ–∑—Ä–∞—Å—Ç ${Math.round(age/1000/3600)} —á–∞—Å–æ–≤)`);
      }
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å
    if (Object.keys(cleanProgress).length !== Object.keys(progress).length) {
      saveProcessingProgress(cleanProgress);
    }
    
    return cleanProgress;
  } catch (e) {
    log(`[Progress] ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: ${e.message}`);
    return {};
  }
}

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤
 * @param {Object} progress - –û–±—ä–µ–∫—Ç —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –∫–∞–∂–¥–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
 */
function saveProcessingProgress(progress) {
  try {
    const progressJson = JSON.stringify(progress);
    PropertiesService.getUserProperties().setProperty(CONFIG.PROGRESS_KEY, progressJson);
    log(`[Progress] üíæ –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω –¥–ª—è ${Object.keys(progress).length} –º–∞–≥–∞–∑–∏–Ω–æ–≤`);
  } catch (e) {
    log(`[Progress] ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: ${e.message}`);
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
 * @param {string} storeId - ID –º–∞–≥–∞–∑–∏–Ω–∞
 * @returns {Object} –ü—Ä–æ–≥—Ä–µ—Å—Å –º–∞–≥–∞–∑–∏–Ω–∞ –∏–ª–∏ null
 */
function getStoreProgress(storeId) {
  const allProgress = getProcessingProgress();
  return allProgress[storeId] || null;
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
 * @param {string} storeId - ID –º–∞–≥–∞–∑–∏–Ω–∞
 * @param {Object} storeProgress - –ù–æ–≤—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –º–∞–≥–∞–∑–∏–Ω–∞
 */
function updateStoreProgress(storeId, storeProgress) {
  const allProgress = getProcessingProgress();
  allProgress[storeId] = {
    ...storeProgress,
    lastUpdated: Date.now()
  };
  saveProcessingProgress(allProgress);
}

/**
 * –°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ (–Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞)
 * @param {string} storeId - ID –º–∞–≥–∞–∑–∏–Ω–∞
 */
function resetStoreProgress(storeId) {
  const allProgress = getProcessingProgress();
  delete allProgress[storeId];
  saveProcessingProgress(allProgress);
  log(`[Progress] üîÑ –°–±—Ä–æ—à–µ–Ω –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ ${storeId}`);
}

/**
 * üöÄ –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
 * @param {Object} store - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–∞–≥–∞–∑–∏–Ω–∞
 * @param {boolean} isAnswered - –¢–∏–ø –æ—Ç–∑—ã–≤–æ–≤ (–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ/–Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ)
 * @returns {number} –ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–ª–∏ 0 –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å–Ω–∞—á–∞–ª–∞
 */
function getStartingPageForStore(store, isAnswered) {
  const progress = getStoreProgress(store.id);
  if (!progress) {
    log(`[${store.name}] üÜï –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ - –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã`);
    return 0;
  }
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª—é—á –¥–ª—è —Ç–∏–ø–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
  const progressKey = isAnswered ? 'answeredReviews' : 'unansweredReviews';
  const typeProgress = progress[progressKey];
  
  if (!typeProgress) {
    log(`[${store.name}] üÜï –ù–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è ${isAnswered ? '–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö' : '–Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö'} –æ—Ç–∑—ã–≤–æ–≤ - –Ω–∞—á–∏–Ω–∞–µ–º —Å–Ω–∞—á–∞–ª–∞`);
    return 0;
  }
  
  const lastPage = typeProgress.lastProcessedPage || 0;
  const completedAt = typeProgress.completedAt;
  
  // –ï—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –º–µ–Ω–µ–µ —á–µ–º 1 —á–∞—Å –Ω–∞–∑–∞–¥, –Ω–∞—á–∏–Ω–∞–µ–º —Å–Ω–∞—á–∞–ª–∞
  if (completedAt && (Date.now() - completedAt < 60 * 60 * 1000)) {
    log(`[${store.name}] ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ ${isAnswered ? '–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö' : '–Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö'} –æ—Ç–∑—ã–≤–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –Ω–µ–¥–∞–≤–Ω–æ - –Ω–∞—á–∏–Ω–∞–µ–º —Å–Ω–∞—á–∞–ª–∞`);
    return 0;
  }
  
  const nextPage = lastPage + 1;
  log(`[${store.name}] üìñ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É ${isAnswered ? '–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö' : '–Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö'} –æ—Ç–∑—ã–≤–æ–≤ —Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${nextPage}`);
  return nextPage;
}

/**
 * üöÄ –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
 * @param {Object} store - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–∞–≥–∞–∑–∏–Ω–∞
 * @param {boolean} isAnswered - –¢–∏–ø –æ—Ç–∑—ã–≤–æ–≤
 * @param {number} pageNumber - –ù–æ–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @param {boolean} isCompleted - –ó–∞–≤–µ—Ä—à–µ–Ω–∞ –ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞
 */
function updateStorePageProgress(store, isAnswered, pageNumber, isCompleted = false) {
  const allProgress = getProcessingProgress();
  
  if (!allProgress[store.id]) {
    allProgress[store.id] = { lastUpdated: Date.now() };
  }
  
  const progressKey = isAnswered ? 'answeredReviews' : 'unansweredReviews';
  
  if (!allProgress[store.id][progressKey]) {
    allProgress[store.id][progressKey] = {};
  }
  
  allProgress[store.id][progressKey].lastProcessedPage = pageNumber;
  allProgress[store.id][progressKey].lastUpdated = Date.now();
  
  if (isCompleted) {
    allProgress[store.id][progressKey].completedAt = Date.now();
    log(`[${store.name}] ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ ${isAnswered ? '–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö' : '–Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö'} –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${pageNumber}`);
  } else {
    delete allProgress[store.id][progressKey].completedAt; // –£–¥–∞–ª—è–µ–º —Ñ–ª–∞–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –µ—Å–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
    if (pageNumber % 5 === 0) { // –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–µ 5 —Å—Ç—Ä–∞–Ω–∏—Ü
      log(`[${store.name}] üìÑ –û–±—Ä–∞–±–æ—Ç–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber} (${isAnswered ? '–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ' : '–Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ'} –æ—Ç–∑—ã–≤—ã)`);
    }
  }
  
  allProgress[store.id].lastUpdated = Date.now();
  saveProcessingProgress(allProgress);
}

// ============ LOGGING & INITIAL SETUP ============
function log(message) {
  try {
    const logSheet = createOrGetLogSheet_();
    const timestamp = new Date().toLocaleString('ru-RU', { hour12: false });
    logSheet.insertRowBefore(2).getRange(2, 1, 1, 2).setValues([[timestamp, message]]);
    
    const lastRow = logSheet.getLastRow();
    if (lastRow > CONFIG.LOG_MAX_ROWS) {
      logSheet.deleteRows(CONFIG.LOG_MAX_ROWS + 1, lastRow - CONFIG.LOG_MAX_ROWS);
    }
  } catch (e) {
    console.error(`Failed to write to log sheet: ${e.stack}. Log message was: "${message}".`);
  }
}

function createOrGetLogSheet_() {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  let sheet = ss.getSheetByName(CONFIG.LOG_SHEET_NAME);
  if (!sheet) {
    sheet = ss.insertSheet(CONFIG.LOG_SHEET_NAME, ss.getNumSheets());
    sheet.getRange('A1:B1').setValues([['–í—Ä–µ–º—è', '–°–æ–æ–±—â–µ–Ω–∏–µ']])
           .setFontWeight('bold').setBackground('#f3f3f3');
    sheet.setColumnWidth(1, 150);
    sheet.setColumnWidth(2, 800);
    sheet.hideSheet();
  }
  return sheet;
}

function toggleLogSheet() {
  const sheet = createOrGetLogSheet_();
  if (sheet.isSheetHidden()) {
    sheet.showSheet();
    SpreadsheetApp.getActiveSpreadsheet().setActiveSheet(sheet);
  } else {
    sheet.hideSheet();
  }
}

function initialSetup() {
  log('–ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...');
  const templateSheet = createOrGetSheet(CONFIG.SHEETS.TEMPLATES, ['–®–∞–±–ª–æ–Ω –æ—Ç–≤–µ—Ç–∞', '–î–ª—è –æ—Ü–µ–Ω–∫–∏ (4, 5, –∏–ª–∏ 4-5)']);
  fillInitialTemplates();
  updateDevModeStatus();
  log('–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
  SpreadsheetApp.getUi().alert('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞', `–°–æ–∑–¥–∞–Ω –ª–∏—Å—Ç "${CONFIG.SHEETS.TEMPLATES}" –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.`, SpreadsheetApp.getUi().ButtonSet.OK);
}

// ============ UI FUNCTIONS ============
function showStoreManagerSidebar() {
  const html = HtmlService.createTemplateFromFile('StoreManagerSidebar').evaluate().setTitle('üè™ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏').setWidth(450);
  SpreadsheetApp.getUi().showSidebar(html);
}

function include(filename) {
  return HtmlService.createHtmlOutputFromFile(filename).getContent();
}

// ============ SORTING FUNCTIONS ============
/**
 * Sorts a sheet by date column (newest first by default)
 * @param {GoogleAppsScript.Spreadsheet.Sheet} sheet - The sheet to sort
 * @param {boolean} ascending - Whether to sort ascending (oldest first) or descending (newest first)
 */
function sortSheetByDate(sheet, ascending = false) {
  if (sheet.getLastRow() <= 2) return; // –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ (—Ç–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –º–∞–∫—Å–∏–º—É–º –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –¥–∞–Ω–Ω—ã—Ö)
  
  const dateColumnIndex = CONFIG.HEADERS.indexOf('–î–∞—Ç–∞ –æ—Ç–∑—ã–≤–∞') + 1;
  if (dateColumnIndex === 0) {
    log('–û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω —Å—Ç–æ–ª–±–µ—Ü "–î–∞—Ç–∞ –æ—Ç–∑—ã–≤–∞" –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.');
    return;
  }
  
  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ (–∏—Å–∫–ª—é—á–∞—è –∑–∞–≥–æ–ª–æ–≤–æ–∫) –ø–æ —Å—Ç–æ–ª–±—Ü—É —Å –¥–∞—Ç–æ–π
  const range = sheet.getRange(2, 1, sheet.getLastRow() - 1, CONFIG.HEADERS.length);
  range.sort([{column: dateColumnIndex, ascending: ascending}]);
  
  const sortOrder = ascending ? '—Å—Ç–∞—Ä—ã–µ —Å–Ω–∞—á–∞–ª–∞' : '–Ω–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞';
  log(`–õ–∏—Å—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ –¥–∞—Ç–µ (${sortOrder}).`);
}

/**
 * üöÄ –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ª–∏—Å—Ç–∞ –ø–æ –¥–∞—Ç–µ (—Å—Ç–∞—Ä—ã–µ –æ—Ç–∑—ã–≤—ã —Å–Ω–∞—á–∞–ª–∞)
 * @param {GoogleAppsScript.Spreadsheet.Sheet} sheet - The sheet to sort
 */
function sortSheetByDateOldestFirst(sheet) {
  return sortSheetByDate(sheet, true);
}

/**
 * üöÄ –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
 * @param {GoogleAppsScript.Spreadsheet.Sheet} sheet - The sheet to sort
 * @param {Object} store - Store configuration with sorting preferences
 */
function applySortingPreferences(sheet, store) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞
  const sortOldestFirst = store.settings?.sortOldestFirst || false;
  
  if (sortOldestFirst) {
    log(`[${store.name}] –ü—Ä–∏–º–µ–Ω–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ —Å–Ω–∞—á–∞–ª–∞.`);
    sortSheetByDateOldestFirst(sheet);
  } else {
    log(`[${store.name}] –ü—Ä–∏–º–µ–Ω–µ–Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: –Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã —Å–Ω–∞—á–∞–ª–∞.`);
    sortSheetByDate(sheet, false); // –ù–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è)
  }
}

/**
 * üöÄ –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–æ–≤—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ –≤ –∫–æ–ª–æ–Ω–∫–µ ‚Ññ
 * @param {GoogleAppsScript.Spreadsheet.Sheet} sheet - –õ–∏—Å—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 */
function updateRowNumbers(sheet) {
  if (sheet.getLastRow() <= 2) return; // –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –Ω—É–º–µ—Ä–∞—Ü–∏–∏
  
  const numberColumnIndex = CONFIG.HEADERS.indexOf('‚Ññ') + 1;
  if (numberColumnIndex === 0) {
    log('–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ "‚Ññ" –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–æ–≤—ã—Ö –Ω–æ–º–µ—Ä–æ–≤.');
    return;
  }
  
  const dataRowsCount = sheet.getLastRow() - 1; // –ò—Å–∫–ª—é—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
  const numbers = [];
  
  // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –ø–æ—Ä—è–¥–∫–æ–≤—ã—Ö –Ω–æ–º–µ—Ä–æ–≤: 1, 2, 3, ...
  for (let i = 1; i <= dataRowsCount; i++) {
    numbers.push([i]);
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É —Å –ø–æ—Ä—è–¥–∫–æ–≤—ã–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏
  if (numbers.length > 0) {
    sheet.getRange(2, numberColumnIndex, numbers.length, 1).setValues(numbers);
  }
}

// ============ DATE FILTERING FUNCTION ============
/**
 * Filters feedbacks based on store's start date setting
 * @param {Array} feedbacks - Array of feedback objects
 * @param {Object} store - Store configuration with settings
 * @returns {Array} Filtered feedbacks
 */
function filterFeedbacksByDate(feedbacks, store) {
  if (!store.settings || !store.settings.startDate) {
    return feedbacks; // No date filter, return all feedbacks
  }
  
  const startDate = new Date(store.settings.startDate);
  if (isNaN(startDate.getTime())) {
    log(`[${store.name}] –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø–æ–∏—Å–∫–∞ –æ—Ç–∑—ã–≤–æ–≤: ${store.settings.startDate}. –§–∏–ª—å—Ç—Ä –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω.`);
    return feedbacks;
  }
  
  // Check if start date is in the future
  const today = new Date();
  today.setHours(0, 0, 0, 0); // Reset to start of day for fair comparison
  
  if (startDate > today) {
    log(`[${store.name}] –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø–æ–∏—Å–∫–∞ (${store.settings.startDate}) –≤ –±—É–¥—É—â–µ–º! –í—Å–µ –æ—Ç–∑—ã–≤—ã –±—É–¥—É—Ç –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞.`);
    // Continue with filtering but add the warning
  }
  
  const filteredFeedbacks = feedbacks.filter(feedback => {
    const feedbackDate = new Date(feedback.createdDate);
    return feedbackDate >= startDate;
  });
  
  if (filteredFeedbacks.length !== feedbacks.length) {
    log(`[${store.name}] –ü—Ä–∏–º–µ–Ω–µ–Ω —Ñ–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ: –æ—Å—Ç–∞–ª–æ—Å—å ${filteredFeedbacks.length} –∏–∑ ${feedbacks.length} –æ—Ç–∑—ã–≤–æ–≤ (–Ω–∞—á–∏–Ω–∞—è —Å ${store.settings.startDate}).`);
    
    // Additional warning if no feedbacks remain and start date is future
    if (filteredFeedbacks.length === 0 && startDate > today) {
      log(`[${store.name}] ‚ùå –í–ù–ò–ú–ê–ù–ò–ï: –î–∞—Ç–∞ —Ñ–∏–ª—å—Ç—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ –±—É–¥—É—â–µ–º! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –¥–∞—Ç—É –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –º–∞–≥–∞–∑–∏–Ω–∞.`);
    }
  }
  
  return filteredFeedbacks;
}

// ============ RATING FILTERING FUNCTION ============
/**
 * Filters feedbacks to include only 4 and 5 star reviews
 * @param {Array} feedbacks - Array of feedback objects
 * @param {Object} store - Store configuration
 * @returns {Array} Filtered feedbacks (only 4-5 stars)
 */
function filterFeedbacksByRating(feedbacks, store) {
  const originalCount = feedbacks.length;
  const targetRatings = [4, 5]; // Only 4 and 5 star reviews
  
  const filteredFeedbacks = feedbacks.filter(feedback => {
    return targetRatings.includes(feedback.rating);
  });
  
  if (filteredFeedbacks.length !== originalCount) {
    const filtered = originalCount - filteredFeedbacks.length;
    log(`[${store.name}] –ü—Ä–∏–º–µ–Ω–µ–Ω —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É (4-5 –∑–≤–µ–∑–¥): –æ—Å—Ç–∞–ª–æ—Å—å ${filteredFeedbacks.length} –∏–∑ ${originalCount} –æ—Ç–∑—ã–≤–æ–≤ (–∏—Å–∫–ª—é—á–µ–Ω–æ ${filtered} –æ—Ç–∑—ã–≤–æ–≤ —Å –Ω–∏–∑–∫–∏–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º).`);
  }
  
  return filteredFeedbacks;
}

// ============ EMPTY REVIEW FILTERING FUNCTION ============
/**
 * Filters out reviews without meaningful text content
 * @param {Array} feedbacks - Array of feedback objects
 * @param {Object} store - Store configuration
 * @returns {Array} Filtered feedbacks (only those with meaningful text)
 */
function filterFeedbacksByContent(feedbacks, store) {
  const originalCount = feedbacks.length;
  const emptyReviews = []; // –°–æ–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ –æ—Ç–∑—ã–≤—ã –¥–ª—è –ø–∞—á–∫–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  
  const filteredFeedbacks = feedbacks.filter(feedback => {
    const text = (feedback.text || '').trim();
    
    // Skip reviews with no text or very short text
    if (!text || text === '(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)' || text.length < CONFIG.MIN_REVIEW_TEXT_LENGTH) {
      // –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—É—Å—Ç—ã—Ö –æ—Ç–∑—ã–≤–∞—Ö –≤–º–µ—Å—Ç–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ
      emptyReviews.push({
        id: feedback.id,
        text: text || '(–Ω–µ—Ç)',
        date: feedback.createdDate
      });
      return false;
    }
    
    return true;
  });
  
  if (filteredFeedbacks.length !== originalCount) {
    const skippedCount = originalCount - filteredFeedbacks.length;
    log(`[${store.name}] –ü—Ä–∏–º–µ–Ω–µ–Ω —Ñ–∏–ª—å—Ç—Ä –ø–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é: –æ—Å—Ç–∞–ª–æ—Å—å ${filteredFeedbacks.length} –∏–∑ ${originalCount} –æ—Ç–∑—ã–≤–æ–≤ (–∏—Å–∫–ª—é—á–µ–Ω–æ ${skippedCount} –ø—É—Å—Ç—ã—Ö –æ—Ç–∑—ã–≤–æ–≤).`);
    
    // üöÄ –£–õ–£–ß–®–ï–ù–ò–ï: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—É—Å—Ç—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å—å—é
    if (skippedCount > 0) {
      log(`[${store.name}] üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É—Å—Ç—ã—Ö –æ—Ç–∑—ã–≤–æ–≤: –≤—Å–µ–≥–æ ${skippedCount}, –ø—Ä–∏–º–µ—Ä—ã: ${emptyReviews.slice(0, 3).map(r => `ID ${r.id} ("${r.text}")`).join(', ')}${skippedCount > 3 ? ` –∏ –µ—â–µ ${skippedCount - 3}...` : ''}`);
      
      // –í DEV —Ä–µ–∂–∏–º–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤—ã—Ö 10 –ø—É—Å—Ç—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
      if (isDevMode() && skippedCount <= 10) {
        log(`[${store.marketplace} DEBUG] –î–µ—Ç–∞–ª–∏ –ø—É—Å—Ç—ã—Ö –æ—Ç–∑—ã–≤–æ–≤: ${emptyReviews.map(r => `${r.id}("${r.text}")`).join(', ')}`);
      } else if (isDevMode() && skippedCount > 10) {
        log(`[${store.marketplace} DEBUG] –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø—É—Å—Ç—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ (${skippedCount}) –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è. –ü–æ–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä—ã –≤—ã—à–µ.`);
      }
    }
  }
  
  return filteredFeedbacks;
}

// ============ ANSWERED REVIEW FILTERING FUNCTION ============
/**
 * Filters out reviews that already have answers from the store
 * @param {Array} feedbacks - Array of feedback objects
 * @param {Object} store - Store configuration
 * @returns {Array} Filtered feedbacks (only those without store answers)
 */
function filterFeedbacksByAnswer(feedbacks, store) {
  const originalCount = feedbacks.length;
  const answeredReviews = []; // –°–æ–±–∏—Ä–∞–µ–º –æ—Ç–∑—ã–≤—ã —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  
  const filteredFeedbacks = feedbacks.filter(feedback => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–∞–≥–∞–∑–∏–Ω–∞
    const hasAnswer = !!(feedback.hasAnswer);
    
    if (hasAnswer) {
      // –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–∞—Ö
      answeredReviews.push({
        id: feedback.id,
        date: feedback.createdDate,
        rating: feedback.rating
      });
      return false; // –ò—Å–∫–ª—é—á–∞–µ–º –æ—Ç–∑—ã–≤—ã —Å –æ—Ç–≤–µ—Ç–∞–º–∏
    }
    
    return true;
  });
  
  if (filteredFeedbacks.length !== originalCount) {
    const skippedCount = originalCount - filteredFeedbacks.length;
    log(`[${store.name}] –ü—Ä–∏–º–µ–Ω–µ–Ω —Ñ–∏–ª—å—Ç—Ä –ø–æ –Ω–∞–ª–∏—á–∏—é –æ—Ç–≤–µ—Ç–æ–≤: –æ—Å—Ç–∞–ª–æ—Å—å ${filteredFeedbacks.length} –∏–∑ ${originalCount} –æ—Ç–∑—ã–≤–æ–≤ (–∏—Å–∫–ª—é—á–µ–Ω–æ ${skippedCount} —É–∂–µ –æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö).`);
    
    // üöÄ –£–õ–£–ß–®–ï–ù–ò–ï: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
    if (skippedCount > 0) {
      log(`[${store.name}] üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤: –≤—Å–µ–≥–æ ${skippedCount}, –ø—Ä–∏–º–µ—Ä—ã: ${answeredReviews.slice(0, 3).map(r => `ID ${r.id} (—Ä–µ–π—Ç–∏–Ω–≥ ${r.rating})`).join(', ')}${skippedCount > 3 ? ` –∏ –µ—â–µ ${skippedCount - 3}...` : ''}`);
      
      // –í DEV —Ä–µ–∂–∏–º–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤—ã—Ö 5 –æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
      if (isDevMode() && skippedCount <= 5) {
        log(`[${store.marketplace} DEBUG] –î–µ—Ç–∞–ª–∏ –æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤: ${answeredReviews.map(r => `${r.id}(${r.rating}‚òÖ)`).join(', ')}`);
      } else if (isDevMode() && skippedCount > 5) {
        log(`[${store.marketplace} DEBUG] –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ (${skippedCount}) –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è. –ü–æ–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä—ã –≤—ã—à–µ.`);
      }
    }
  }
  
  return filteredFeedbacks;
}

// ============ BATCH PROCESSING FUNCTIONS ============

/**
 * üöÄ –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü–∞—á–∫–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
 * @param {Array} feedbacks - –ú–∞—Å—Å–∏–≤ –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
 * @param {Array} templates - –ú–∞—Å—Å–∏–≤ —à–∞–±–ª–æ–Ω–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤
 * @param {Object} store - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–∞–≥–∞–∑–∏–Ω–∞
 * @param {boolean} devMode - –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
 * @returns {Array} –ú–∞—Å—Å–∏–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏
 */
function processFeedbackBatch(feedbacks, templates, store, devMode) {
  log(`[${store.name}] üöÄ –ü–ê–ß–ö–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê: –Ω–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É ${feedbacks.length} –æ—Ç–∑—ã–≤–æ–≤...`);
  
  const results = [];
  let skippedByRating = 0;
  let noTemplateCount = 0;
  let processedCount = 0;
  let sentCount = 0;
  
  feedbacks.forEach(feedback => {
    const rowData = [
      '', // ‚Ññ - –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –ª–∏—Å—Ç
      feedback.id, 
      new Date(feedback.createdDate), 
      feedback.product.id, 
      feedback.product.name, 
      feedback.product.url, 
      feedback.rating, 
      feedback.text
    ];
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞
    if (!CONFIG.RESPOND_TO_RATINGS.includes(feedback.rating)) {
      rowData.push('', CONFIG.STATUS.SKIPPED_RATING, `–†–µ–π—Ç–∏–Ω–≥ ${feedback.rating} –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –æ—Ç–≤–µ—Ç–∞.`, '');
      results.push({
        rowData: rowData,
        logMessage: `[${store.name}] –ü—Ä–æ–ø—É—â–µ–Ω –æ—Ç–∑—ã–≤ ID: ${feedback.id} (—Ä–µ–π—Ç–∏–Ω–≥ ${feedback.rating}). –î–∞—Ç–∞: ${new Date(feedback.createdDate).toLocaleDateString('ru-RU')}`,
        status: CONFIG.STATUS.SKIPPED_RATING
      });
      skippedByRating++;
      return;
    }
    
    // –ü–æ–¥–±–æ—Ä —à–∞–±–ª–æ–Ω–∞
    const template = selectRandomTemplate(templates, feedback.rating);
    if (!template) {
      rowData.push('', CONFIG.STATUS.NO_TEMPLATE, `–ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π —à–∞–±–ª–æ–Ω –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞ ${feedback.rating}.`, '');
      results.push({
        rowData: rowData,
        logMessage: `[${store.name}] –ù–µ—Ç —à–∞–±–ª–æ–Ω–∞ –¥–ª—è –æ—Ç–∑—ã–≤–∞ ID: ${feedback.id} (—Ä–µ–π—Ç–∏–Ω–≥ ${feedback.rating}). –î–∞—Ç–∞: ${new Date(feedback.createdDate).toLocaleDateString('ru-RU')}`,
        status: CONFIG.STATUS.NO_TEMPLATE
      });
      noTemplateCount++;
      return;
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
    if (devMode) {
      rowData.push(template, CONFIG.STATUS.PENDING, '', '');
      results.push({
        rowData: rowData,
        logMessage: `[${store.name}] DEV: –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –¥–ª—è –æ—Ç–∑—ã–≤–∞ ID: ${feedback.id}. –î–∞—Ç–∞: ${new Date(feedback.createdDate).toLocaleDateString('ru-RU')}`,
        status: CONFIG.STATUS.PENDING
      });
      processedCount++;
    } else {
      // PROD —Ä–µ–∂–∏–º: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
      const result = sendAnswer(store, feedback.id, template);
      rowData.push(template, result.status, result.error, result.timestamp);
      results.push({
        rowData: rowData,
        logMessage: `[${store.name}] PROD: –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –¥–ª—è ID: ${feedback.id}. –°—Ç–∞—Ç—É—Å: ${result.status}. –î–∞—Ç–∞: ${new Date(feedback.createdDate).toLocaleDateString('ru-RU')}`,
        status: result.status
      });
      if (result.status === CONFIG.STATUS.SENT) {
        sentCount++;
      }
      processedCount++;
    }
  });
  
  // üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–ê–ß–ö–ù–û–ô –û–ë–†–ê–ë–û–¢–ö–ò
  const statsMessage = devMode 
    ? `[${store.name}] üìä –ü–ê–ß–ö–ê –û–ë–†–ê–ë–û–¢–ê–ù–ê: –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ ${processedCount}, –ø—Ä–æ–ø—É—â–µ–Ω–æ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É ${skippedByRating}, –Ω–µ—Ç —à–∞–±–ª–æ–Ω–æ–≤ ${noTemplateCount}`
    : `[${store.name}] üìä –ü–ê–ß–ö–ê –û–ë–†–ê–ë–û–¢–ê–ù–ê: –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${sentCount}/${processedCount}, –ø—Ä–æ–ø—É—â–µ–Ω–æ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É ${skippedByRating}, –Ω–µ—Ç —à–∞–±–ª–æ–Ω–æ–≤ ${noTemplateCount}`;
  
  log(statsMessage);
  
  return results;
}

// ============ CORE PROCESSING LOGIC ============

/**
 * Main function to process new feedback for all active stores.
 */
function processAllStores() {
  const devMode = isDevMode();
  log(`--- –ó–ê–ü–£–°–ö –û–ë–†–ê–ë–û–¢–ö–ò (${devMode ? '–†–ï–ñ–ò–ú –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–ê' : '–ë–û–ï–í–û–ô –†–ï–ñ–ò–ú'}) ---`);
  const allStores = getStores();
  const activeStores = allStores.filter(store => store.isActive);
  if (activeStores.length === 0) {
    log('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏. –ó–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É.');
    return;
  }
  
  log(`–ù–∞–π–¥–µ–Ω–æ ${activeStores.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤.`);
  
  // üöÄ –ò–ù–¢–ï–õ–õ–ï–ö–¢–£–ê–õ–¨–ù–ê–Ø –ë–ê–¢–ß–ï–í–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê
  const maxExecutionTime = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç –ª–∏–º–∏—Ç
  const startTime = Date.now();
  
  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –º–∞–≥–∞–∑–∏–Ω—ã –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
  const wbStores = activeStores.filter(s => s.marketplace === 'Wildberries');
  const ozonStores = activeStores.filter(s => s.marketplace === 'Ozon');
  const otherStores = activeStores.filter(s => s.marketplace !== 'Wildberries' && s.marketplace !== 'Ozon');
  
  log(`üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: WB=${wbStores.length}, Ozon=${ozonStores.length}, –î—Ä—É–≥–∏–µ=${otherStores.length}`);
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –≤—Ä–µ–º–µ–Ω–∏ –∏ –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏–µ–π
  let processedCount = 0;
  const allStoresToProcess = [...wbStores, ...ozonStores, ...otherStores]; // WB –∏ Ozon –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ
  
  for (const store of allStoresToProcess) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –º–∞–≥–∞–∑–∏–Ω–æ–º
    const elapsedTime = Date.now() - startTime;
    const remainingTime = maxExecutionTime - elapsedTime;
    
    if (remainingTime < 30000) { // –ú–µ–Ω–µ–µ 30 —Å–µ–∫—É–Ω–¥ –æ—Å—Ç–∞–ª–æ—Å—å
      log(`‚è±Ô∏è –û–°–¢–ê–ù–û–í–ö–ê: –æ—Å—Ç–∞–ª–æ—Å—å ${Math.round(remainingTime/1000)} —Å–µ–∫ (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞)`);
      log(`üìä –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${processedCount}/${activeStores.length} –º–∞–≥–∞–∑–∏–Ω–æ–≤`);
      
      if (processedCount < activeStores.length) {
        log(`üìã –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω—ã: ${activeStores.length - processedCount}`);
        log(`üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –∑–∞–ø—É—Å—Ç–∏—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ –¥–ª—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –º–∞–≥–∞–∑–∏–Ω–æ–≤`);
      }
      break;
    }
    
    log(`--- –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –º–∞–≥–∞–∑–∏–Ω–∞: ${store.name} [${store.marketplace}] (${processedCount + 1}/${activeStores.length}) ---`);
    log(`‚è±Ô∏è –í—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å: ${Math.round(remainingTime/1000)} —Å–µ–∫`);
    
    const storeStartTime = Date.now();
    processSingleStore(store, devMode);
    const storeDuration = Date.now() - storeStartTime;
    
    processedCount++;
    log(`--- –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞: ${store.name} (${Math.round(storeDuration/1000)} —Å–µ–∫) ---`);
  }
  
  const totalDuration = Date.now() - startTime;
  log(`--- –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê: ${processedCount}/${activeStores.length} –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∑–∞ ${Math.round(totalDuration/1000)} —Å–µ–∫ ---`);
}

function processSingleStore(store, devMode) {
  const sheet = createOrGetSheet(`–û—Ç–∑—ã–≤—ã (${store.name})`, CONFIG.HEADERS);
  const processedIds = getProcessedIdsFromSheet(sheet);
  const templates = getTemplates();
  if (templates.length === 0) {
      log(`[${store.name}] –û–®–ò–ë–ö–ê: –ù–µ—Ç —à–∞–±–ª–æ–Ω–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤. –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.`);
      return;
  }
  
  const includeAnswered = store.settings?.includeAnswered || false;
  log(`[${store.name}] –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ (${includeAnswered ? '–í–°–ï –æ—Ç–∑—ã–≤—ã' : '—Ç–æ–ª—å–∫–æ –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ'})...`);
  let feedbacks = (store.marketplace === 'Wildberries') 
      ? getWbFeedbacks(store.credentials.apiKey, includeAnswered, store) 
      : collectOzonReviewsIncremental(store);
      
  if (!feedbacks || feedbacks.length === 0) { 
      log(`[${store.name}] –ù–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.`);
      return;
  }
  
  log(`[${store.name}] –ù–∞–π–¥–µ–Ω–æ –≤—Å–µ–≥–æ ${feedbacks.length} –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤.`);
  
  // Apply content filter first - remove empty reviews
  feedbacks = filterFeedbacksByContent(feedbacks, store);
  
  // Apply answer filter - remove reviews with existing answers
  feedbacks = filterFeedbacksByAnswer(feedbacks, store);
  
  // Apply date filter
  feedbacks = filterFeedbacksByDate(feedbacks, store);
  
  // Apply rating filter - only 4 and 5 star reviews
  feedbacks = filterFeedbacksByRating(feedbacks, store);
  
  const newFeedbacks = feedbacks.filter(fb => !processedIds.has(fb.id));
  log(`[${store.name}] –ò–∑ –Ω–∏—Ö ${newFeedbacks.length} –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–æ–≤—ã—Ö (–Ω–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ).`);
  if (newFeedbacks.length === 0) return;

  const rowsToAppend = [];
  
  // üöÄ –£–õ–£–ß–®–ï–ù–ò–ï: –ü–∞—á–∫–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∑—ã–≤–æ–≤
  const processingBatch = newFeedbacks.slice(0, CONFIG.MAX_FEEDBACKS_PER_RUN);
  const batchResults = processFeedbackBatch(processingBatch, templates, store, devMode);
  
  batchResults.forEach(result => {
    rowsToAppend.push(result.rowData);
    log(result.logMessage);
    
    // –ó–∞–¥–µ—Ä–∂–∫–∞ —Ç–æ–ª—å–∫–æ –≤ PROD —Ä–µ–∂–∏–º–µ –∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
    if (!devMode && result.status === CONFIG.STATUS.SENT) {
      Utilities.sleep(CONFIG.DELAY_BETWEEN_REQUESTS);
    }
  });
  
  if (rowsToAppend.length > 0) {
    const startRow = sheet.getLastRow() + 1;
    
    // üöÄ –£–õ–£–ß–®–ï–ù–ò–ï: –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ—Ä—è–¥–∫–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º
    rowsToAppend.forEach((row, index) => {
      row[0] = startRow + index - 1; // ‚Ññ = –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ - 1 (–∏—Å–∫–ª—é—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫)
    });
    
    sheet.getRange(startRow, 1, rowsToAppend.length, CONFIG.HEADERS.length).setValues(rowsToAppend);
    
    // üöÄ –£–õ–£–ß–®–ï–ù–ò–ï: –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    applySortingPreferences(sheet, store);
    
    // üìä –ü–ï–†–ï–°–ß–ï–¢ –ü–û–†–Ø–î–ö–û–í–´–• –ù–û–ú–ï–†–û–í –ø–æ—Å–ª–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    updateRowNumbers(sheet);
    log(`[${store.name}] –û–±–Ω–æ–≤–ª–µ–Ω—ã –ø–æ—Ä—è–¥–∫–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞ –æ—Ç–∑—ã–≤–æ–≤.`);
  }
}

/**
 * üöÄ –£–õ–£–ß–®–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü–∞—á–∫–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ—Ö –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
 */
function sendPendingAnswers() {
  log('--- üöÄ –ó–ê–ü–£–°–ö –ü–ê–ß–ö–ù–û–ô –û–¢–ü–†–ê–í–ö–ò –ü–û–î–ì–û–¢–û–í–õ–ï–ù–ù–´–• –û–¢–í–ï–¢–û–í ---');
  const allStores = getStores().filter(s => s.isActive);
  
  let totalSent = 0;
  let totalSuccess = 0;
  const maxExecutionTime = 4 * 60 * 1000; // 4 –º–∏–Ω—É—Ç—ã –ª–∏–º–∏—Ç (–æ—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∞—Å)
  const startTime = Date.now();
  
  for (const store of allStores) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
    const elapsedTime = Date.now() - startTime;
    const remainingTime = maxExecutionTime - elapsedTime;
    
    if (remainingTime < 30000) { // –ú–µ–Ω–µ–µ 30 —Å–µ–∫—É–Ω–¥
      log(`‚è±Ô∏è –û–°–¢–ê–ù–û–í–ö–ê –æ—Ç–ø—Ä–∞–≤–∫–∏: –æ—Å—Ç–∞–ª–æ—Å—å ${Math.round(remainingTime/1000)} —Å–µ–∫`);
      break;
    }
    
    log(`--- üì§ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –º–∞–≥–∞–∑–∏–Ω: ${store.name} ---`);
    const storeResult = sendPendingAnswersForStore(store);
    
    totalSent += storeResult.sentCount;
    totalSuccess += storeResult.successCount;
    
    log(`--- ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ –¥–ª—è ${store.name}: –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${storeResult.successCount}/${storeResult.sentCount} ---`);
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –º–∞–≥–∞–∑–∏–Ω–∞–º–∏ –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏
    if (storeResult.sentCount > 0) {
      Utilities.sleep(2000);
    }
  }
  
  const totalDuration = Date.now() - startTime;
  log(`--- üéØ –ü–ê–ß–ö–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê: ${totalSuccess}/${totalSent} –∑–∞ ${Math.round(totalDuration/1000)} —Å–µ–∫ ---`);
}

/**
 * üöÄ –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü–∞—á–∫–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –æ–¥–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
 * @param {Object} store - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–∞–≥–∞–∑–∏–Ω–∞
 * @returns {Object} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ {sentCount, successCount}
 */
function sendPendingAnswersForStore(store) {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(`–û—Ç–∑—ã–≤—ã (${store.name})`);
  if (!sheet) {
    log(`[${store.name}] ‚ö†Ô∏è –õ–∏—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    return { sentCount: 0, successCount: 0 };
  }

  const data = sheet.getDataRange().getValues();
  const headers = data[0];
  const statusCol = headers.indexOf('–°—Ç–∞—Ç—É—Å') + 1;
  const answerCol = headers.indexOf('–ü–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç') + 1;
  const idCol = headers.indexOf('ID –æ—Ç–∑—ã–≤–∞') + 1;
  const errorCol = headers.indexOf('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏') + 1;
  const timeCol = headers.indexOf('–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏') + 1;
  const dateCol = headers.indexOf('–î–∞—Ç–∞ –æ—Ç–∑—ã–≤–∞') + 1;

  if (statusCol === 0) {
    log(`[${store.name}] ‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ç–æ–ª–±–µ—Ü "–°—Ç–∞—Ç—É—Å".`);
    return { sentCount: 0, successCount: 0 };
  }

  // üìä –°–û–ë–ò–†–ê–ï–ú –ü–ê–ß–ö–£ –û–¢–í–ï–¢–û–í –î–õ–Ø –û–¢–ü–†–ê–í–ö–ò
  const pendingAnswers = [];
  for (let i = 1; i < data.length; i++) {
    if (data[i][statusCol - 1] === CONFIG.STATUS.PENDING) {
      pendingAnswers.push({
        rowIndex: i + 1,
        feedbackId: data[i][idCol - 1],
        answerText: data[i][answerCol - 1],
        reviewDate: data[i][dateCol - 1] || new Date()
      });
    }
  }

  if (pendingAnswers.length === 0) {
    log(`[${store.name}] üì≠ –ù–µ—Ç –æ—Ç–≤–µ—Ç–æ–≤, –æ–∂–∏–¥–∞—é—â–∏—Ö –æ—Ç–ø—Ä–∞–≤–∫–∏.`);
    return { sentCount: 0, successCount: 0 };
  }

  log(`[${store.name}] üöÄ –ü–ê–ß–ö–ê –û–¢–ü–†–ê–í–ö–ò: –Ω–∞–π–¥–µ–Ω–æ ${pendingAnswers.length} –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏...`);

  // üì§ –ü–ê–ß–ö–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê –° –°–¢–ê–¢–ò–°–¢–ò–ö–û–ô
  const results = [];
  let successCount = 0;
  let errorCount = 0;
  const errors = [];

  pendingAnswers.forEach((answer, index) => {
    log(`[${store.name}] üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é ${index + 1}/${pendingAnswers.length}: ID ${answer.feedbackId}`);
    
    const result = sendAnswer(store, answer.feedbackId, answer.answerText);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ª–∏—Å—Ç–µ
    sheet.getRange(answer.rowIndex, statusCol).setValue(result.status);
    sheet.getRange(answer.rowIndex, errorCol).setValue(result.error);
    sheet.getRange(answer.rowIndex, timeCol).setValue(result.timestamp);
    
    // –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    if (result.status === CONFIG.STATUS.SENT) {
      successCount++;
      log(`[${store.name}] ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –¥–ª—è ID ${answer.feedbackId}. –î–∞—Ç–∞ –æ—Ç–∑—ã–≤–∞: ${new Date(answer.reviewDate).toLocaleDateString('ru-RU')}`);
    } else {
      errorCount++;
      errors.push({
        id: answer.feedbackId,
        error: result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
      });
      log(`[${store.name}] ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è ID ${answer.feedbackId}: ${result.error || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
    
    results.push(result);
    
    // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    if (index < pendingAnswers.length - 1) {
      Utilities.sleep(CONFIG.DELAY_BETWEEN_REQUESTS);
    }
  });

  // üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –î–õ–Ø –ú–ê–ì–ê–ó–ò–ù–ê
  const sentCount = pendingAnswers.length;
  log(`[${store.name}] üìä –ò–¢–û–ì–ò –ü–ê–ß–ö–ù–û–ô –û–¢–ü–†–ê–í–ö–ò: —É—Å–ø–µ—à–Ω–æ ${successCount}/${sentCount}, –æ—à–∏–±–æ–∫ ${errorCount}`);
  
  if (errorCount > 0 && errors.length <= 3) {
    log(`[${store.name}] üîç –ü—Ä–∏–º–µ—Ä—ã –æ—à–∏–±–æ–∫: ${errors.slice(0, 3).map(e => `${e.id}(${e.error})`).join(', ')}`);
  } else if (errorCount > 3) {
    log(`[${store.name}] üîç –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –æ—à–∏–±–æ–∫ (${errorCount}) –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–±–ª–∏—Ü—É.`);
  }
  
  return { sentCount, successCount };
}

// ============ API-SPECIFIC FUNCTIONS ============

/**
 * Universal function to send answer to review
 * Routes to appropriate marketplace-specific function
 * @param {Object} store - Store configuration
 * @param {string} feedbackId - Review ID
 * @param {string} text - Answer text
 * @returns {Object} Result object with status, error, timestamp, and apiResponse
 */
function sendAnswer(store, feedbackId, text) {
  try {
    let success, message, apiResponse;
    if (store.marketplace === WB_CONFIG.MARKETPLACE_NAME) {
      [success, message, apiResponse] = sendWbFeedbackAnswer(feedbackId, text, store.credentials.apiKey);
    } else if (store.marketplace === OZON_CONFIG.MARKETPLACE_NAME) {
      [success, message, apiResponse] = sendOzonFeedbackAnswer(feedbackId, text, store.credentials.clientId, store.credentials.apiKey);
    } else {
      return { status: CONFIG.STATUS.ERROR, error: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å', timestamp: '', apiResponse: '' };
    }
    
    if (success) {
      return { status: CONFIG.STATUS.SENT, error: '', timestamp: new Date(), apiResponse: apiResponse || 'OK' };
    } else {
      return { status: CONFIG.STATUS.ERROR, error: message, timestamp: new Date(), apiResponse: apiResponse || message };
    }
  } catch (e) {
    log(`–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è ID ${feedbackId}: ${e.stack}`);
    return { status: CONFIG.STATUS.ERROR, error: e.message, timestamp: new Date(), apiResponse: e.message };
  }
}

// ======================================================================
// ======================== WILDBERRIES API ============================
// ======================================================================
// –í–ê–ñ–ù–û: –≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å—é –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å API Wildberries.
// –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ä–∞–∑–¥–µ–ª–∞—Ö –Ω–µ –¥–æ–ª–∂–Ω—ã –∑–∞—Ç—Ä–∞–≥–∏–≤–∞—Ç—å —ç—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏.
// ======================================================================

/**
 * üî• –û–ö–¢–Ø–ë–†–¨ 2025: –ò–°–ü–†–ê–í–õ–ï–ù–û –¥–ª—è WB API v1 (v2 –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢!)
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ –ø–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ WB v1 API
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–æ—Å—Ç—É—é –ø–∞–≥–∏–Ω–∞—Ü–∏—é take/skip —Å Unix timestamp –¥–ª—è –¥–∞—Ç
 * @param {string} apiKey - WB API –∫–ª—é—á
 * @param {boolean} includeAnswered - –í–∫–ª—é—á–∞—Ç—å –ª–∏ –æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã  
 * @param {Object} store - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–∞—Ç–µ
 * @returns {Array} –ú–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –æ—Ç–∑—ã–≤–æ–≤
 */
function getWbFeedbacks(apiKey, includeAnswered = false, store = null) {
    const startTime = Date.now();
    log(`[WB] üî• WB API v1 START (includeAnswered=${includeAnswered}) - –ò–°–ü–†–ê–í–õ–ï–ù–û v2‚Üív1!`);
    log(`[WB] üì¶ Store: ${store?.name || 'null'}`);
    log(`[WB] üîë API Key length: ${apiKey?.length || 0} chars`);
    
    const MAX_TAKE = 5000; // –ú–∞–∫—Å–∏–º—É–º –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ WB API
    const MAX_SKIP = 199990; // –ú–∞–∫—Å–∏–º—É–º –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ WB API
    let allFeedbacks = [];
    let skip = 0;
    let hasMoreData = true;
    let pageCount = 0;
    let totalRequestTime = 0;
    
    try {
        while (hasMoreData && skip <= MAX_SKIP) {
            pageCount++;
            const pageStartTime = Date.now();
            
            // üî• –û–ö–¢–Ø–ë–†–¨ 2025: –ò–°–ü–†–ê–í–õ–ï–ù–û - –∏—Å–ø–æ–ª—å–∑—É–µ–º v1 endpoint —Å Unix timestamp!
            const url = buildWbApiV1Url(includeAnswered, skip, MAX_TAKE, store);
            
            log(`[WB Request #${pageCount}] üì§ GET ${url}`);
            log(`[WB Request #${pageCount}] üìÑ Params: skip=${skip}, take=${MAX_TAKE}`);
            log(`[WB Request #${pageCount}] ‚è±Ô∏è Requesting...`);
            
            const requestStartTime = Date.now();
            const response = UrlFetchApp.fetch(url, { 
                method: 'GET', 
                headers: { 'Authorization': apiKey }, 
                muteHttpExceptions: true 
            });
            const requestDuration = Date.now() - requestStartTime;
            totalRequestTime += requestDuration;
            
            const responseCode = response.getResponseCode();
            const responseBody = response.getContentText();
            const responseSize = responseBody.length;
            
            log(`[WB Response #${pageCount}] üì• HTTP ${responseCode} (${requestDuration}ms, ${responseSize} bytes)`);
            
            if (responseCode !== 200) {
                log(`[WB Response #${pageCount}] ‚ùå ERROR: HTTP ${responseCode}`);
                log(`[WB Response #${pageCount}] üìù Body preview: ${responseBody.substring(0, 300)}...`);
                
                // Enhanced error diagnostics
                if (responseCode === 401) {
                    log(`[WB Response #${pageCount}] üîé 401 Unauthorized - Invalid API key`);
                } else if (responseCode === 403) {
                    log(`[WB Response #${pageCount}] üîé 403 Forbidden - API key lacks permissions`);
                } else if (responseCode === 404) {
                    log(`[WB Response #${pageCount}] üîé 404 Not Found - Check endpoint URL`);
                } else if (responseCode === 429) {
                    log(`[WB Response #${pageCount}] üîé 429 Rate Limited - Too many requests`);
                } else if (responseCode >= 500) {
                    log(`[WB Response #${pageCount}] üîé ${responseCode} Server Error - WB API issues`);
                }
                break;
            }
            
            let json;
            try {
                json = JSON.parse(responseBody);
                log(`[WB Response #${pageCount}] ‚úÖ Valid JSON parsed`);
                
                // Log response structure in dev mode
                if (isDevMode()) {
                    log(`[WB Response #${pageCount} DEBUG] JSON keys: ${Object.keys(json).join(', ')}`);
                    if (json.data) {
                        log(`[WB Response #${pageCount} DEBUG] data keys: ${Object.keys(json.data).join(', ')}`);
                    }
                }
            } catch (parseError) {
                log(`[WB Response #${pageCount}] ‚ùå JSON PARSE ERROR: ${parseError.message}`);
                log(`[WB Response #${pageCount}] üìù Raw body: ${responseBody.substring(0, 500)}`);
                break;
            }
            
            if (json.error) {
                log(`[WB Response #${pageCount}] ‚ùå API ERROR: ${json.errorText || JSON.stringify(json.error)}`);
                break;
            }
            
            const feedbacks = json.data?.feedbacks || [];
            const feedbacksWithText = feedbacks.filter(fb => fb.text && fb.text.trim() && fb.text.trim() !== '(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)');
            
            log(`[WB Response #${pageCount}] üìä Feedbacks: ${feedbacks.length} total, ${feedbacksWithText.length} with text`);
            
            if (feedbacks.length === 0) {
                log(`[WB Response #${pageCount}] ‚úÖ Empty page - pagination complete`);
                hasMoreData = false;
                break;
            }
            
            // Log sample feedback in dev mode
            if (isDevMode() && feedbacks.length > 0) {
                const sample = feedbacks[0];
                log(`[WB Response #${pageCount} DEBUG] Sample feedback: ID=${sample.id}, rating=${sample.rating}, hasText=${!!sample.text}`);
            }
            
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–∑—ã–≤—ã (—É–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ)
            feedbacks.forEach(fb => {
                const hasText = fb.text && fb.text.trim() && fb.text.trim() !== '(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)';
                if (!hasText) return;
                
                allFeedbacks.push({
                    id: fb.id,
                    createdDate: fb.createdDate,
                    rating: fb.rating || fb.productValuation || 0,
                    text: fb.text,
                    user: 'N/A',
                    hasAnswer: !!(fb.answer && fb.answer.text),
                    product: {
                        id: fb.productDetails?.nmId,
                        name: fb.productDetails?.productName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
                        url: `https://www.wildberries.ru/catalog/${fb.productDetails?.nmId}/detail.aspx`
                    }
                });
            });
            
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            skip += MAX_TAKE;
            hasMoreData = (feedbacks.length === MAX_TAKE); // –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –ø–æ–ª–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, –≤–æ–∑–º–æ–∂–Ω–æ –µ—Å—Ç—å –µ—â–µ
            
            const pageDuration = Date.now() - pageStartTime;
            log(`[WB Page #${pageCount}] ‚è±Ô∏è Completed in ${pageDuration}ms (collected ${feedbacksWithText.length} feedbacks)`);
            
            // üî• –û–ö–¢–Ø–ë–†–¨ 2025: –û–ë–ù–û–í–õ–ï–ù–û rate limiting WB API - 333ms (3 req/sec)
            Utilities.sleep(333); // 3 –∑–∞–ø—Ä–æ—Å–∞ –≤ —Å–µ–∫—É–Ω–¥—É —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
        }
        
        const totalDuration = Date.now() - startTime;
        const avgRequestTime = pageCount > 0 ? Math.round(totalRequestTime / pageCount) : 0;
        
        log(`[WB] ‚úÖ –ó–ê–í–ï–†–®–ï–ù–û: ${allFeedbacks.length} –æ—Ç–∑—ã–≤–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ –∑–∞ ${pageCount} –∑–∞–ø—Ä–æ—Å–æ–≤`);
        log(`[WB] ‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è: ${totalDuration}ms (—Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞: ${avgRequestTime}ms)`);
        log(`[WB] üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${Math.round(allFeedbacks.length / (totalDuration / 1000) * 60)} –æ—Ç–∑—ã–≤–æ–≤/–º–∏–Ω—É—Ç—É`);
        
        // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∞—Ç–µ –µ—Å–ª–∏ –µ—Å—Ç—å
        if (store && store.settings && store.settings.startDate) {
            const startDate = new Date(store.settings.startDate);
            const filtered = allFeedbacks.filter(fb => new Date(fb.createdDate) >= startDate);
            log(`[WB] üóìÔ∏è –§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ ${store.settings.startDate}: –æ—Å—Ç–∞–ª–æ—Å—å ${filtered.length} –∏–∑ ${allFeedbacks.length}`);
            return filtered;
        }
        
        return allFeedbacks;
        
    } catch (e) {
        log(`[WB] ‚õî –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${e.message}`);
        log(`[WB] üîç Stack trace: ${e.stack}`);
        log(`[WB] üìä –ß–∞—Å—Ç–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${allFeedbacks.length} –æ—Ç–∑—ã–≤–æ–≤ —Å–æ–±—Ä–∞–Ω–æ –¥–æ –æ—à–∏–±–∫–∏`);
        return allFeedbacks; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —á—Ç–æ —É—Å–ø–µ–ª–∏ –ø–æ–ª—É—á–∏—Ç—å
    }
}

function sendWbFeedbackAnswer(feedbackId, text, apiKey) {
    log(`[WB API] üéØ –ù–ê–ß–ê–õ–û –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è ID ${feedbackId}`);
    log(`[WB API] üìù –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: "${text}" (–¥–ª–∏–Ω–∞: ${text.length} —Å–∏–º–≤–æ–ª–æ–≤)`);
    log(`[WB API] üîë API –∫–ª—é—á: ${apiKey.substring(0, 15)}... (–¥–ª–∏–Ω–∞: ${apiKey.length})`);
    
    // üî• –ù–û–í–ê–Ø –°–¢–†–ê–¢–ï–ì–ò–Ø: –ü—Ä–æ–±—É–µ–º –û–ë–ê endpoint'–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
    // –í–∞—Ä–∏–∞–Ω—Ç 1: ID –≤ URL (—Ç–µ–∫—É—â–∏–π –ø–æ–¥—Ö–æ–¥)
    const result1 = attemptWbFeedbackAnswerMethod1(feedbackId, text, apiKey);
    if (result1[0]) {
        log(`[WB API] ‚úÖ –£–°–ü–ï–• —Å Method 1 (ID –≤ URL)!`);
        return result1;
    }
    
    log(`[WB API] ‚ö†Ô∏è Method 1 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º Method 2...`);
    
    // –í–∞—Ä–∏–∞–Ω—Ç 2: ID –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞ (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥)
    const result2 = attemptWbFeedbackAnswerMethod2(feedbackId, text, apiKey);
    if (result2[0]) {
        log(`[WB API] ‚úÖ –£–°–ü–ï–• —Å Method 2 (ID –≤ —Ç–µ–ª–µ)!`);
        return result2;
    }
    
    log(`[WB API] ‚ùå –û–ë–ê –º–µ—Ç–æ–¥–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏. –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–æ–ø—ã—Ç–∫–∏.`);
    return result2;
}

/**
 * üî• –û–ö–¢–Ø–ë–†–¨ 2025: Method 1: ID –≤ URL - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π v1 endpoint
 * Endpoint: POST /api/v1/feedbacks/answer —Å ID –≤ URL —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
 */
function attemptWbFeedbackAnswerMethod1(feedbackId, text, apiKey) {
    const url = `https://feedbacks-api.wildberries.ru/api/v1/feedbacks/answer`;
    const payload = { 
        id: feedbackId,  // üî• –û–ö–¢–Ø–ë–†–¨ 2025: ID –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è v1 API
        text: text       // –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
    };
    
    log(`[WB API Method 1] üöÄ URL: ${url}`);
    log(`[WB API Method 1] üìù Payload: ${JSON.stringify(payload)}`);
    
    return sendWbApiRequest(url, payload, apiKey, "Method 1 (ID –≤ URL)");
}

/**
 * Method 2: ID –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞ - –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥
 * Endpoint: POST /api/v1/feedbacks/answer
 */
function attemptWbFeedbackAnswerMethod2(feedbackId, text, apiKey) {
    const url = `https://feedbacks-api.wildberries.ru/api/v1/feedbacks/answer`;
    const payload = { 
        id: feedbackId,  // ID –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞
        text: text       // –¢–µ–∫—Å—Ç —Ç–∞–∫–∂–µ –≤ —Ç–µ–ª–µ
    };
    
    log(`[WB API Method 2] üöÄ URL: ${url}`);
    log(`[WB API Method 2] üìù Payload: ${JSON.stringify(payload)}`);
    
    return sendWbApiRequest(url, payload, apiKey, "Method 2 (ID –≤ —Ç–µ–ª–µ)");
}

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ WB API –∑–∞–ø—Ä–æ—Å–∞
 * @param {string} url - URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
 * @param {Object} payload - –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
 * @param {string} apiKey - API –∫–ª—é—á
 * @param {string} methodName - –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
 * @returns {Array} [success, errorMessage, responseBody]
 */
function sendWbApiRequest(url, payload, apiKey, methodName) {
    try {
        log(`[WB ${methodName}] üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...`);
        
        const response = UrlFetchApp.fetch(url, {
            method: 'POST',
            headers: { 
                'Authorization': apiKey,
                'Content-Type': 'application/json'
            },
            payload: JSON.stringify(payload),
            muteHttpExceptions: true
        });
        
        const code = response.getResponseCode();
        const responseBody = response.getContentText();
        const responseHeaders = response.getAllHeaders();
        
        // üîç –î–ï–¢–ê–õ–¨–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        log(`[WB ${methodName}] üì• –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${code}`);
        log(`[WB ${methodName}] üì• –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: "${responseBody}"`);
        
        if (isDevMode()) {
            log(`[WB ${methodName} DEBUG] üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞: Authorization: ${apiKey.substring(0, 20)}..., Content-Type: application/json`);
            log(`[WB ${methodName} DEBUG] üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: ${JSON.stringify(responseHeaders, null, 2)}`);
        }
        
        // üéØ –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–æ–≤ –æ—Ç–≤–µ—Ç–∞
        const success = (code === 200 || code === 201 || code === 204);
        let errorMessage = '';
        
        if (success) {
            log(`[WB ${methodName}] ‚úÖ –£–°–ü–ï–•: –ö–æ–¥ ${code}`);
            if (code === 200) log(`[WB ${methodName}] ‚ÑπÔ∏è 200 OK - –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ`);
            if (code === 201) log(`[WB ${methodName}] ‚ÑπÔ∏è 201 Created - –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω`);
            if (code === 204) log(`[WB ${methodName}] ‚ÑπÔ∏è 204 No Content - –û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –¥–∞–Ω–Ω—ã—Ö –Ω–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ`);
        } else {
            errorMessage = `${methodName}: –ö–æ–¥ ${code}. –û—Ç–≤–µ—Ç: ${responseBody}`;
            log(`[WB ${methodName}] ‚ùå –ù–ï–£–î–ê–ß–ê: ${errorMessage}`);
            
            // üîç –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–∏–ø–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫
            if (code === 400) log(`[WB ${methodName}] üîé 400 Bad Request - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –∏ –¥–∞–Ω–Ω—ã–µ`);
            if (code === 401) log(`[WB ${methodName}] üîé 401 Unauthorized - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á`);
            if (code === 403) log(`[WB ${methodName}] üîé 403 Forbidden - API –∫–ª—é—á –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –∏–ª–∏ –æ—Ç–∑—ã–≤ —É–∂–µ –æ—Ç–≤–µ—á–µ–Ω`);
            if (code === 404) log(`[WB ${methodName}] üîé 404 Not Found - –û—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ endpoint –Ω–µ–≤–µ—Ä–Ω—ã–π`);
            if (code === 422) log(`[WB ${methodName}] üîé 422 Unprocessable Entity - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ (–¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞, —Å—Ç–∞—Ç—É—Å –æ—Ç–∑—ã–≤–∞)`);
            if (code === 429) log(`[WB ${methodName}] üîé 429 Too Many Requests - –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ (max 3/—Å–µ–∫)`);
            if (code >= 500) log(`[WB ${methodName}] üîé ${code} Server Error - –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ WB`);
        }
        
        return [success, errorMessage, responseBody];
        
    } catch (e) {
        const criticalError = `${methodName} –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${e.message}`;
        log(`[WB ${methodName}] ‚õî ${criticalError}`);
        log(`[WB ${methodName}] üîç Stack trace: ${e.stack}`);
        return [false, criticalError, e.message];
    }
}

// ======================================================================
// ============================ OZON API ===============================
// ======================================================================
// –í–ê–ñ–ù–û: –≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å—é –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å API Ozon.
// –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ä–∞–∑–¥–µ–ª–∞—Ö –Ω–µ –¥–æ–ª–∂–Ω—ã –∑–∞—Ç—Ä–∞–≥–∏–≤–∞—Ç—å —ç—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏.
// ======================================================================

/**
 * üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ Ozon —Å –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
 * –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ ozon_functions.gs –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã
 * @param {string} clientId - Ozon Client ID
 * @param {string} apiKey - Ozon API Key
 * @param {boolean} includeAnswered - Whether to include answered reviews
 * @param {Object} store - Store configuration with date filtering and other settings
 * @returns {Array} Array of normalized feedback objects
 */
function getOzonFeedbacks(clientId, apiKey, includeAnswered = false, store = null) {
    log(`[Ozon] üöÄ –ó–ê–ü–£–°–ö –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ (includeAnswered=${includeAnswered})`);
    
    try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–∞–≥–∏–Ω–∞—Ü–∏—é —á–µ—Ä–µ–∑ last_id
        return getOzonFeedbacksWithProperPagination(clientId, apiKey, includeAnswered, store);
    } catch (e) {
        log(`[Ozon] –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏: ${e.message}`);
        log(`[Ozon] Stack trace: ${e.stack}`);
        return [];
    }
}



/**
 * –ù–û–í–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø: Ozon API —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π —á–µ—Ä–µ–∑ last_id
 * –†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –ª–∏–º–∏—Ç–∞ –≤ 100 –æ—Ç–∑—ã–≤–æ–≤ –∑–∞ –∑–∞–ø—Ä–æ—Å
 * @param {string} clientId - Ozon Client ID
 * @param {string} apiKey - Ozon API Key  
 * @param {boolean} includeAnswered - –í–∫–ª—é—á–∞—Ç—å –ª–∏ –æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
 * @param {Object} store - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞
 * @returns {Array} –í—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –æ—Ç–∑—ã–≤—ã
 */
function getOzonFeedbacksWithProperPagination(clientId, apiKey, includeAnswered, store) {
    const url = 'https://api-seller.ozon.ru/v1/review/list';
    
    let allReviews = [];
    let lastId = "";
    let hasNext = true;
    let pageNumber = 1;
    const limit = OZON_CONFIG.API_LIMITS.MAX_LIMIT; // 100 - –º–∞–∫—Å–∏–º—É–º
    const maxPages = 15; // ‚ö° –£–ú–ï–ù–¨–®–ï–ù–û –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ç–∞–π–º–∞—É—Ç–∞ (1,500 –æ—Ç–∑—ã–≤–æ–≤ –∑–∞ —Ä–∞–∑)
    const startTime = Date.now(); // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è  
    const maxExecutionTime = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º (–æ—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∞—Å)
    
    // –ë–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø—Ä–æ—Å–∞
    let basePayload = {
        filter: {
            has_text: true,  // –¢–æ–ª—å–∫–æ –æ—Ç–∑—ã–≤—ã —Å —Ç–µ–∫—Å—Ç–æ–º
        },
        sort: {
            type: 'CREATED_AT',  // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: type –≤–º–µ—Å—Ç–æ field
            order: 'DESC'        // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: order –≤–º–µ—Å—Ç–æ direction  
        },
        limit: limit
    };
    
    // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ —Å—Ç–∞—Ç—É—Å—É –æ—Ç–≤–µ—Ç–æ–≤
    if (includeAnswered) {
        // –ü–æ–ª—É—á–∞–µ–º –í–°–ï –æ—Ç–∑—ã–≤—ã (–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ + –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ)
        basePayload.filter.status = ['PENDING', 'PROCESSED', 'MODERATED', 'NEW'];
        log(`[Ozon] üîÑ –†–µ–∂–∏–º: –í–°–ï –æ—Ç–∑—ã–≤—ã (–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ + –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ)`);
    } else {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
        basePayload.filter.has_answer = false;
        basePayload.filter.status = ['PENDING', 'MODERATED', 'NEW'];
        log(`[Ozon] üéØ –†–µ–∂–∏–º: —Ç–æ–ª—å–∫–æ –ù–ï–û–¢–í–ï–ß–ï–ù–ù–´–ï –æ—Ç–∑—ã–≤—ã`);
    }

    // ‚úÖ –§–ò–õ–¨–¢–† –ü–û –î–ê–¢–ï –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–∞–≥–∞–∑–∏–Ω–∞
    if (store && store.settings && store.settings.startDate) {
        const startDate = store.settings.startDate;
        const today = new Date().toISOString().split('T')[0];
        
        basePayload.filter.date_from = formatDateForOzon(startDate);
        basePayload.filter.date_to = formatDateForOzon(today);
        
        log(`[Ozon] üóìÔ∏è –§–∏–ª—å—Ç—Ä –¥–∞—Ç: ${startDate} - ${today}`);
    } else {
        log(`[Ozon] üóìÔ∏è –§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ –ù–ï –ø—Ä–∏–º–µ–Ω–µ–Ω - –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ—Ç–∑—ã–≤—ã`);
    }
    
    // ‚úÖ –ì–õ–ê–í–ù–´–ô –¶–ò–ö–õ –ü–ê–ì–ò–ù–ê–¶–ò–ò —Å last_id –∏ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    while (hasNext && pageNumber <= maxPages) {
        // üö® –ö–û–ù–¢–†–û–õ–¨ –í–†–ï–ú–ï–ù–ò –í–´–ü–û–õ–ù–ï–ù–ò–Ø –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ç–∞–π–º–∞—É—Ç–∞
        const elapsedTime = Date.now() - startTime;
        if (elapsedTime > maxExecutionTime) {
            log(`[Ozon] ‚è±Ô∏è –û–°–¢–ê–ù–û–í–ö–ê –ø–æ –≤—Ä–µ–º–µ–Ω–∏: –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è ${Math.round(elapsedTime/1000)} —Å–µ–∫ (–ª–∏–º–∏—Ç ${Math.round(maxExecutionTime/1000)} —Å–µ–∫)`);
            log(`[Ozon] üìä –£—Å–ø–µ–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å ${pageNumber - 1} —Å—Ç—Ä–∞–Ω–∏—Ü, –ø–æ–ª—É—á–µ–Ω–æ ${allReviews.length} –æ—Ç–∑—ã–≤–æ–≤`);
            break;
        }
        log(`[Ozon] üìÑ –ó–∞–ø—Ä–∞—à–∏–≤–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É ${pageNumber} (last_id: "${lastId}")...`);
        
        const payload = {
            ...basePayload,
            last_id: lastId  // ‚úÖ –ö–õ–Æ–ß–ï–í–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –∏—Å–ø–æ–ª—å–∑—É–µ–º last_id –≤–º–µ—Å—Ç–æ page/offset!
        };
        
        try {
            const response = UrlFetchApp.fetch(url, {
                method: 'POST',
                headers: { 
                    'Client-Id': clientId, 
                    'Api-Key': apiKey,
                    'Content-Type': 'application/json'
                },
                payload: JSON.stringify(payload),
                muteHttpExceptions: true
            });
            
            const responseCode = response.getResponseCode();
            const responseBody = response.getContentText();
            
            log(`[Ozon] üåê API –æ—Ç–≤–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber}: –∫–æ–¥ ${responseCode}, —Ä–∞–∑–º–µ—Ä ${responseBody.length} —Å–∏–º–≤–æ–ª–æ–≤`);
            
            if (responseCode !== 200) {
                log(`[Ozon] ‚ùå –û–®–ò–ë–ö–ê –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${pageNumber}: –ö–æ–¥ ${responseCode}. –¢–µ–ª–æ: ${responseBody.substring(0, 500)}`);
                
                // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∏–ø–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫ Ozon
                if (responseCode === 401) log(`[Ozon] üîé 401 Unauthorized - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ Client-Id –∏ Api-Key`);
                if (responseCode === 403) log(`[Ozon] üîé 403 Forbidden - API –∫–ª—é—á –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —á—Ç–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤`);
                if (responseCode === 429) log(`[Ozon] üîé 429 Too Many Requests - –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç 50 RPS`);
                if (responseCode >= 500) log(`[Ozon] üîé ${responseCode} Server Error - –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ Ozon`);
                
                break;
            }
            
            const json = JSON.parse(responseBody);
            
            // üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –û–¢–õ–ê–î–ö–ê: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
            if (isDevMode() || pageNumber <= 2) {
                log(`[Ozon DEBUG] –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber} - —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ JSON: ${JSON.stringify(Object.keys(json), null, 2)}`);
                if (json.result) {
                    log(`[Ozon DEBUG] json.result —Å–æ–¥–µ—Ä–∂–∏—Ç: ${JSON.stringify(Object.keys(json.result), null, 2)}`);
                }
            }
            
            // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ê –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞ - –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ—Ä–Ω–µ JSON!
            let reviews = [];
            let resultData = null;
            
            // –ì–õ–ê–í–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: Ozon API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ—Ä–Ω–µ, –Ω–µ –≤ json.result!
            if (json.reviews && Array.isArray(json.reviews)) {
                // –°—Ç—Ä—É–∫—Ç—É—Ä–∞: { "reviews": [...], "last_id": "...", "has_next": true }
                reviews = json.reviews;
                resultData = json; // –í—Å—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –≤ –∫–æ—Ä–Ω–µ!
                log(`[Ozon] ‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–æ—Ä–Ω–µ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: reviews=${reviews.length}, has_next=${json.has_next}, last_id="${json.last_id}"`);
            } else if (json.result && json.result.reviews) {
                // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: { "result": { "reviews": [...], "has_next": true } }
                resultData = json.result;
                reviews = json.result.reviews || [];
                log(`[Ozon] ‚úÖ –ù–∞–π–¥–µ–Ω–∞ result —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: reviews=${reviews.length}`);
            } else if (json.data && json.data.reviews) {
                // –ï—â–µ –æ–¥–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: { "data": { "reviews": [...] } }
                resultData = json.data;
                reviews = json.data.reviews;
                log(`[Ozon] ‚úÖ –ù–∞–π–¥–µ–Ω–∞ data —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: reviews=${reviews.length}`);
            } else {
                log(`[Ozon] ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${pageNumber}. –ö–ª—é—á–∏: ${Object.keys(json).join(', ')}`);
                // üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –ú–ï–†–ê: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –µ—Å–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è
                if (pageNumber <= 3) {
                    log(`[Ozon EMERGENCY] –ü–µ—Ä–≤—ã–µ 1000 —Å–∏–º–≤–æ–ª–æ–≤ –æ—Ç–≤–µ—Ç–∞: ${responseBody.substring(0, 1000)}`);
                }
                break;
            }
            
            if (!Array.isArray(reviews)) {
                log(`[Ozon] ‚ùå reviews –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${pageNumber}. –¢–∏–ø: ${typeof reviews}`);
                break;
            }
            
            log(`[Ozon] üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber}: –ø–æ–ª—É—á–µ–Ω–æ ${reviews.length} –æ—Ç–∑—ã–≤–æ–≤`);
            
            // ‚úÖ –û–ë–†–ê–ë–ê–¢–´–í–ê–ï–ú –û–¢–ó–´–í–´ –ò –î–û–ë–ê–í–õ–Ø–ï–ú –ö –û–ë–©–ï–ú–£ –°–ü–ò–°–ö–£
            const processedReviews = reviews.map(fb => ({
                id: fb.id, 
                createdDate: fb.published_at || fb.created_at, 
                rating: fb.rating,
                text: fb.text || '(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)', 
                user: '–ê–Ω–æ–Ω–∏–º',
                hasAnswer: !!(fb.answer && fb.answer.text) || !!(fb.comment && fb.comment.text) || fb.has_answer === true, // ‚úÖ –ù–û–í–û–ï: –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ—Ç–≤–µ—Ç–∞
                product: { 
                    id: fb.sku || fb.offer_id,
                    name: '–ù–µ —É–∫–∞–∑–∞–Ω–æ', // –ë—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ Product API
                    url: `https://www.ozon.ru/product/${fb.sku || fb.offer_id}`
                }
            }));
            
            allReviews = allReviews.concat(processedReviews);
            
            // ‚úÖ –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            if (resultData) {
                hasNext = resultData.has_next || false;
                lastId = resultData.last_id || "";
                
                if (isDevMode()) {
                    log(`[Ozon DEBUG] has_next: ${hasNext}, last_id: "${lastId}"`);
                }
            } else {
                // üö® –ê–í–ê–†–ò–ô–ù–ê–Ø –ú–ï–†–ê: –ï—Å–ª–∏ lastId –ø—É—Å—Ç–æ–π 3 —Ä–∞–∑–∞ –ø–æ–¥—Ä—è–¥ - –°–¢–û–ü
                if (!lastId && pageNumber > 3) {
                    log(`[Ozon] üõë –ê–í–ê–†–ò–ô–ù–ê–Ø –û–°–¢–ê–ù–û–í–ö–ê: last_id –ø—É—Å—Ç–æ–π ${pageNumber - 1} —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ–¥—Ä—è–¥ - –≤–æ–∑–º–æ–∂–Ω–∞ –æ—à–∏–±–∫–∞ –≤ API –∏–ª–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ`);
                    hasNext = false;
                } else {
                    // –ï—Å–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏, 
                    // –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞–ø–∏—Å–µ–π
                    hasNext = (reviews.length === limit);
                    log(`[Ozon] ‚ö†Ô∏è –ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏. –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º has_next = ${hasNext} –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–º–µ—Ä–∞ –æ—Ç–≤–µ—Ç–∞`);
                }
            }
            
            // –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –º–µ–Ω—å—à–µ –∑–∞–ø–∏—Å–µ–π —á–µ–º –ª–∏–º–∏—Ç - —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
            if (reviews.length < limit) {
                log(`[Ozon] ‚úÖ –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber}: –ø–æ–ª—É—á–µ–Ω–æ ${reviews.length} < ${limit}`);
                hasNext = false;
            }
            
            pageNumber++;
            
            // ‚úÖ RATE LIMITING: –°–æ–±–ª—é–¥–∞–µ–º –ª–∏–º–∏—Ç 50 RPS (20–º—Å –º–∏–Ω–∏–º—É–º –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏)
            Utilities.sleep(25); // 40 RPS –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –∫–∞–∂–¥—ã–µ 20 –∑–∞–ø—Ä–æ—Å–æ–≤
            if (pageNumber % 20 === 0) {
                log(`[Ozon] üí§ –ü–∞—É–∑–∞ –ø–æ—Å–ª–µ ${pageNumber - 1} —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏...`);
                Utilities.sleep(1000);
            }
            
        } catch (e) {
            log(`[Ozon] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${pageNumber}: ${e.message}`);
            log(`[Ozon] üîç Stack trace: ${e.stack}`);
            break;
        }
    }
    
    if (pageNumber > maxPages) {
        log(`[Ozon] ‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –î–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º —Å—Ç—Ä–∞–Ω–∏—Ü (${maxPages}). –í–æ–∑–º–æ–∂–Ω–æ –µ—Å—Ç—å –µ—â–µ –¥–∞–Ω–Ω—ã–µ.`);
    }
    
    // ‚úÖ –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–û–†–¢–ò–†–û–í–ö–ê (–Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã –ø–µ—Ä–≤—ã–º–∏)
    allReviews.sort((a, b) => new Date(b.createdDate) - new Date(a.createdDate));
    
    // ‚úÖ –û–ë–û–ì–ê–©–ï–ù–ò–ï –ù–ê–ó–í–ê–ù–ò–Ø–ú–ò –¢–û–í–ê–†–û–í
    if (allReviews.length > 0 && store && store.credentials) {
        const offerIds = allReviews.map(review => review.product.id).filter(id => id);
        const productNames = getOzonProductNames(offerIds, store.credentials.clientId, store.credentials.apiKey);
        
        if (Object.keys(productNames).length > 0) {
            allReviews.forEach(review => {
                if (productNames[review.product.id]) {
                    review.product.name = productNames[review.product.id];
                }
            });
            log(`[Ozon] üè∑Ô∏è –ù–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è ${Object.keys(productNames).length} –æ—Ç–∑—ã–≤–æ–≤`);
        }
    }
    
    log(`[Ozon] üéØ –ò–¢–û–ì–û –ø–æ–ª—É—á–µ–Ω–æ ${allReviews.length} –æ—Ç–∑—ã–≤–æ–≤ –∑–∞ ${pageNumber - 1} —Å—Ç—Ä–∞–Ω–∏—Ü`);
    return allReviews;
}

function sendOzonFeedbackAnswer(feedbackId, text, clientId, apiKey) {
    const url = 'https://api-seller.ozon.ru/v1/review/comment/create';
    const payload = { review_id: feedbackId, text: text, mark_review_as_processed: true };
    
    // üöÄ –£–õ–£–ß–®–ï–ù–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï: –ó–∞–ø—Ä–æ—Å
    log(`[Ozon API] üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ—Ç–∑—ã–≤–∞ ${feedbackId}`);
    log(`[Ozon API] üîó URL: ${url}`);
    log(`[Ozon API] üìù –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: "${text}" (${text.length} —Å–∏–º–≤–æ–ª–æ–≤)`);
    log(`[Ozon API] üîë Client-Id: ${clientId.substring(0, 8)}...`);
    
    const startTime = Date.now();
    const response = UrlFetchApp.fetch(url, {
        method: 'POST', 
        headers: { 
            'Client-Id': clientId, 
            'Api-Key': apiKey,
            'Content-Type': 'application/json'
        },
        payload: JSON.stringify(payload),
        muteHttpExceptions: true
    });
    const requestDuration = Date.now() - startTime;
    
    const code = response.getResponseCode();
    const responseBody = response.getContentText();
    
    // üöÄ –£–õ–£–ß–®–ï–ù–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï: –û—Ç–≤–µ—Ç
    log(`[Ozon API] üì• –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: HTTP ${code} (${requestDuration}ms)`);
    log(`[Ozon API] üìã –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: ${responseBody.length} —Å–∏–º–≤–æ–ª–æ–≤`);
    
    if (code === 200) {
        log(`[Ozon API] ‚úÖ –£–°–ü–ï–•: –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –¥–ª—è –æ—Ç–∑—ã–≤–∞ ${feedbackId}`);
        
        // –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –æ—Ç–≤–µ—Ç –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        try {
            const responseJson = JSON.parse(responseBody);
            if (responseJson.result && responseJson.result.comment_id) {
                log(`[Ozon API] üí¨ ID —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: ${responseJson.result.comment_id}`);
            }
            log(`[Ozon API] üìÑ –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: ${responseBody}`);
        } catch (e) {
            log(`[Ozon API] üìÑ –û—Ç–≤–µ—Ç (–Ω–µ JSON): ${responseBody}`);
        }
    } else {
        log(`[Ozon API] ‚ùå –û–®–ò–ë–ö–ê: HTTP ${code} –¥–ª—è –æ—Ç–∑—ã–≤–∞ ${feedbackId}`);
        log(`[Ozon API] üìã –¢–µ–ª–æ –æ—à–∏–±–∫–∏: ${responseBody}`);
        
        // –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫
        if (code === 400) {
            log(`[Ozon API] üîç 400 Bad Request - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å review_id –∏–ª–∏ —Ç–µ–∫—Å—Ç–∞ –æ—Ç–≤–µ—Ç–∞`);
        } else if (code === 401) {
            log(`[Ozon API] üîç 401 Unauthorized - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ Client-Id –∏ Api-Key`);
        } else if (code === 403) {
            log(`[Ozon API] üîç 403 Forbidden - –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤`);
        } else if (code === 404) {
            log(`[Ozon API] üîç 404 Not Found - –æ—Ç–∑—ã–≤ —Å ID ${feedbackId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        } else if (code === 409) {
            log(`[Ozon API] üîç 409 Conflict - –≤–æ–∑–º–æ–∂–Ω–æ, –æ—Ç–≤–µ—Ç —É–∂–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —ç—Ç–æ—Ç –æ—Ç–∑—ã–≤`);
        } else if (code === 422) {
            log(`[Ozon API] üîç 422 Unprocessable Entity - –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞`);
        } else if (code === 429) {
            log(`[Ozon API] üîç 429 Too Many Requests - –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤`);
        } else if (code >= 500) {
            log(`[Ozon API] üîç ${code} Server Error - –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ Ozon`);
        }
    }
    
    const success = code === 200;
    const errorMessage = success ? '' : `HTTP ${code}: ${responseBody}`;
    
    return [success, errorMessage, responseBody];
}

// --- Ozon –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–±–æ—Ä –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥—É–±–ª–µ–π ---

function collectOzonReviewsIncremental(store, overlapHours = 24) {
  // 1. –ü–æ–ª—É—á–∏—Ç—å lastDate –∏–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  const progress = getOzonStoreProgress(store.id) || {};
  let fromDate;
  if (progress.lastDate) {
    fromDate = new Date(progress.lastDate);
    fromDate.setHours(fromDate.getHours() - overlapHours);
  } else if (store.settings && store.settings.startDate) {
    fromDate = new Date(store.settings.startDate);
  } else {
    fromDate = null; // –ü–æ–ª—É—á–∞—Ç—å –≤—Å–µ —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞
  }
  const toDate = new Date();
  log(`[OzonIncr] –î–∏–∞–ø–∞–∑–æ–Ω: ${fromDate ? fromDate.toISOString() : '–Ω–∞—á–∞–ª–æ'} ‚Äî ${toDate.toISOString()}`);
  // 2. –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–∑—ã–≤—ã —á–µ—Ä–µ–∑ getOzonFeedbacks —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –¥–∞—Ç
  const feedbacks = getOzonFeedbacks(store.credentials.clientId, store.credentials.apiKey, false, store).filter(fb => {
    if (!fromDate) return true;
    return new Date(fb.createdDate) >= fromDate && new Date(fb.createdDate) <= toDate;
  });
  // 3. –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –¥—É–±–ª–∏ –ø–æ –ª–∏—Å—Ç—É
  const uniqueFeedbacks = filterDuplicateOzonReviews(feedbacks, store);
  // 4. –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å (lastDate = newest createdDate –≤ batch)
  const lastDate = uniqueFeedbacks.reduce((max, r) => {
    const d = new Date(r.createdDate);
    return (!max || d>max) ? d : max;
  }, fromDate);
  if (lastDate) updateOzonStoreProgress(store.id, { lastDate: lastDate.toISOString() });
  log(`[OzonIncr] –ü–æ–ª—É—á–µ–Ω–æ: ${feedbacks.length}, –Ω–æ–≤—ã—Ö: ${uniqueFeedbacks.length}`);
  return uniqueFeedbacks;
}

function filterDuplicateOzonReviews(reviews, store) {
  const sheet = createOrGetSheet(`–û—Ç–∑—ã–≤—ã (${store.name})`, CONFIG.HEADERS);
  const existingIds = getProcessedIdsFromSheet(sheet);
  return reviews.filter(r => !existingIds.has(r.id));
}

function getOzonStoreProgress(storeId) {
  const raw = PropertiesService.getScriptProperties().getProperty(`ozon_inc_progress_${storeId}`);
  return raw ? JSON.parse(raw) : {};
}
function updateOzonStoreProgress(storeId, data) {
  const current = getOzonStoreProgress(storeId);
  const next = { ...current, ...data };
  PropertiesService.getScriptProperties().setProperty(`ozon_inc_progress_${storeId}`, JSON.stringify(next));
}

// –í —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π/–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Ozon:
// –≤–º–µ—Å—Ç–æ –≤—ã–∑–æ–≤–∞ getOzonFeedbacks –¥–ª—è Ozon
// - –≤—ã–∑—ã–≤–∞—Ç—å collectOzonReviewsIncremental(store)
// - batch —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ª–∏—Å—Ç (–∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å)

// ============ DATA (STORE & TEMPLATE) MANAGEMENT ============
function getStores() {
  const storesJson = PropertiesService.getUserProperties().getProperty(CONFIG.PROPERTIES_KEY);
  if (!storesJson) return [];
  const stores = JSON.parse(storesJson);
  return stores.map(store => {
      if (typeof store.isActive === 'undefined') store.isActive = true;
      // Ensure settings object exists for backward compatibility
      if (!store.settings) store.settings = {};
      return store;
  });
}

function saveStore(store) {
  log(`–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞: ${store.name}${store.settings && store.settings.startDate ? ' (–¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ' + store.settings.startDate + ')' : ''}`);
  const stores = getStores();
  const storeIndex = stores.findIndex(s => s.id === store.id);
  
  if (typeof store.isActive === 'undefined') store.isActive = true;
  // Ensure settings object exists
  if (!store.settings) store.settings = {};
  
  // üöÄ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
  let shouldResetProgress = false;
  if (storeIndex > -1) {
    const oldStore = stores[storeIndex];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤–∞–∂–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫, –≤–ª–∏—è—é—â–∏—Ö –Ω–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏—é
    const oldStartDate = oldStore.settings?.startDate;
    const newStartDate = store.settings?.startDate;
    const oldIncludeAnswered = oldStore.settings?.includeAnswered;
    const newIncludeAnswered = store.settings?.includeAnswered;
    const oldSortOldestFirst = oldStore.settings?.sortOldestFirst;
    const newSortOldestFirst = store.settings?.sortOldestFirst;
    
    if (oldStartDate !== newStartDate) {
      log(`[${store.name}] üìÖ –ò–ó–ú–ï–ù–ï–ù–ê –¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø–æ–∏—Å–∫–∞: "${oldStartDate}" ‚Üí "${newStartDate}"`);
      shouldResetProgress = true;
    }
    
    if (oldIncludeAnswered !== newIncludeAnswered) {
      log(`[${store.name}] üîÑ –ò–ó–ú–ï–ù–ï–ù–ê –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö: ${oldIncludeAnswered} ‚Üí ${newIncludeAnswered}`);
      shouldResetProgress = true;
    }
    
    if (oldSortOldestFirst !== newSortOldestFirst) {
      log(`[${store.name}] üìä –ò–ó–ú–ï–ù–ï–ù–ê –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏: sortOldestFirst ${oldSortOldestFirst} ‚Üí ${newSortOldestFirst}`);
      // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏—é, –Ω–æ –æ–±–Ω—É–ª—è–µ–º –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã
      shouldResetProgress = true;
    }
    
    stores[storeIndex] = store; 
  } else {
    store.id = store.id || new Date().getTime().toString(); 
    stores.push(store);
    shouldResetProgress = false; // –ù–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω - –Ω–µ—Ç —Å—Ç–∞—Ä–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞
  }
  
  // üöÄ –°–ë–†–ê–°–´–í–ê–ï–ú –ü–†–û–ì–†–ï–°–° –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
  if (shouldResetProgress) {
    resetStoreProgress(store.id);
    log(`[${store.name}] üîÑ –°–ë–†–û–®–ï–ù –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑-–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫`);
  }
  
  PropertiesService.getUserProperties().setProperty(CONFIG.PROPERTIES_KEY, JSON.stringify(stores));
  createOrGetSheet(`–û—Ç–∑—ã–≤—ã (${store.name})`, CONFIG.HEADERS);
  return getStores();
}

function deleteStore(storeId) {
  log(`–£–¥–∞–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ —Å ID: ${storeId}`);
  let stores = getStores();
  stores = stores.filter(s => s.id !== storeId);
  PropertiesService.getUserProperties().setProperty(CONFIG.PROPERTIES_KEY, JSON.stringify(stores));
  return getStores();
}

function getTemplates() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(CONFIG.SHEETS.TEMPLATES);
  if (!sheet || sheet.getLastRow() < 2) return [];
  // Use getDisplayValues() to get the formatted string, not the underlying value (which can be a date)
  return sheet.getRange(2, 1, sheet.getLastRow() - 1, 2).getDisplayValues().map(row => ({ 
    text: row[0], 
    rating: row[1].trim()
  })).filter(t => t.text.trim() && t.rating);
}

function fillInitialTemplates() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(CONFIG.SHEETS.TEMPLATES);
  if (sheet.getLastRow() <= 1) {
    const templates = [
      ['–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –†–∞–¥—ã, —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å! üòä', '5'],
      ['–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–∫—É–ø–∫—É! –ñ–¥–µ–º –≤–∞—Å —Å–Ω–æ–≤–∞! ‚ù§Ô∏è', '5'],
      ['–°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã—Å–æ–∫—É—é –æ—Ü–µ–Ω–∫—É! –í—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å!', '4-5'],
      ['–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–∑—ã–≤! –ü—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫!', '4']
    ];
    sheet.getRange(2, 1, templates.length, 2).setValues(templates);
  }
}

function createOrGetSheet(sheetName, headers) {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  let sheet = ss.getSheetByName(sheetName);
  if (!sheet) {
    sheet = ss.insertSheet(sheetName);
    log(`–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ª–∏—Å—Ç: "${sheetName}"`);
  }
  
  if (headers && headers.length > 0) {
    const currentHeaders = sheet.getRange(1, 1, 1, sheet.getMaxColumns()).getValues()[0];
    if (currentHeaders.join('') !== headers.join('')) {
        sheet.getRange(1, 1, 1, headers.length).setValues([headers]).setFontWeight('bold').setBackground('#4a86e8').setFontColor('#ffffff');
        sheet.setFrozenRows(1);
        headers.forEach((_, i) => sheet.autoResizeColumn(i + 1));
        log(`–û–±–Ω–æ–≤–ª–µ–Ω—ã –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ –ª–∏—Å—Ç–µ "${sheetName}".`);
    }
  }
  return sheet;
}

function selectRandomTemplate(templates, rating) {
  const suitable = templates.filter(t => {
      if (!t.rating) return false;
      if (t.rating.includes('-')) {
          const [min, max] = t.rating.split('-').map(Number);
          return rating >= min && rating <= max;
      }
      return Number(t.rating) === rating;
  });
  if (suitable.length === 0) return null;
  return suitable[Math.floor(Math.random() * suitable.length)].text;
}

function getProcessedIdsFromSheet(sheet) {
  if (sheet.getLastRow() < 2) return new Set();
  const idCol = CONFIG.HEADERS.indexOf('ID –æ—Ç–∑—ã–≤–∞') + 1;
  if (idCol === 0) {
    log('–û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ "ID –æ—Ç–∑—ã–≤–∞" –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤.');
    return new Set();
  }
  const ids = sheet.getRange(2, idCol, sheet.getLastRow() - 1, 1).getDisplayValues().flat();
  return new Set(ids.filter(id => id));
}

function manuallyDeleteReviewById() {
  const ui = SpreadsheetApp.getUi();
  const response = ui.prompt('–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞', '–í–≤–µ–¥–∏—Ç–µ ID –æ—Ç–∑—ã–≤–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –ª–æ–≥–∞:', ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK || !response.getResponseText()) {
    log('–û–ø–µ—Ä–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.');
    return;
  }

  const feedbackId = response.getResponseText().trim();
  log(`–ó–∞–ø—É—Å–∫ —Ä—É—á–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞ —Å ID: ${feedbackId}`);
  const stores = getStores();
  let foundAndDeleted = false;

  stores.forEach(store => {
    const sheetName = `–û—Ç–∑—ã–≤—ã (${store.name})`;
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(sheetName);
    if (sheet && sheet.getLastRow() > 1) {
      const ids = sheet.getRange(2, 1, sheet.getLastRow() - 1, 1).getValues().flat();
      for (let i = ids.length - 1; i >= 0; i--) {
        if (String(ids[i]) == feedbackId) {
          log(`–ù–∞–π–¥–µ–Ω –æ—Ç–∑—ã–≤ ID ${feedbackId} –≤ "${store.name}" –Ω–∞ —Å—Ç—Ä–æ–∫–µ ${i + 2}. –£–¥–∞–ª—è—é.`);
          sheet.deleteRow(i + 2);
          foundAndDeleted = true;
          break;
        }
      }
    }
  });

  if (foundAndDeleted) {
    ui.alert('–£—Å–ø–µ—Ö', `–ó–∞–ø–∏—Å—å –æ–± –æ—Ç–∑—ã–≤–µ —Å ID "${feedbackId}" —É–¥–∞–ª–µ–Ω–∞.`);
  } else {
    ui.alert('–ù–µ –Ω–∞–π–¥–µ–Ω–æ', `–û—Ç–∑—ã–≤ —Å ID "${feedbackId}" –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
  }
}

// ============ WB TESTING FUNCTIONS ============
/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –æ—Ç–∑—ã–≤ WB
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±–∞ endpoint'–∞ –±–µ–∑ –≤–ª–∏—è–Ω–∏—è –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
 */
function testWbFeedbackAnswerById() {
  const ui = SpreadsheetApp.getUi();
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤
  const stores = getStores().filter(s => s.isActive && s.marketplace === 'Wildberries');
  if (stores.length === 0) {
    ui.alert('‚ùå –û—à–∏–±–∫–∞', '–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ Wildberries –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.', ui.ButtonSet.OK);
    return;
  }
  
  // –í—ã–±–∏—Ä–∞–µ–º –º–∞–≥–∞–∑–∏–Ω (–ø–æ–∫–∞ –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π)
  const store = stores[0];
  log(`[WB TEST] üß™ –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞: ${store.name}`);
  
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID –æ—Ç–∑—ã–≤–∞
  const feedbackIdResponse = ui.prompt('üß™ –¢–µ—Å—Ç WB API', 
    '–í–≤–µ–¥–∏—Ç–µ ID –æ—Ç–∑—ã–≤–∞ Wildberries –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', ui.ButtonSet.OK_CANCEL);
  
  if (feedbackIdResponse.getSelectedButton() !== ui.Button.OK || !feedbackIdResponse.getResponseText().trim()) {
    log('[WB TEST] ‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.');
    return;
  }
  
  const feedbackId = feedbackIdResponse.getResponseText().trim();
  log(`[WB TEST] üéØ ID –æ—Ç–∑—ã–≤–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${feedbackId}`);
  
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
  const answerTextResponse = ui.prompt('üß™ –¢–µ—Å—Ç WB API', 
    '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (2-5000 —Å–∏–º–≤–æ–ª–æ–≤):', ui.ButtonSet.OK_CANCEL);
    
  if (answerTextResponse.getSelectedButton() !== ui.Button.OK || !answerTextResponse.getResponseText().trim()) {
    log('[WB TEST] ‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.');
    return;
  }
  
  const answerText = answerTextResponse.getResponseText().trim();
  
  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –æ—Ç–≤–µ—Ç–∞
  if (answerText.length < 2) {
    ui.alert('‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏', '–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π (–º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞).', ui.ButtonSet.OK);
    return;
  }
  if (answerText.length > 5000) {
    ui.alert('‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏', '–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–º–∞–∫—Å–∏–º—É–º 5000 —Å–∏–º–≤–æ–ª–æ–≤).', ui.ButtonSet.OK);
    return;
  }
  
  log(`[WB TEST] üìù –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: "${answerText}" (${answerText.length} —Å–∏–º–≤–æ–ª–æ–≤)`);
  
  // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const confirmResponse = ui.alert('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï', 
    `–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –†–ï–ê–õ–¨–ù–´–ô –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Ç–∑—ã–≤ ${feedbackId} –≤ –º–∞–≥–∞–∑–∏–Ω–µ "${store.name}"!\n\n–¢–µ–∫—Å—Ç: "${answerText}"\n\n–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?`, 
    ui.ButtonSet.YES_NO);
    
  if (confirmResponse !== ui.Button.YES) {
    log('[WB TEST] ‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞ —ç—Ç–∞–ø–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.');
    return;
  }
  
  // –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –Ω–∞ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∞ –¥–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –ª–æ–≥–æ–≤
  const wasDevMode = isDevMode();
  if (!wasDevMode) {
    log('[WB TEST] üõ†Ô∏è –í—Ä–µ–º–µ–Ω–Ω–æ –≤–∫–ª—é—á–∞–µ–º Dev Mode –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è...');
    setDevMode('true');
  }
  
  try {
    log('[WB TEST] üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞...');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –¥–≤—É–º—è –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ endpoint'–æ–≤
    const result = sendWbFeedbackAnswer(feedbackId, answerText, store.credentials.apiKey);
    const [success, errorMessage, responseBody] = result;
    
    log(`[WB TEST] üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê:`);
    log(`[WB TEST] ‚úÖ –£—Å–ø–µ—Ö: ${success ? '–î–ê' : '–ù–ï–¢'}`);
    log(`[WB TEST] üìù –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: ${errorMessage || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    log(`[WB TEST] üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${responseBody || '–ø—É—Å—Ç–æ–π'}`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if (success) {
      ui.alert('‚úÖ –£–°–ü–ï–•', 
        `–û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!\n\n–û—Ç–∑—ã–≤ ID: ${feedbackId}\n–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${responseBody}`, 
        ui.ButtonSet.OK);
    } else {
      ui.alert('‚ùå –û–®–ò–ë–ö–ê', 
        `–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç.\n\n–û—à–∏–±–∫–∞: ${errorMessage}\n–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${responseBody}\n\n–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ª–æ–≥–µ –æ—Ç–ª–∞–¥–∫–∏.`, 
        ui.ButtonSet.OK);
    }
    
  } catch (e) {
    log(`[WB TEST] ‚õî –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤ —Ç–µ—Å—Ç–µ: ${e.message}`);
    log(`[WB TEST] üîç Stack trace: ${e.stack}`);
    ui.alert('‚õî –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê', 
      `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:\n\n${e.message}\n\n–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ª–æ–≥–µ –æ—Ç–ª–∞–¥–∫–∏.`, 
      ui.ButtonSet.OK);
  } finally {
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
    if (!wasDevMode) {
      log('[WB TEST] üõ†Ô∏è –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞...');
      setDevMode('false');
    }
    
    log('[WB TEST] üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ü–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏ –≤ –ª–∏—Å—Ç–µ "üêû –õ–æ–≥ –æ—Ç–ª–∞–¥–∫–∏".');
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞ WB
 * –ü–æ–º–æ–≥–∞–µ—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å, –ø–æ—á–µ–º—É –æ—Ç–∑—ã–≤ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç
 */
function checkWbFeedbackStatus(feedbackId, apiKey) {
  try {
    log(`[WB Check] üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–∑—ã–≤–∞ ${feedbackId}...`);
    
    const url = `https://feedbacks-api.wildberries.ru/api/v1/feedback?id=${feedbackId}`;
    
    const response = UrlFetchApp.fetch(url, {
      method: 'GET',
      headers: { 'Authorization': apiKey },
      muteHttpExceptions: true
    });
    
    const code = response.getResponseCode();
    const responseBody = response.getContentText();
    
    log(`[WB Check] üì• –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${code}`);
    log(`[WB Check] üìã –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: ${responseBody}`);
    
    if (code === 200) {
      try {
        const feedback = JSON.parse(responseBody);
        const hasAnswer = feedback.answer && feedback.answer.text;
        const createdDate = feedback.createdDate;
        const rating = feedback.rating;
        
        log(`[WB Check] ‚úÖ –û—Ç–∑—ã–≤ –Ω–∞–π–¥–µ–Ω:`);
        log(`[WB Check] üìÖ –î–∞—Ç–∞: ${createdDate}`);
        log(`[WB Check] ‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${rating}`);
        log(`[WB Check] üí¨ –ò–º–µ–µ—Ç –æ—Ç–≤–µ—Ç: ${hasAnswer ? '–î–ê' : '–ù–ï–¢'}`);
        if (hasAnswer) {
          log(`[WB Check] üìù –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: "${feedback.answer.text}"`);
        }
        
        return { exists: true, hasAnswer, feedback };
      } catch (e) {
        log(`[WB Check] ‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: ${e.message}`);
        return { exists: false, error: 'JSON parse error' };
      }
    } else {
      log(`[WB Check] ‚ùå –û—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞ API: ${code}`);
      return { exists: false, error: `HTTP ${code}: ${responseBody}` };
    }
  } catch (e) {
    log(`[WB Check] ‚õî –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${e.message}`);
    return { exists: false, error: e.message };
  }
}

// ============ OZON TESTING FUNCTIONS ============
/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ Ozon API
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π last_id –ø–∞–≥–∏–Ω–∞—Ü–∏—è –∏ —Å–∫–æ–ª—å–∫–æ –æ—Ç–∑—ã–≤–æ–≤ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å
 */
function testOzonFeedbackPagination() {
  const ui = SpreadsheetApp.getUi();
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö Ozon –º–∞–≥–∞–∑–∏–Ω–æ–≤
  const stores = getStores().filter(s => s.isActive && s.marketplace === 'Ozon');
  if (stores.length === 0) {
    ui.alert('‚ùå –û—à–∏–±–∫–∞', '–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ Ozon –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.', ui.ButtonSet.OK);
    return;
  }
  
  // –í—ã–±–∏—Ä–∞–µ–º –º–∞–≥–∞–∑–∏–Ω (–ø–æ–∫–∞ –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π)
  const store = stores[0];
  log(`[Ozon TEST] üß™ –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞: ${store.name}`);
  
  // –í—ã–±–∏—Ä–∞–µ–º —Ä–µ–∂–∏–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const testModeResponse = ui.alert('üß™ –¢–µ—Å—Ç Ozon API', 
    '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:\n\n' +
    '–î–ê = –ü–æ–ª—É—á–∏—Ç—å –í–°–ï –æ—Ç–∑—ã–≤—ã (–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ + –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ)\n' +
    '–ù–ï–¢ = –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã\n' +
    '–û–¢–ú–ï–ù–ê = –í—ã—Ö–æ–¥', 
    ui.ButtonSet.YES_NO_CANCEL);
  
  if (testModeResponse === ui.Button.CANCEL) {
    log('[Ozon TEST] ‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.');
    return;
  }
  
  const includeAnswered = (testModeResponse === ui.Button.YES);
  log(`[Ozon TEST] üéØ –†–µ–∂–∏–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${includeAnswered ? '–í–°–ï –æ—Ç–∑—ã–≤—ã' : '—Ç–æ–ª—å–∫–æ –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ'}`);
  
  // –í—ã–±–∏—Ä–∞–µ–º –ª–∏–º–∏—Ç —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const pageLimitResponse = ui.prompt('üß™ –¢–µ—Å—Ç Ozon API', 
    '–°–∫–æ–ª—å–∫–æ —Å—Ç—Ä–∞–Ω–∏—Ü –º–∞–∫—Å–∏–º—É–º –∑–∞–ø—Ä–æ—Å–∏—Ç—å?\n(1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞ = –¥–æ 100 –æ—Ç–∑—ã–≤–æ–≤)\n\n–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:\n‚Ä¢ –î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞: 1-3\n‚Ä¢ –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: 5-10\n‚Ä¢ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –í–°–ï–• –¥–∞–Ω–Ω—ã—Ö: 100', 
    ui.ButtonSet.OK_CANCEL);
    
  if (pageLimitResponse.getSelectedButton() !== ui.Button.OK) {
    log('[Ozon TEST] ‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.');
    return;
  }
  
  let maxPages;
  try {
    maxPages = parseInt(pageLimitResponse.getResponseText().trim()) || 3;
    if (maxPages < 1) maxPages = 1;
    if (maxPages > 100) maxPages = 100;
  } catch (e) {
    maxPages = 3;
  }
  
  log(`[Ozon TEST] üìä –õ–∏–º–∏—Ç —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${maxPages}`);
  
  // –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –Ω–∞ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∞ –¥–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –ª–æ–≥–æ–≤
  const wasDevMode = isDevMode();
  if (!wasDevMode) {
    log('[Ozon TEST] üõ†Ô∏è –í—Ä–µ–º–µ–Ω–Ω–æ –≤–∫–ª—é—á–∞–µ–º Dev Mode –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è...');
    setDevMode('true');
  }
  
  try {
    log('[Ozon TEST] üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ Ozon...');
    const startTime = new Date();
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    // –í—Ä–µ–º–µ–Ω–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è —Ç–µ—Å—Ç–∞
    const originalMaxPages = 100;
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –≤–µ—Ä—Å–∏—é —Ñ—É–Ω–∫—Ü–∏–∏ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º —á–∏—Å–ª–æ–º —Å—Ç—Ä–∞–Ω–∏—Ü
    const testResult = testOzonFeedbacksWithLimitedPages(
      store.credentials.clientId, 
      store.credentials.apiKey, 
      includeAnswered, 
      store, 
      maxPages
    );
    
    const endTime = new Date();
    const duration = Math.round((endTime - startTime) / 1000);
    
    log(`[Ozon TEST] üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê:`);
    log(`[Ozon TEST] ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: ${testResult.length}`);
    log(`[Ozon TEST] ‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${duration} —Å–µ–∫—É–Ω–¥`);
    log(`[Ozon TEST] üìÑ –°—Ç—Ä–∞–Ω–∏—Ü –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${testResult.pagesProcessed || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
    log(`[Ozon TEST] üîÑ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏—è: ${testResult.usedPagination ? '–î–ê (last_id)' : '–ù–ï–¢'}`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø–µ—Ä–≤—ã—Ö –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ—Ç–∑—ã–≤–æ–≤
    if (testResult.length > 0) {
      log(`[Ozon TEST] üìù –ü—Ä–∏–º–µ—Ä—ã –æ—Ç–∑—ã–≤–æ–≤ (–ø–µ—Ä–≤—ã–µ 3):`);
      testResult.slice(0, 3).forEach((review, index) => {
        log(`[Ozon TEST] ${index + 1}. ID: ${review.id}, –î–∞—Ç–∞: ${review.createdDate}, –†–µ–π—Ç–∏–Ω–≥: ${review.rating}, –¢–µ–∫—Å—Ç: "${review.text.substring(0, 50)}..."`);
      });
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    const resultMessage = 
      `‚úÖ –£–°–ü–ï–®–ù–û –ü–†–û–¢–ï–°–¢–ò–†–û–í–ê–ù–û!\n\n` +
      `üìä –ü–æ–ª—É—á–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: ${testResult.length}\n` +
      `‚è±Ô∏è –í—Ä–µ–º—è: ${duration} —Å–µ–∫\n` +
      `üìÑ –°—Ç—Ä–∞–Ω–∏—Ü: ${testResult.pagesProcessed || 'N/A'}\n` +
      `üîÑ –ü–∞–≥–∏–Ω–∞—Ü–∏—è: ${testResult.usedPagination ? 'last_id (–ü–†–ê–í–ò–õ–¨–ù–û!)' : '–ù–ï –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ê'}\n\n` +
      `${testResult.length > 0 ? '–ü–µ—Ä–≤—ã–π –æ—Ç–∑—ã–≤:\n' + testResult[0].text.substring(0, 100) + '...' : '–û—Ç–∑—ã–≤—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'}\n\n` +
      `–ü–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏ –≤ "üêû –õ–æ–≥ –æ—Ç–ª–∞–¥–∫–∏"`;
      
    ui.alert('üéâ –¢–ï–°–¢ OZON –ü–ê–ì–ò–ù–ê–¶–ò–ò –ó–ê–í–ï–†–®–ï–ù', resultMessage, ui.ButtonSet.OK);
    
  } catch (e) {
    log(`[Ozon TEST] ‚õî –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤ —Ç–µ—Å—Ç–µ: ${e.message}`);
    log(`[Ozon TEST] üîç Stack trace: ${e.stack}`);
    ui.alert('‚õî –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê', 
      `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:\n\n${e.message}\n\n–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ª–æ–≥–µ –æ—Ç–ª–∞–¥–∫–∏.`, 
      ui.ButtonSet.OK);
  } finally {
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
    if (!wasDevMode) {
      log('[Ozon TEST] üõ†Ô∏è –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞...');
      setDevMode('false');
    }
    
    log('[Ozon TEST] üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ü–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏ –≤ –ª–∏—Å—Ç–µ "üêû –õ–æ–≥ –æ—Ç–ª–∞–¥–∫–∏".');
  }
}

/**
 * –¢–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º —á–∏—Å–ª–æ–º —Å—Ç—Ä–∞–Ω–∏—Ü
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, —á—Ç–æ–±—ã –Ω–µ –Ω–∞–≥—Ä—É–∂–∞—Ç—å API
 */
function testOzonFeedbacksWithLimitedPages(clientId, apiKey, includeAnswered, store, maxPages) {
  log(`[Ozon TEST] üéØ –¢–µ—Å—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Å –ª–∏–º–∏—Ç–æ–º ${maxPages} —Å—Ç—Ä–∞–Ω–∏—Ü...`);
  
  const url = 'https://api-seller.ozon.ru/v1/review/list';
  
  let allReviews = [];
  let lastId = "";
  let hasNext = true;
  let pageNumber = 1;
  const limit = OZON_CONFIG.API_LIMITS.MAX_LIMIT; // 100
  
  // –ë–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø—Ä–æ—Å–∞ (–∫–æ–ø–∏—Ä—É–µ–º –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏)
  let basePayload = {
    filter: {
      has_text: true,
    },
    sort: {
      type: 'CREATED_AT',
      order: 'DESC'
    },
    limit: limit
  };
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ —Å—Ç–∞—Ç—É—Å—É –æ—Ç–≤–µ—Ç–æ–≤
  if (includeAnswered) {
    basePayload.filter.status = ['PENDING', 'PROCESSED', 'MODERATED', 'NEW'];
  } else {
    basePayload.filter.has_answer = false;
    basePayload.filter.status = ['PENDING', 'MODERATED', 'NEW'];
  }

  // –§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–∞–≥–∞–∑–∏–Ω–∞
  if (store && store.settings && store.settings.startDate) {
    const startDate = store.settings.startDate;
    const today = new Date().toISOString().split('T')[0];
    
    basePayload.filter.date_from = formatDateForOzon(startDate);
    basePayload.filter.date_to = formatDateForOzon(today);
    
    log(`[Ozon TEST] üóìÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω —Ñ–∏–ª—å—Ç—Ä –¥–∞—Ç: ${startDate} - ${today}`);
  }
  
  // –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π)
  while (hasNext && pageNumber <= maxPages) {
    log(`[Ozon TEST] üìÑ –¢–µ—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${pageNumber}/${maxPages} (last_id: "${lastId}")...`);
    
    const payload = {
      ...basePayload,
      last_id: lastId
    };
    
    try {
      const response = UrlFetchApp.fetch(url, {
        method: 'POST',
        headers: { 
          'Client-Id': clientId, 
          'Api-Key': apiKey,
          'Content-Type': 'application/json'
        },
        payload: JSON.stringify(payload),
        muteHttpExceptions: true
      });
      
      const responseCode = response.getResponseCode();
      const responseBody = response.getContentText();
      
      log(`[Ozon TEST] üåê –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber}: –∫–æ–¥ ${responseCode}, —Ä–∞–∑–º–µ—Ä ${responseBody.length} —Å–∏–º–≤–æ–ª–æ–≤`);
      
      if (responseCode !== 200) {
        log(`[Ozon TEST] ‚ùå –û–®–ò–ë–ö–ê –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${pageNumber}: –ö–æ–¥ ${responseCode}`);
        break;
      }
      
      const json = JSON.parse(responseBody);
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞
      let reviews = [];
      let resultData = null;
      
      if (json.result) {
        resultData = json.result;
        reviews = json.result.reviews || [];
      } else if (json.reviews) {
        reviews = json.reviews;
      } else if (json.data && json.data.reviews) {
        resultData = json.data;
        reviews = json.data.reviews;
      }
      
      log(`[Ozon TEST] üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber}: –ø–æ–ª—É—á–µ–Ω–æ ${reviews.length} –æ—Ç–∑—ã–≤–æ–≤`);
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–∑—ã–≤—ã
      const processedReviews = reviews.map(fb => ({
        id: fb.id, 
        createdDate: fb.published_at || fb.created_at, 
        rating: fb.rating,
        text: fb.text || '(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)', 
        user: '–ê–Ω–æ–Ω–∏–º',
        product: { 
          id: fb.sku || fb.offer_id,
          name: '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
          url: `https://www.ozon.ru/product/${fb.sku || fb.offer_id}`
        }
      }));
      
      allReviews = allReviews.concat(processedReviews);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
      if (resultData) {
        hasNext = resultData.has_next || false;
        lastId = resultData.last_id || "";
        log(`[Ozon TEST] üìã has_next: ${hasNext}, last_id: "${lastId}"`);
      } else {
        hasNext = (reviews.length === limit);
        log(`[Ozon TEST] ‚ö†Ô∏è –ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏. –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º has_next = ${hasNext}`);
      }
      
      // –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –º–µ–Ω—å—à–µ –∑–∞–ø–∏—Å–µ–π —á–µ–º –ª–∏–º–∏—Ç - –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
      if (reviews.length < limit) {
        log(`[Ozon TEST] ‚úÖ –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber}: ${reviews.length} < ${limit}`);
        hasNext = false;
      }
      
      pageNumber++;
      
      // Rate limiting –¥–ª—è —Ç–µ—Å—Ç–∞ (–±—ã—Å—Ç—Ä–µ–µ —á–µ–º –≤ –ø—Ä–æ–¥–∞–∫—à–Ω–µ)
      Utilities.sleep(50);
      
    } catch (e) {
      log(`[Ozon TEST] ‚ùå –û–®–ò–ë–ö–ê –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${pageNumber}: ${e.message}`);
      break;
    }
  }
  
  // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  allReviews.sort((a, b) => new Date(b.createdDate) - new Date(a.createdDate));
  
  // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  allReviews.pagesProcessed = pageNumber - 1;
  allReviews.usedPagination = (pageNumber > 1);
  
  log(`[Ozon TEST] üéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω: ${allReviews.length} –æ—Ç–∑—ã–≤–æ–≤ –∑–∞ ${allReviews.pagesProcessed} —Å—Ç—Ä–∞–Ω–∏—Ü`);
  return allReviews;
}

// ============ ADVANCED PROCESSING FUNCTIONS ============

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–æ–ª—å–∫–æ –º–∞–≥–∞–∑–∏–Ω–æ–≤ Wildberries
 * –ü–æ–ª–µ–∑–Ω–æ –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –æ–¥–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
 */
function processWildberriesStores() {
  const devMode = isDevMode();
  log(`--- –ó–ê–ü–£–°–ö –û–ë–†–ê–ë–û–¢–ö–ò WILDBERRIES (${devMode ? '–†–ï–ñ–ò–ú –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–ê' : '–ë–û–ï–í–û–ô –†–ï–ñ–ò–ú'}) ---`);
  const wbStores = getStores().filter(s => s.isActive && s.marketplace === 'Wildberries');
  
  if (wbStores.length === 0) {
    log('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ Wildberries –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.');
    return;
  }
  
  log(`–ù–∞–π–¥–µ–Ω–æ ${wbStores.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ WB.`);
  processStoresWithTimeControl(wbStores, devMode);
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–æ–ª—å–∫–æ –º–∞–≥–∞–∑–∏–Ω–æ–≤ Ozon
 * –ü–æ–ª–µ–∑–Ω–æ –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –æ–¥–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
 */
function processOzonStores() {
  const devMode = isDevMode();
  log(`--- –ó–ê–ü–£–°–ö –û–ë–†–ê–ë–û–¢–ö–ò OZON (${devMode ? '–†–ï–ñ–ò–ú –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–ê' : '–ë–û–ï–í–û–ô –†–ï–ñ–ò–ú'}) ---`);
  const ozonStores = getStores().filter(s => s.isActive && s.marketplace === 'Ozon');
  
  if (ozonStores.length === 0) {
    log('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ Ozon –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.');
    return;
  }
  
  log(`–ù–∞–π–¥–µ–Ω–æ ${ozonStores.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ Ozon.`);
  processStoresWithTimeControl(ozonStores, devMode);
}

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–ø–∏—Å–∫–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤ —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –≤—Ä–µ–º–µ–Ω–∏
 * @param {Array} stores - –°–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
 * @param {boolean} devMode - –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
 */
function processStoresWithTimeControl(stores, devMode) {
  const maxExecutionTime = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç –ª–∏–º–∏—Ç
  const startTime = Date.now();
  let processedCount = 0;
  
  for (const store of stores) {
    const elapsedTime = Date.now() - startTime;
    const remainingTime = maxExecutionTime - elapsedTime;
    
    if (remainingTime < 30000) {
      log(`‚è±Ô∏è –û–°–¢–ê–ù–û–í–ö–ê: –æ—Å—Ç–∞–ª–æ—Å—å ${Math.round(remainingTime/1000)} —Å–µ–∫`);
      log(`üìä –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${processedCount}/${stores.length} –º–∞–≥–∞–∑–∏–Ω–æ–≤`);
      break;
    }
    
    log(`--- –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é: ${store.name} [${store.marketplace}] (${processedCount + 1}/${stores.length}) ---`);
    log(`‚è±Ô∏è –í—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å: ${Math.round(remainingTime/1000)} —Å–µ–∫`);
    
    const storeStartTime = Date.now();
    processSingleStore(store, devMode);
    const storeDuration = Date.now() - storeStartTime;
    
    processedCount++;
    log(`--- –ó–∞–≤–µ—Ä—à–µ–Ω–æ: ${store.name} (${Math.round(storeDuration/1000)} —Å–µ–∫) ---`);
  }
  
  const totalDuration = Date.now() - startTime;
  log(`--- –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê: ${processedCount}/${stores.length} –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∑–∞ ${Math.round(totalDuration/1000)} —Å–µ–∫ ---`);
}

// ============ TRIGGERS ============
function createTrigger(minutes) {
  deleteAllTriggers();
  ScriptApp.newTrigger('processAllStores').timeBased().everyMinutes(minutes).create();
  log(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç—Ä–∏–≥–≥–µ—Ä –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –Ω–∞ –∫–∞–∂–¥—ã–µ ${minutes} –º–∏–Ω—É—Ç.`);
  SpreadsheetApp.getUi().alert('‚úÖ –¢—Ä–∏–≥–≥–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', `–û–±—Ä–∞–±–æ—Ç–∫–∞ –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–µ ${minutes} –º–∏–Ω—É—Ç.`, SpreadsheetApp.getUi().ButtonSet.OK);
}

function createTrigger5Min() { createTrigger(5); }
function createTrigger30Min() { createTrigger(30); }
function createTrigger1Hour() { createTrigger(60); }

function deleteAllTriggers() {
  const triggers = ScriptApp.getProjectTriggers();
  let deletedCount = 0;
  triggers.forEach(trigger => {
    if (trigger.getHandlerFunction() === 'processAllStores') {
      ScriptApp.deleteTrigger(trigger);
      deletedCount++;
    }
  });
  if (deletedCount > 0) {
    log(`–£–¥–∞–ª–µ–Ω–æ ${deletedCount} —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞.`);
  }
}

// ============ INDIVIDUAL STORE TRIGGERS ============
/**
 * –°–æ–∑–¥–∞—ë—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
 * @param {Object} store - –æ–±—ä–µ–∫—Ç –º–∞–≥–∞–∑–∏–Ω–∞
 * @param {number} intervalMinutes - –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤ –º–∏–Ω—É—Ç–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 240)
 */
function ensureStoreTrigger(store, intervalMinutes = 240) {
  if (!store || !store.id) {
    log(`[Trigger] ‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞`);
    return false;
  }
  const functionName = `processStore_${store.id}`;
  try {
    deleteStoreTrigger(store.id); // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –ø—Ä–µ–∂–¥–µ
    ScriptApp.newTrigger(functionName)
      .timeBased()
      .everyMinutes(intervalMinutes)
      .create();
    log(`[Trigger] ‚úÖ –¢—Ä–∏–≥–≥–µ—Ä —Å–æ–∑–¥–∞–Ω –¥–ª—è "${store.name}" (${functionName}) –∫–∞–∂–¥—ã–µ ${intervalMinutes} –º–∏–Ω—É—Ç.`);
    return true;
  } catch (e) {
    log(`[Trigger] ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è "${store.name}": ${e.message}`);
    return false;
  }
}
/**
 * –£–¥–∞–ª—è–µ—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
 * @param {string} storeId
 */
function deleteStoreTrigger(storeId) {
  try {
    const triggers = ScriptApp.getProjectTriggers();
    const fn = `processStore_${storeId}`;
    triggers.forEach(trig => {
      if (trig.getHandlerFunction() === fn) {
        ScriptApp.deleteTrigger(trig);
      }
    });
    log(`[Trigger] üóëÔ∏è –£–¥–∞–ª—ë–Ω —Ç—Ä–∏–≥–≥–µ—Ä ${fn}`);
    return true;
  } catch(e) {
    log(`[Trigger] ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è ${storeId}: ${e.message}`);
    return false;
  }
}
/**
 * –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã: —Å–æ–∑–¥–∞—ë—Ç –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö, —É–¥–∞–ª—è–µ—Ç –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function syncAllStoreTriggers() {
  const stores = getStores();
  const active = stores.filter(s=>s.isActive);
  active.forEach(store => ensureStoreTrigger(store));
  const triggers = ScriptApp.getProjectTriggers();
  triggers.forEach(trig => {
    const fn = trig.getHandlerFunction();
    if (fn.startsWith('processStore_')) {
      const storeId = fn.substring('processStore_'.length);
      const store = stores.find(s=>s.id===storeId);
      if (!store || !store.isActive) {
        ScriptApp.deleteTrigger(trig);
        log(`[Trigger] üóëÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—ë–Ω —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ/—É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞: ${storeId}`);
      }
    }
  });
  log(`[Trigger] üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.`);
}

/**
 * üî• –û–ö–¢–Ø–ë–†–¨ 2025: –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ URL –¥–ª—è WB API v1
 * ‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–û: v2 endpoint –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢ –¥–ª—è feedbacks!
 * ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –¢–û–õ–¨–ö–û v1 endpoint —Å Unix timestamp –¥–ª—è –¥–∞—Ç
 */
function buildWbApiV1Url(includeAnswered, skip, take, store) {
    const baseUrl = 'https://feedbacks-api.wildberries.ru/api/v1/feedbacks';
    const params = [];
    
    // üî• –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–æ–∫—Ç—è–±—Ä—å 2025)
    params.push(`isAnswered=${includeAnswered}`);
    params.push(`take=${take}`);
    params.push(`skip=${skip}`);
    params.push(`order=dateDesc`);
    
    // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –î–∞—Ç–∞ –≤ Unix timestamp (—Å–µ–∫—É–Ω–¥—ã, –ù–ï —Å—Ç—Ä–æ–∫–∞!)
    if (store?.settings?.startDate) {
        try {
            const startDate = new Date(store.settings.startDate);
            const unixTimestamp = Math.floor(startDate.getTime() / 1000); // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Å–µ–∫—É–Ω–¥—ã
            params.push(`dateFrom=${unixTimestamp}`);
            log(`[WB URL] üìÖ –î–∞—Ç–∞ Unix timestamp: ${unixTimestamp} (${store.settings.startDate})`);
        } catch (e) {
            log(`[WB URL] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –¥–∞—Ç—ã ${store.settings.startDate}: ${e.message}`);
        }
    }
    
    // üöÄ –§–∏–ª—å—Ç—Ä –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if (store?.settings?.minRating) {
        params.push(`valuation=${store.settings.minRating}`);
        log(`[WB URL] ‚≠ê –§–∏–ª—å—Ç—Ä –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É: ${store.settings.minRating}`);
    }
    
    // üöÄ –§–∏–ª—å—Ç—Ä –ø–æ —Ç–æ–≤–∞—Ä—É (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)
    if (store?.settings?.nmId) {
        params.push(`nmId=${store.settings.nmId}`);
        log(`[WB URL] üõçÔ∏è –§–∏–ª—å—Ç—Ä –ø–æ —Ç–æ–≤–∞—Ä—É: ${store.settings.nmId}`);
    }
    
    const fullUrl = `${baseUrl}?${params.join('&')}`;
    log(`[WB URL] üîó Constructed URL: ${fullUrl}`);
    return fullUrl;
}

// ============ OZON TRIGGER MANAGEMENT FUNCTIONS ============

/**
 * ‚úÖ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä—ã Ozon (2 –∞–≤—Ç–æ–º–∞—Ç–∞)
 * –°–æ–∑–¥–∞–µ—Ç —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ Ozon workflow
 */
function setupOzonTriggers() {
  try {
    log('üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ Ozon...');
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã Ozon
    deleteAllOzonTriggers();
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è Ozon workflow (–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π —á–∞—Å)
    ScriptApp.newTrigger('processOzonWorkflow')
      .timeBased()
      .everyHours(1)
      .create();
    
    const message = '‚úÖ –¢—Ä–∏–≥–≥–µ—Ä Ozon –Ω–∞—Å—Ç—Ä–æ–µ–Ω!\n\n–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ü–µ—Å—Å –±—É–¥–µ—Ç:\n‚Ä¢ –ü–æ–¥–±–∏—Ä–∞—Ç—å —à–∞–±–ª–æ–Ω—ã –¥–ª—è NEW –æ—Ç–∑—ã–≤–æ–≤\n‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å PENDING –æ—Ç–≤–µ—Ç—ã\n\n–ó–∞–ø—É—Å–∫: –∫–∞–∂–¥—ã–π —á–∞—Å';
    log('‚úÖ –¢—Ä–∏–≥–≥–µ—Ä Ozon workflow —Å–æ–∑–¥–∞–Ω (–∫–∞–∂–¥—ã–π —á–∞—Å)');
    
    SpreadsheetApp.getUi().alert(
      '‚úÖ –¢—Ä–∏–≥–≥–µ—Ä—ã Ozon –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã',
      message,
      SpreadsheetApp.getUi().ButtonSet.OK
    );
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ Ozon: ${error.message}`);
    SpreadsheetApp.getUi().alert(
      '‚ùå –û—à–∏–±–∫–∞',
      `–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä—ã Ozon: ${error.message}`,
      SpreadsheetApp.getUi().ButtonSet.OK
    );
  }
}

/**
 * ‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ Ozon
 */
function checkOzonTriggersStatus() {
  try {
    const triggers = ScriptApp.getProjectTriggers();
    const ozonTriggers = triggers.filter(t => 
      t.getHandlerFunction() === 'processOzonWorkflow'
    );
    
    if (ozonTriggers.length === 0) {
      SpreadsheetApp.getUi().alert(
        '‚ÑπÔ∏è –¢—Ä–∏–≥–≥–µ—Ä—ã –ù–ï –∞–∫—Ç–∏–≤–Ω—ã',
        '–¢—Ä–∏–≥–≥–µ—Ä—ã Ozon –ù–ï –∞–∫—Ç–∏–≤–Ω—ã.\n\n–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"‚úÖ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä—ã Ozon (2 –∞–≤—Ç–æ–º–∞—Ç–∞)"',
        SpreadsheetApp.getUi().ButtonSet.OK
      );
    } else {
      const trigger = ozonTriggers[0];
      let triggerType = '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
      
      try {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ç—Ä–∏–≥–≥–µ—Ä–∞
        const eventType = trigger.getEventType();
        if (eventType === ScriptApp.EventType.CLOCK) {
          triggerType = '–ø–æ –≤—Ä–µ–º–µ–Ω–∏ (–∫–∞–∂–¥—ã–π —á–∞—Å)';
        }
      } catch (e) {
        triggerType = '–≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ç—Ä–∏–≥–≥–µ—Ä';
      }
      
      const info = `‚úÖ –¢–†–ò–ì–ì–ï–†–´ OZON –ê–ö–¢–ò–í–ù–´\n\n` +
                   `–§—É–Ω–∫—Ü–∏—è: processOzonWorkflow\n` +
                   `–¢–∏–ø: ${triggerType}\n` +
                   `–ù–∞–π–¥–µ–Ω–æ: ${ozonTriggers.length} —Ç—Ä–∏–≥–≥–µ—Ä(–æ–≤)\n\n` +
                   `–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç:\n` +
                   `‚Ä¢ –ü–æ–¥–±–æ—Ä —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è NEW –æ—Ç–∑—ã–≤–æ–≤\n` +
                   `‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ PENDING –æ—Ç–≤–µ—Ç–æ–≤\n` +
                   `‚Ä¢ –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–π —á–∞—Å`;
      
      SpreadsheetApp.getUi().alert(
        '‚úÖ –¢—Ä–∏–≥–≥–µ—Ä—ã –ê–ö–¢–ò–í–ù–´',
        info,
        SpreadsheetApp.getUi().ButtonSet.OK
      );
    }
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ Ozon: ${error.message}`);
    SpreadsheetApp.getUi().alert(
      '‚ùå –û—à–∏–±–∫–∞',
      `–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤: ${error.message}`,
      SpreadsheetApp.getUi().ButtonSet.OK
    );
  }
}

/**
 * ‚ùå –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã Ozon
 */
function deleteAllOzonTriggers() {
  try {
    const triggers = ScriptApp.getProjectTriggers();
    const ozonFunctions = [
      'processOzonWorkflow',
      'processNewOzonReviews', 
      'sendPendingAnswersOzonOnly',
      'collectOzonReviewsAuto'
    ];
    
    let deletedCount = 0;
    
    triggers.forEach(trigger => {
      const functionName = trigger.getHandlerFunction();
      if (ozonFunctions.includes(functionName)) {
        ScriptApp.deleteTrigger(trigger);
        deletedCount++;
        log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ç—Ä–∏–≥–≥–µ—Ä: ${functionName}`);
      }
    });
    
    const message = deletedCount > 0 
      ? `‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ Ozon: ${deletedCount}\n\n–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è Ozon –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.`
      : '‚ÑπÔ∏è –¢—Ä–∏–≥–≥–µ—Ä—ã Ozon –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n\n–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —É–∂–µ –±—ã–ª–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞.';
    
    log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ Ozon: ${deletedCount}`);
    
    SpreadsheetApp.getUi().alert(
      deletedCount > 0 ? '‚úÖ –¢—Ä–∏–≥–≥–µ—Ä—ã —É–¥–∞–ª–µ–Ω—ã' : '‚ÑπÔ∏è –¢—Ä–∏–≥–≥–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã',
      message,
      SpreadsheetApp.getUi().ButtonSet.OK
    );
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ Ozon: ${error.message}`);
    SpreadsheetApp.getUi().alert(
      '‚ùå –û—à–∏–±–∫–∞',
      `–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä—ã Ozon: ${error.message}`,
      SpreadsheetApp.getUi().ButtonSet.OK
    );
  }
}
