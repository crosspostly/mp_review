/**
 * @file Code.gs
 * @description Main backend logic for the Multi-Store Auto-Reply Manager.
 */

// ============ GLOBAL CONFIGURATION ============
const CONFIG = {
  PROPERTIES_KEY: 'REGISTERED_STORES',
  DEV_MODE_KEY: 'DEV_MODE_ENABLED',
  SHEETS: {
    TEMPLATES: '–®–∞–±–ª–æ–Ω—ã –æ—Ç–≤–µ—Ç–æ–≤'
  },
  LOG_SHEET_NAME: 'üêû –õ–æ–≥ –æ—Ç–ª–∞–¥–∫–∏',
  LOG_MAX_ROWS: 2500,
  RESPOND_TO_RATINGS: [4, 5],
  DELAY_BETWEEN_REQUESTS: 1100,
  MAX_FEEDBACKS_PER_RUN: 50,
  MIN_REVIEW_TEXT_LENGTH: 3, // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ –æ—Ç–∑—ã–≤–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
  HEADERS: ['ID –æ—Ç–∑—ã–≤–∞', '–î–∞—Ç–∞ –æ—Ç–∑—ã–≤–∞', '–ê—Ä—Ç–∏–∫—É–ª', '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞', '–°—Å—ã–ª–∫–∞', '–û—Ü–µ–Ω–∫–∞', '–¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞', '–ü–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç', '–°—Ç–∞—Ç—É—Å', '–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏', '–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏'],
  STATUS: {
    PENDING: '–ì–æ—Ç–æ–≤–æ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ',
    SENT: '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ',
    ERROR: '–û—à–∏–±–∫–∞',
    MANUAL: '–†—É—á–Ω–æ–π –æ—Ç–≤–µ—Ç',
    SKIPPED_RATING: '–ü—Ä–æ–ø—É—â–µ–Ω–æ (—Ä–µ–π—Ç–∏–Ω–≥)',
    SKIPPED_PROCESSED: '–ü—Ä–æ–ø—É—â–µ–Ω–æ (—É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω)',
    SKIPPED_EMPTY: '–ü—Ä–æ–ø—É—â–µ–Ω–æ (–ø—É—Å—Ç–æ–π –æ—Ç–∑—ã–≤)',
    NO_TEMPLATE: '–ù–µ—Ç —à–∞–±–ª–æ–Ω–∞'
  }
};

// ============ WILDBERRIES API CONFIGURATION ============
const WB_CONFIG = {
  MARKETPLACE_NAME: 'Wildberries',
  MARKETPLACE_CODE: 'WB',
  API_BASE_URL: 'https://feedbacks-api.wildberries.ru/api/v1',
  ENDPOINTS: {
    GET_FEEDBACKS: '/feedbacks',
    SEND_ANSWER: '/feedbacks'  // {id} –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
  },
  API_LIMITS: {
    MAX_TAKE: 1000,          // –ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç (–ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω)
    DEFAULT_SKIP: 0,
    RECOMMENDED_TAKE: 100,   // –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ª–∏–º–∏—Ç
    SAFE_TAKE: 500,          // –ó–æ–ª–æ—Ç–∞—è —Å–µ—Ä–µ–¥–∏–Ω–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
    PAGINATION_STEP: 100,    // –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    MAX_PAGES: 10            // –ú–∞–∫—Å–∏–º—É–º —Å—Ç—Ä–∞–Ω–∏—Ü –∑–∞ –æ–¥–∏–Ω –∑–∞–ø—É—Å–∫ (1000 –æ—Ç–∑—ã–≤–æ–≤)
  },
  PAGINATION: {
    ENABLED: true,
    STORAGE_KEY: 'WB_LAST_SKIP_OFFSET',
    AUTO_RESET_HOURS: 24     // –°–±—Ä–æ—Å offset –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞
  },
  RATE_LIMITS: {
    REQUESTS_PER_MINUTE: 60,        // –ú–∞–∫—Å–∏–º—É–º –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É
    DELAY_BETWEEN_REQUESTS: 1100,   // –ú–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    BURST_LIMIT: 10,                // –ú–∞–∫—Å–∏–º—É–º –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–¥—Ä—è–¥ (–±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏)
    BURST_DELAY: 100,               // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ burst —Ä–µ–∂–∏–º–µ (–º—Å)
    RECOVERY_DELAY: 5000            // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –∏—Å—á–µ—Ä–ø–∞–Ω–∏—è burst –ª–∏–º–∏—Ç–∞ (–º—Å)
  },
  BATCH_PROCESSING: {
    ENABLED: false,                 // WB API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç batch –æ—Ç–ø—Ä–∞–≤–∫—É
    ALTERNATIVE: 'smart_throttling' // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–º–Ω–æ–µ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏
  },
  RATING_FIELDS: {
    REVIEW_RATING: 'rating',        // –†–µ–π—Ç–∏–Ω–≥ –û–¢–ó–´–í–ê (1-5, –º–æ–∂–µ—Ç –±—ã—Ç—å null –µ—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞ –æ—Ç–∑—ã–≤–∞)
    PRODUCT_RATING: 'productValuation' // –û–±—â–∞—è –û–¶–ï–ù–ö–ê –¢–û–í–ê–†–ê (1-5, –≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ)
  },
  DATA_EXPLANATION: {
    // –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö WB API:
    // 1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫—É–ø–∞–µ—Ç —Ç–æ–≤–∞—Ä ‚Üí —Å—Ç–∞–≤–∏—Ç productValuation (1-5 –∑–≤–µ–∑–¥)
    // 2. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –æ—Ç–∑—ã–≤ ‚Üí –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è rating + text
    // 3. –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –æ—Ü–µ–Ω–∫–∞ —Ç–æ–≤–∞—Ä–∞ (–±–µ–∑ —Ç–µ–∫—Å—Ç–∞) ‚Üí rating=null, text=null
    // 4. –û—Ç–≤–µ—á–∞—Ç—å –º–æ–∂–Ω–æ –¢–û–õ–¨–ö–û –Ω–∞ –æ—Ç–∑—ã–≤—ã —Å —Ç–µ–∫—Å—Ç–æ–º (rating –Ω–µ null)
    RATING_LOGIC: 'rating || productValuation || 0', // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: —Ä–µ–π—Ç–∏–Ω–≥ –æ—Ç–∑—ã–≤–∞, –∑–∞—Ç–µ–º —Ç–æ–≤–∞—Ä–∞
    RESPONDABLE: '–¢–æ–ª—å–∫–æ –æ—Ç–∑—ã–≤—ã —Å —Ç–µ–∫—Å—Ç–æ–º (rating != null && text != null)'
  },
  REQUIRED_TEXT_FIELDS: ['text'], // –ü–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–∫—Å—Ç
  PRODUCT_URL_TEMPLATE: 'https://www.wildberries.ru/catalog/{productId}/detail.aspx'
};

// ============ OZON API CONFIGURATION ============
const OZON_CONFIG = {
  MARKETPLACE_NAME: 'Ozon',
  MARKETPLACE_CODE: 'OZON',
  API_BASE_URL: 'https://api-seller.ozon.ru/v1',
  ENDPOINTS: {
    GET_REVIEWS: '/review/list',
    SEND_COMMENT: '/review/comment/create'
  },
  API_LIMITS: {
    MAX_LIMIT: 100,          // –†–ï–ê–õ–¨–ù–´–ô –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç Ozon API (–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ)
    MIN_LIMIT: 20,           // –†–ï–ê–õ–¨–ù–´–ô –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç Ozon API
    DEFAULT_LIMIT: 100,      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç
    RECOMMENDED_LIMIT: 100,  // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π = –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    PAGINATION_STEP: 100     // –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã - –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∞–∫—Å–∏–º—É–º
  },
  PAGINATION: {
    ENABLED: false,          // Ozon API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç skip/offset –ø–∞–≥–∏–Ω–∞—Ü–∏—é
    ALTERNATIVE: 'timestamp_based' // –ò—Å–ø–æ–ª—å–∑—É–µ–º timestamp-based filtering
  },
  RATE_LIMITS: {
    REQUESTS_PER_MINUTE: 100,       // –ú–∞–∫—Å–∏–º—É–º –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É (–≤—ã—à–µ —á–µ–º WB)
    DELAY_BETWEEN_REQUESTS: 600,    // –ú–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (–±—ã—Å—Ç—Ä–µ–µ WB)
    BURST_LIMIT: 20,                // –ú–∞–∫—Å–∏–º—É–º –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–¥—Ä—è–¥ (–±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏)
    BURST_DELAY: 50,                // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ burst —Ä–µ–∂–∏–º–µ (–º—Å)
    RECOVERY_DELAY: 3000            // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –∏—Å—á–µ—Ä–ø–∞–Ω–∏—è burst –ª–∏–º–∏—Ç–∞ (–º—Å)
  },
  BATCH_PROCESSING: {
    ENABLED: false,                 // Ozon API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç batch –æ—Ç–ø—Ä–∞–≤–∫—É
    ALTERNATIVE: 'sequential_with_smart_throttling' // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å —É–º–Ω—ã–º throttling
  },
  WEBHOOK: {
    SUPPORTED: false,               // Ozon API webhook —Ç—Ä–µ–±—É–µ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    ALTERNATIVE: 'intelligent_polling' // –£–º–Ω—ã–π polling —Å timestamp filtering
  },
  RATING_FIELDS: {
    REVIEW_RATING: 'rating'
  },
  REVIEW_STATUSES: {
    UNPROCESSED: 'UNPROCESSED',
    PROCESSED: 'PROCESSED'
  },
  REQUIRED_TEXT_FIELDS: ['text'], // –ü–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–∫—Å—Ç
  PRODUCT_URL_TEMPLATE: 'https://www.ozon.ru/product/{sku}'
};

// ============ MENU CREATION ============
function onOpen(e) {
  const ui = SpreadsheetApp.getUi();
  const menu = ui.createMenu('ü§ñ –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã');
  menu.addItem('‚öôÔ∏è –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞', 'initialSetup');
  menu.addItem('üè™ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏', 'showStoreManagerSidebar');
  menu.addSeparator();
  menu.addItem('‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–µ–π—á–∞—Å', 'processAllStores');
  menu.addItem('‚ñ∂Ô∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã', 'sendPendingAnswers');
  menu.addSeparator();
  
  // üõ†Ô∏è –†–ï–ñ–ò–ú –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–ê - —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã –∏ –æ—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
  const devMenu = ui.createMenu('üõ†Ô∏è –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞');
  devMenu.addItem('üîß –í–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞', 'enableDevMode');
  devMenu.addItem('üîß –í—ã–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞', 'disableDevMode');
  devMenu.addSeparator();
  devMenu.addItem('üß™ –¢–µ—Å—Ç: –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –æ—Ç–∑—ã–≤ WB', 'testWbFeedbackAnswerById');
  devMenu.addItem('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –æ—Ç–∑—ã–≤ –ø–æ ID', 'manuallyDeleteReviewById');
  menu.addSubMenu(devMenu);
  
  const triggerSubMenu = ui.createMenu('üîÑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º');
  triggerSubMenu.addItem('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ (5 –º–∏–Ω)', 'createTrigger5Min');
  triggerSubMenu.addItem('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ (30 –º–∏–Ω)', 'createTrigger30Min');
  triggerSubMenu.addSeparator();
  triggerSubMenu.addItem('üéØ –°–æ–∑–¥–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–æ–≤', 'createPerStoreTriggers');
  triggerSubMenu.addItem('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã', 'deletePerStoreTriggers');
  triggerSubMenu.addItem('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ (1 —á–∞—Å)', 'createTrigger1Hour');
  triggerSubMenu.addSeparator();
  triggerSubMenu.addItem('‚ùå –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞', 'deleteAllTriggers');
  menu.addSubMenu(triggerSubMenu);
  
  menu.addSeparator();
  menu.addItem('üêû –ü–æ–∫–∞–∑–∞—Ç—å/–°–∫—Ä—ã—Ç—å –ª–æ–≥ –æ—Ç–ª–∞–¥–∫–∏', 'toggleLogSheet');
  menu.addToUi();
  updateDevModeStatus();
}

// ============ DEV MODE ============
function setDevMode(enabled) {
  PropertiesService.getUserProperties().setProperty(CONFIG.DEV_MODE_KEY, enabled);
  const status = enabled ? '–í–ö–õ–Æ–ß–ï–ù' : '–í–´–ö–õ–Æ–ß–ï–ù';
  log(`–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ ${status}.`);
  SpreadsheetApp.getUi().alert(`–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ ${status}.`);
  updateDevModeStatus();
}

function enableDevMode() { setDevMode('true'); }
function disableDevMode() { setDevMode('false'); }

function isDevMode() {
  return PropertiesService.getUserProperties().getProperty(CONFIG.DEV_MODE_KEY) === 'true';
}

function updateDevModeStatus() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(CONFIG.SHEETS.TEMPLATES);
  if (sheet) {
    sheet.getRange("D1").setValue(isDevMode() ? "–†–ï–ñ–ò–ú –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–ê: –í–ö–õ" : "–†–ï–ñ–ò–ú –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–ê: –í–´–ö–õ")
         .setFontWeight("bold")
         .setFontColor(isDevMode() ? "#EA4335" : "#34A853");
  }
}

// ============ –û–ë–û–ì–ê–©–ï–ù–ò–ï –ù–ê–ó–í–ê–ù–ò–Ø–ú–ò –¢–û–í–ê–†–û–í ============

/**
 * WB: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ nmId —á–µ—Ä–µ–∑ Content API
 * @param {Array} nmIds - –ú–∞—Å—Å–∏–≤ nmId —Ç–æ–≤–∞—Ä–æ–≤
 * @param {string} apiKey - WB API –∫–ª—é—á
 * @returns {Object} –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ {nmId: –Ω–∞–∑–≤–∞–Ω–∏–µ}
 */
function getWbProductNames(nmIds, apiKey) {
    if (!nmIds || nmIds.length === 0) return {};
    
    // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    const uniqueNmIds = [...new Set(nmIds)];
    log(`[WB Products] üè∑Ô∏è –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è ${uniqueNmIds.length} —Ç–æ–≤–∞—Ä–æ–≤...`);
    
    const url = 'https://suppliers-api.wildberries.ru/content/v2/cards/cursor/list';
    const payload = {
        filter: {
            nmID: uniqueNmIds
        },
        limit: Math.min(uniqueNmIds.length, 100) // WB –ª–∏–º–∏—Ç
    };
    
    try {
        const response = UrlFetchApp.fetch(url, {
            method: 'POST',
            headers: { 
                'Authorization': apiKey,
                'Content-Type': 'application/json'
            },
            payload: JSON.stringify(payload),
            muteHttpExceptions: true
        });
        
        const responseCode = response.getResponseCode();
        const responseBody = response.getContentText();
        
        if (responseCode !== 200) {
            log(`[WB Products] ‚ùå –û–®–ò–ë–ö–ê –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π: ${responseCode}. ${responseBody}`);
            // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —á–∞—Å—Ç—ã—Ö –æ—à–∏–±–æ–∫ API
            if (responseCode === 401) {
                log(`[WB Products] ‚ùå –ö–†–ò–¢–ò–ß–ù–û: –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á –¥–ª—è Content API`);
            } else if (responseCode === 403) {
                log(`[WB Products] ‚ùå –ö–†–ò–¢–ò–ß–ù–û: API –∫–ª—é—á –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ Content API`);
            } else if (responseCode === 404) {
                log(`[WB Products] ‚ùå –ö–†–ò–¢–ò–ß–ù–û: Content API endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏–ª—Å—è URL.`);
            } else if (responseCode === 429) {
                log(`[WB Products] ‚ùå –ü–†–ï–í–´–®–ï–ù –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ Content API. –ù—É–∂–Ω–∞ –ø–∞—É–∑–∞.`);
            }
            return {};
        }
        
        const json = JSON.parse(responseBody);
        const cards = json.data?.cards || [];
        
        const productNames = {};
        cards.forEach(card => {
            if (card.nmID && card.name) {
                productNames[card.nmID] = card.name;
            }
        });
        
        log(`[WB Products] ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${Object.keys(productNames).length} –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤`);
        return productNames;
        
    } catch (e) {
        log(`[WB Products] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${e.message}`);
        // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ DNS –æ—à–∏–±–æ–∫
        if (e.message.includes('DNS') || e.message.includes('resolve')) {
            log(`[WB Products] ‚ùå DNS –û–®–ò–ë–ö–ê: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å suppliers-api.wildberries.ru. –í–æ–∑–º–æ–∂–Ω–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é.`);
        }
        return {};
    }
}

/**
 * Ozon: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ offer_id —á–µ—Ä–µ–∑ Product API
 * @param {Array} offerIds - –ú–∞—Å—Å–∏–≤ offer_id —Ç–æ–≤–∞—Ä–æ–≤
 * @param {string} clientId - Ozon Client ID
 * @param {string} apiKey - Ozon API –∫–ª—é—á
 * @returns {Object} –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ {offer_id: –Ω–∞–∑–≤–∞–Ω–∏–µ}
 */
function getOzonProductNames(offerIds, clientId, apiKey) {
    if (!offerIds || offerIds.length === 0) return {};
    
    // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ offer_id
    const uniqueOfferIds = [...new Set(offerIds)].filter(id => {
        // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–æ–≤—ã–µ offer_id –∏ –∏—Å–∫–ª—é—á–∞–µ–º —á–∏—Å–ª–æ–≤—ã–µ sku
        if (!id || typeof id !== 'string') return false;
        // –ò—Å–∫–ª—é—á–∞–µ–º —á–∏—Å—Ç–æ —á–∏—Å–ª–æ–≤—ã–µ ID (—ç—Ç–æ sku, –Ω–µ offer_id)
        if (/^\d+$/.test(id)) return false;
        return true;
    });
    
    log(`[Ozon Products] üè∑Ô∏è –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è ${uniqueOfferIds.length} —Ç–æ–≤–∞—Ä–æ–≤ (–æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ ${offerIds.length - uniqueOfferIds.length} –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö ID)...`);
    
    if (uniqueOfferIds.length === 0) {
        log(`[Ozon Products] ‚ö†Ô∏è –ù–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö offer_id –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞–∑–≤–∞–Ω–∏–π`);
        return {};
    }
    
    const url = 'https://api-seller.ozon.ru/v3/product/list';
    const payload = {
        filter: {
            offer_id: uniqueOfferIds
        },
        last_id: "",
        limit: Math.min(uniqueOfferIds.length, 100) // Ozon –ª–∏–º–∏—Ç
    };
    
    try {
        const response = UrlFetchApp.fetch(url, {
            method: 'POST',
            headers: { 
                'Client-Id': clientId, 
                'Api-Key': apiKey,
                'Content-Type': 'application/json'
            },
            payload: JSON.stringify(payload),
            muteHttpExceptions: true
        });
        
        const responseCode = response.getResponseCode();
        const responseBody = response.getContentText();
        
        if (responseCode !== 200) {
            log(`[Ozon Products] ‚ùå –û–®–ò–ë–ö–ê –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π: ${responseCode}. ${responseBody}`);
            return {};
        }
        
        const json = JSON.parse(responseBody);
        const items = json.result?.items || [];
        
        const productNames = {};
        items.forEach(item => {
            if (item.offer_id && item.name) {
                productNames[item.offer_id] = item.name;
            }
        });
        
        log(`[Ozon Products] ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${Object.keys(productNames).length} –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤`);
        return productNames;
        
    } catch (e) {
        log(`[Ozon Products] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${e.message}`);
        return {};
    }
}

/**
 * –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: Ozon –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ /v3/product/info/list
 * –≠—Ç–æ—Ç endpoint –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–æ–∏—Å–∫ –ø–æ sku, product_id, offer_id
 * @param {Array} identifiers - –ú–∞—Å—Å–∏–≤ {type: 'sku'|'product_id'|'offer_id', value: '...'}
 * @param {string} clientId - Ozon Client ID
 * @param {string} apiKey - Ozon API –∫–ª—é—á
 * @returns {Object} –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ {identifier: {name, price, images, etc}}
 */
function getOzonProductInfoList(identifiers, clientId, apiKey) {
    if (!identifiers || identifiers.length === 0) return {};
    
    log(`[Ozon Product Info] üè∑Ô∏è –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è ${identifiers.length} —Ç–æ–≤–∞—Ä–æ–≤...`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–µ—à –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º
    const cache = CacheService.getScriptCache();
    const uncachedIdentifiers = [];
    const cachedResults = {};
    
    identifiers.forEach(id => {
        const cacheKey = `ozon_product_${id.type}_${id.value}`;
        const cached = cache.get(cacheKey);
        if (cached) {
            try {
                cachedResults[id.value] = JSON.parse(cached);
            } catch (e) {
                log(`[Ozon Product Info] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫–µ—à–∞ –¥–ª—è ${id.value}: ${e.message}`);
                uncachedIdentifiers.push(id);
            }
        } else {
            uncachedIdentifiers.push(id);
        }
    });
    
    if (Object.keys(cachedResults).length > 0) {
        log(`[Ozon Product Info] üíæ –ü–æ–ª—É—á–µ–Ω–æ –∏–∑ –∫–µ—à–∞: ${Object.keys(cachedResults).length} —Ç–æ–≤–∞—Ä–æ–≤`);
    }
    
    if (uncachedIdentifiers.length === 0) {
        log(`[Ozon Product Info] ‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ –∫–µ—à–∞`);
        return cachedResults;
    }
    
    log(`[Ozon Product Info] üåê –ó–∞–ø—Ä–∞—à–∏–≤–∞—é —Å —Å–µ—Ä–≤–µ—Ä–∞: ${uncachedIdentifiers.length} —Ç–æ–≤–∞—Ä–æ–≤`);
    
    // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –±–∞—Ç—á–∏ –ø–æ 100 —Ç–æ–≤–∞—Ä–æ–≤ (–ª–∏–º–∏—Ç API)
    const batches = [];
    for (let i = 0; i < uncachedIdentifiers.length; i += 100) {
        batches.push(uncachedIdentifiers.slice(i, i + 100));
    }
    
    log(`[Ozon Product Info] üì¶ –†–∞–∑–±–∏—Ç–æ –Ω–∞ ${batches.length} –±–∞—Ç—á–µ–π`);
    
    const allResults = { ...cachedResults };
    
    batches.forEach((batch, batchIndex) => {
        log(`[Ozon Product Info] üì§ –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–∞—Ç—á–∞ ${batchIndex + 1}/${batches.length} (${batch.length} —Ç–æ–≤–∞—Ä–æ–≤)...`);
        
        // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø—É –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞
        const skus = batch.filter(id => id.type === 'sku').map(id => parseInt(id.value));
        const productIds = batch.filter(id => id.type === 'product_id').map(id => parseInt(id.value));
        const offerIds = batch.filter(id => id.type === 'offer_id').map(id => id.value);
        
        const payload = {};
        if (skus.length > 0) payload.sku = skus;
        if (productIds.length > 0) payload.product_id = productIds;
        if (offerIds.length > 0) payload.offer_id = offerIds;
        
        if (Object.keys(payload).length === 0) {
            log(`[Ozon Product Info] ‚ö†Ô∏è –ü—É—Å—Ç–æ–π payload –¥–ª—è –±–∞—Ç—á–∞ ${batchIndex + 1}, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
            return;
        }
        
        const url = 'https://api-seller.ozon.ru/v3/product/info/list';
        
        try {
            const response = UrlFetchApp.fetch(url, {
                method: 'POST',
                headers: { 
                    'Client-Id': clientId, 
                    'Api-Key': apiKey,
                    'Content-Type': 'application/json'
                },
                payload: JSON.stringify(payload),
                muteHttpExceptions: true
            });
            
            const responseCode = response.getResponseCode();
            const responseBody = response.getContentText();
            
            if (responseCode !== 200) {
                log(`[Ozon Product Info] ‚ùå –û–®–ò–ë–ö–ê –±–∞—Ç—á–∞ ${batchIndex + 1}: ${responseCode}. ${responseBody.substring(0, 200)}`);
                return;
            }
            
            const json = JSON.parse(responseBody);
            const items = json.result?.items || [];
            
            log(`[Ozon Product Info] ‚úÖ –ë–∞—Ç—á ${batchIndex + 1}: –ø–æ–ª—É—á–µ–Ω–æ ${items.length} —Ç–æ–≤–∞—Ä–æ–≤`);
            
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –∫–µ—à–∏—Ä—É–µ–º
            items.forEach(item => {
                const productInfo = {
                    name: item.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
                    sku: item.sku,
                    product_id: item.id,
                    offer_id: item.offer_id,
                    price: item.price || null,
                    old_price: item.old_price || null,
                    currency_code: item.currency_code || 'RUB',
                    images: item.images || [],
                    description: item.description || ''
                };
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ –≤—Å–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞–º
                if (item.sku) {
                    allResults[item.sku] = productInfo;
                    const cacheKey = `ozon_product_sku_${item.sku}`;
                    cache.put(cacheKey, JSON.stringify(productInfo), 86400); // 24 —á–∞—Å–∞
                }
                if (item.id) {
                    allResults[item.id] = productInfo;
                    const cacheKey = `ozon_product_product_id_${item.id}`;
                    cache.put(cacheKey, JSON.stringify(productInfo), 86400);
                }
                if (item.offer_id) {
                    allResults[item.offer_id] = productInfo;
                    const cacheKey = `ozon_product_offer_id_${item.offer_id}`;
                    cache.put(cacheKey, JSON.stringify(productInfo), 86400);
                }
            });
            
            // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –±–∞—Ç—á–∞–º–∏ –¥–ª—è —Å–æ–±–ª—é–¥–µ–Ω–∏—è rate limits
            if (batchIndex < batches.length - 1) {
                Utilities.sleep(OZON_CONFIG.RATE_LIMITS.DELAY_BETWEEN_REQUESTS);
            }
            
        } catch (e) {
            log(`[Ozon Product Info] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –±–∞—Ç—á–∞ ${batchIndex + 1}: ${e.message}`);
        }
    });
    
    log(`[Ozon Product Info] üéØ –ò–¢–û–ì–û: –ø–æ–ª—É—á–µ–Ω–æ ${Object.keys(allResults).length} —Ç–æ–≤–∞—Ä–æ–≤ (–∏–∑ –Ω–∏—Ö ${Object.keys(cachedResults).length} –∏–∑ –∫–µ—à–∞)`);
    return allResults;
}

// ============ –î–ê–¢–ê –£–¢–ò–õ–ò–¢–´ ============

/**
 * –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–∞—Ç—ã –≤ Unix timestamp –¥–ª—è WB API
 * @param {string} dateString - –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "YYYY-MM-DD"
 * @returns {number} Unix timestamp
 */
function getUnixTimestamp(dateString) {
    return Math.floor(new Date(dateString).getTime() / 1000);
}

/**
 * –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–∞—Ç—ã –≤ RFC3339 —Ñ–æ—Ä–º–∞—Ç –¥–ª—è Ozon API
 * @param {string} dateString - –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "YYYY-MM-DD" 
 * @returns {string} RFC3339 —Ñ–æ—Ä–º–∞—Ç
 */
function formatDateForOzon(dateString) {
    return new Date(dateString + 'T00:00:00.000Z').toISOString();
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç (–ø–æ—Å–ª–µ–¥–Ω–∏–µ N –¥–Ω–µ–π)
 * @param {number} days - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –Ω–∞–∑–∞–¥
 * @returns {Object} {dateFrom, dateTo}
 */
function getDateRange(days = 30) {
    const today = new Date();
    const dateFrom = new Date(today.getTime() - (days * 24 * 60 * 60 * 1000));
    
    return {
        dateFrom: dateFrom.toISOString().split('T')[0], // YYYY-MM-DD
        dateTo: today.toISOString().split('T')[0]       // YYYY-MM-DD
    };
}

// ============ WB PAGINATION FUNCTIONS ============

/**
 * –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü–æ–ª—É—á–µ–Ω–∏–µ –í–°–ï–• –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –æ—Ç–∑—ã–≤–æ–≤ WB —Å –ø–æ–ª–Ω–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π "–¥–æ –ø–æ–±–µ–¥–Ω–æ–≥–æ"
 * @param {string} apiKey - WB API –∫–ª—é—á
 * @param {boolean} includeAnswered - –í–∫–ª—é—á–∞—Ç—å –ª–∏ –æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
 * @param {Object} store - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–∞—Ç–µ
 * @returns {Array} –ú–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –æ—Ç–∑—ã–≤–æ–≤
 */
function getWbFeedbacksWithFullPagination(apiKey, includeAnswered = false, store = null) {
    log(`[WB] üöÄ –ó–∞–ø—É—Å–∫ –ü–û–õ–ù–û–ô –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ "–¥–æ –ø–æ–±–µ–¥–Ω–æ–≥–æ" (includeAnswered=${includeAnswered})...`);
    
    try {
        if (includeAnswered) {
            return getWbAllFeedbacksWithPagination(apiKey, store);
        } else {
            return getWbUnansweredFeedbacksWithPagination(apiKey, store);
        }
    } catch (e) {
        log(`[WB] –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏: ${e.stack}`);
        return [];
    }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤ (–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ + –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ) —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
 */
function getWbAllFeedbacksWithPagination(apiKey, store = null) {
    log(`[WB] –ü–æ–ª—É—á–µ–Ω–∏–µ –í–°–ï–• –æ—Ç–∑—ã–≤–æ–≤ (–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ + –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ) —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π...`);
    
    const answeredFeedbacks = getWbFeedbacksByType(apiKey, true, store);   // isAnswered=true
    const unansweredFeedbacks = getWbFeedbacksByType(apiKey, false, store); // isAnswered=false
    
    const allFeedbacks = [...answeredFeedbacks, ...unansweredFeedbacks];
    
    // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ ID
    const uniqueFeedbacks = [];
    const seenIds = new Set();
    allFeedbacks.forEach(fb => {
        if (!seenIds.has(fb.id)) {
            seenIds.add(fb.id);
            uniqueFeedbacks.push(fb);
        }
    });
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ –ø–µ—Ä–≤—ã–º–∏)
    uniqueFeedbacks.sort((a, b) => new Date(b.createdDate) - new Date(a.createdDate));
    
    log(`[WB] ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${uniqueFeedbacks.length} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ (–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ: ${answeredFeedbacks.length}, –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ: ${unansweredFeedbacks.length})`);
    return uniqueFeedbacks;
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
 */
function getWbUnansweredFeedbacksWithPagination(apiKey, store = null) {
    log(`[WB] –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ù–ï–û–¢–í–ï–ß–ï–ù–ù–´–• –æ—Ç–∑—ã–≤–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π...`);
    return getWbFeedbacksByType(apiKey, false, store);
}

/**
 * –Ø–î–†–û –ü–ê–ì–ò–ù–ê–¶–ò–ò: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ —Å –ø–æ–ª–Ω—ã–º –ø–µ—Ä–µ–±–æ—Ä–æ–º —Å—Ç—Ä–∞–Ω–∏—Ü
 * @param {string} apiKey - API –∫–ª—é—á
 * @param {boolean} isAnswered - true –¥–ª—è –æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö, false –¥–ª—è –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö
 * @param {Object} store - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–∞—Ç–µ
 * @returns {Array} –í—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –æ—Ç–∑—ã–≤—ã
 */
function getWbFeedbacksByType(apiKey, isAnswered, store = null) {
    const type = isAnswered ? '–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ' : '–Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ';
    log(`[WB] üìñ –ù–∞—á–∏–Ω–∞—é –ø–æ–ª–Ω—É—é –ø–∞–≥–∏–Ω–∞—Ü–∏—é –¥–ª—è ${type} –æ—Ç–∑—ã–≤–æ–≤...`);
    
    let allFeedbacks = [];
    let currentSkip = 0;
    let pageNumber = 1;
    const take = WB_CONFIG.API_LIMITS.PAGINATION_STEP; // 100 –æ—Ç–∑—ã–≤–æ–≤ –∑–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const maxPages = 100; // –ó–∞—â–∏—Ç–∞ –æ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ (10,000 –æ—Ç–∑—ã–≤–æ–≤ –º–∞–∫—Å–∏–º—É–º)
    let consecutiveEmptyPages = 0; // –°—á–µ—Ç—á–∏–∫ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ–¥—Ä—è–¥
    
    while (pageNumber <= maxPages) {
        log(`[WB] üìÑ –ó–∞–ø—Ä–∞—à–∏–≤–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É ${pageNumber} (skip=${currentSkip}, take=${take})...`);
        
        // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∞—Ç—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ –º–∞–≥–∞–∑–∏–Ω–∞
        let url = `https://feedbacks-api.wildberries.ru/api/v1/feedbacks?isAnswered=${isAnswered}&take=${take}&skip=${currentSkip}&order=dateDesc`;
        
        // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: WB Feedbacks API –ù–ï –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç dateFrom/dateTo –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∞—Ç–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –Ω–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω–µ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        if (store && store.settings && store.settings.startDate) {
            log(`[WB] üóìÔ∏è –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –¥–∞—Ç–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: ${store.settings.startDate} (—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö)`);
        } else {
            log(`[WB] üóìÔ∏è –§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω - –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ—Ç–∑—ã–≤—ã`);
        }
        
        try {
            const response = UrlFetchApp.fetch(url, { 
                method: 'GET', 
                headers: { 'Authorization': apiKey }, 
                muteHttpExceptions: true 
            });
            
            const responseCode = response.getResponseCode();
            const responseBody = response.getContentText();
            
            // –†–ê–°–®–ò–†–ï–ù–ù–´–ï –õ–û–ì–ò API –û–¢–í–ï–¢–û–í
            log(`[WB] üåê API –æ—Ç–≤–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber}: –∫–æ–¥ ${responseCode}, —Ä–∞–∑–º–µ—Ä —Ç–µ–ª–∞ ${responseBody.length} —Å–∏–º–≤–æ–ª–æ–≤`);
            
            if (responseCode !== 200) {
                log(`[WB] ‚ùå –û–®–ò–ë–ö–ê –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${pageNumber}: –ö–æ–¥ ${responseCode}. –¢–µ–ª–æ: ${responseBody.substring(0, 500)}`);
                break;
            }
            
            const json = JSON.parse(responseBody);
            if (json.error) {
                log(`[WB] ‚ùå API –û–®–ò–ë–ö–ê –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${pageNumber}: ${json.errorText}. –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: ${JSON.stringify(json)}`);
                break;
            }
            
            const pageFeedbacks = json.data?.feedbacks || [];
            const totalInResponse = json.data?.countUnanswered || json.data?.countAll || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
            log(`[WB] üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber}: –ø–æ–ª—É—á–µ–Ω–æ ${pageFeedbacks.length} –æ—Ç–∑—ã–≤–æ–≤ (–≤—Å–µ–≥–æ –≤ —Å–∏—Å—Ç–µ–º–µ: ${totalInResponse})`);
            
            // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ù–ï –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ 0 –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ —Ä–∞–Ω–Ω–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö!
            // WB API –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –ø—É—Å—Ç—ã–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑-–∑–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ isAnswered
            if (pageFeedbacks.length === 0) {
                consecutiveEmptyPages++;
                log(`[WB] ‚ö†Ô∏è –ü—É—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber} (${consecutiveEmptyPages} –ø–æ–¥—Ä—è–¥ –∏–∑ –º–∞–∫—Å–∏–º—É–º 5)`);
                
                // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º 5 –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ–¥—Ä—è–¥ –ø–µ—Ä–µ–¥ –æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π (–≤–∫–ª—é—á–∞—è –ø–µ—Ä–≤—É—é!)
                if (consecutiveEmptyPages >= 5) {
                    log(`[WB] ‚úÖ –ü–∞–≥–∏–Ω–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: ${consecutiveEmptyPages} –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ–¥—Ä—è–¥ - –∫–æ–Ω–µ—Ü –¥–∞–Ω–Ω—ã—Ö`);
                    break;
                }
                
                log(`[WB] ‚è≠Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–∏—Å–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${pageNumber + 1} (–ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ ${consecutiveEmptyPages} –ø—É—Å—Ç—ã—Ö)...`);
                currentSkip += take;
                pageNumber++;
                Utilities.sleep(200);
                continue; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            } else {
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö
                if (consecutiveEmptyPages > 0) {
                    log(`[WB] üéØ –ù–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${pageNumber}! –°–±—Ä–∞—Å—ã–≤–∞—é —Å—á–µ—Ç—á–∏–∫ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü (–±—ã–ª–æ ${consecutiveEmptyPages})`);
                }
                consecutiveEmptyPages = 0;
            }
            
            // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –æ—Ç–∑—ã–≤—ã
            const processedFeedbacks = [];
            let emptyReviewsCount = 0;
            
            pageFeedbacks.forEach(fb => {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ –î–û –æ–±—Ä–∞–±–æ—Ç–∫–∏
                const hasText = fb.text && fb.text.trim() && fb.text.trim() !== '(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)';
                
                if (!hasText) {
                    emptyReviewsCount++;
                    if (isDevMode()) {
                        log(`[WB DEBUG] ‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω –ø—É—Å—Ç–æ–π –æ—Ç–∑—ã–≤ ID ${fb.id}: —Ç–µ–∫—Å—Ç="${fb.text || '(–Ω–µ—Ç)'}"`);
                    }
                    return;
                }
                
                // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–∑—ã–≤ —Å —Ç–µ–∫—Å—Ç–æ–º
                const actualRating = fb.rating || fb.productValuation || 0;
                
                if (isDevMode()) {
                    const dataType = fb.rating ? '–û–¢–ó–´–í+–û–¶–ï–ù–ö–ê' : '–¢–û–õ–¨–ö–û_–û–¶–ï–ù–ö–ê_–¢–û–í–ê–†–ê';
                    log(`[WB DEBUG] ‚úÖ ID ${fb.id}: ${dataType}, rating=${fb.rating}, –∏—Å–ø–æ–ª—å–∑—É–µ–º=${actualRating}`);
                }
                
                processedFeedbacks.push({
                    id: fb.id,
                    createdDate: fb.createdDate,
                    rating: actualRating,
                    text: fb.text,
                    user: 'N/A',
                    product: {
                        id: fb.productDetails.nmId,
                        name: fb.productDetails.productName,
                        url: `https://www.wildberries.ru/catalog/${fb.productDetails.nmId}/detail.aspx`
                    }
                });
            });
            
            log(`[WB] üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber}: –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${processedFeedbacks.length} –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö, –ø—Ä–æ–ø—É—â–µ–Ω–æ ${emptyReviewsCount} –ø—É—Å—Ç—ã—Ö`);
            
            allFeedbacks = allFeedbacks.concat(processedFeedbacks);
            
            // –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –º–µ–Ω—å—à–µ –æ—Ç–∑—ã–≤–æ–≤ —á–µ–º –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ - —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
            if (pageFeedbacks.length < take) {
                log(`[WB] ‚úÖ –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber}: –ø–æ–ª—É—á–µ–Ω–æ ${pageFeedbacks.length} < ${take}`);
                break;
            }
            
            currentSkip += take;
            pageNumber++;
            
            // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ï RPS –õ–ò–ú–ò–¢–´: WB = 400–º—Å –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (3 RPS)
            Utilities.sleep(400);
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –∫–∞–∂–¥—ã–µ 10 –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
            if (pageNumber % 10 === 0) {
                log(`[WB] üí§ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –ø–æ—Å–ª–µ ${pageNumber} —Å—Ç—Ä–∞–Ω–∏—Ü...`);
                Utilities.sleep(2000);
            }
            
        } catch (e) {
            log(`[WB] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${pageNumber}: ${e.message}`);
            break;
        }
    }
    
    if (pageNumber > maxPages) {
        log(`[WB] ‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –î–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º —Å—Ç—Ä–∞–Ω–∏—Ü (${maxPages})`);
    }
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ –ø–µ—Ä–≤—ã–º–∏)
    allFeedbacks.sort((a, b) => new Date(b.createdDate) - new Date(a.createdDate));
    
    // ‚úÖ –û–ë–û–ì–ê–©–ê–ï–ú –ù–ê–ó–í–ê–ù–ò–Ø–ú–ò –¢–û–í–ê–†–û–í –∏–∑ Content API
    if (allFeedbacks.length > 0 && store && store.credentials && store.credentials.apiKey) {
        const nmIds = allFeedbacks.map(fb => fb.product.id).filter(id => id);
        const productNames = getWbProductNames(nmIds, store.credentials.apiKey);
        
        if (Object.keys(productNames).length > 0) {
            allFeedbacks.forEach(fb => {
                if (productNames[fb.product.id]) {
                    fb.product.name = productNames[fb.product.id];
                }
            });
            log(`[WB] üè∑Ô∏è –ù–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è ${Object.keys(productNames).length} –æ—Ç–∑—ã–≤–æ–≤`);
        }
    }
    
    log(`[WB] üéØ –ò–¢–û–ì–û –¥–ª—è ${type}: –ø–æ–ª—É—á–µ–Ω–æ ${allFeedbacks.length} –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –æ—Ç–∑—ã–≤–æ–≤ –∑–∞ ${pageNumber - 1} —Å—Ç—Ä–∞–Ω–∏—Ü`);
    return allFeedbacks;
}

// ============ HELPER FUNCTIONS FOR API TESTING ============
function testWbContentApiAccess(apiKey) {
  try {
    const url = 'https://suppliers-api.wildberries.ru/content/v2/cards/cursor/list';
    const payload = { limit: 1 }; // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç-–∑–∞–ø—Ä–æ—Å
    
    const response = UrlFetchApp.fetch(url, {
      method: 'POST',
      headers: { 
        'Authorization': apiKey,
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify(payload),
      muteHttpExceptions: true
    });
    
    const code = response.getResponseCode();
    log(`[WB Content API Test] –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${code}`);
    
    return code === 200;
  } catch (e) {
    log(`[WB Content API Test] –û—à–∏–±–∫–∞: ${e.message}`);
    return false;
  }
}

function testOzonProductApiAccess(clientId, apiKey) {
  try {
    const url = 'https://api-seller.ozon.ru/v3/product/list';
    const payload = { limit: 1, last_id: "", filter: {} }; // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç-–∑–∞–ø—Ä–æ—Å
    
    const response = UrlFetchApp.fetch(url, {
      method: 'POST',
      headers: { 
        'Client-Id': clientId,
        'Api-Key': apiKey,
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify(payload),
      muteHttpExceptions: true
    });
    
    const code = response.getResponseCode();
    log(`[Ozon Product API Test] –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${code}`);
    
    return code === 200;
  } catch (e) {
    log(`[Ozon Product API Test] –û—à–∏–±–∫–∞: ${e.message}`);
    return false;
  }
}

// ============ CONNECTION TESTER ============
function testStoreConnection(credentials, marketplace) {
  log(`[–¢–µ—Å—Ç] –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è ${marketplace}.`);
  if (!marketplace) {
    return { success: false, message: '–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å.' };
  }
  try {
    if (marketplace === 'Wildberries') {
      if (!credentials.apiKey) return { success: false, message: 'API –∫–ª—é—á –Ω–µ —É–∫–∞–∑–∞–Ω.' };
      
      // –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –∫–ª—é—á–∞
      if (!credentials.apiKey.trim() || credentials.apiKey.length < 10) {
        return { success: false, message: 'API –∫–ª—é—á —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∏–ª–∏ –ø—É—Å—Ç–æ–π.' };
      }
      
      const url = 'https://feedbacks-api.wildberries.ru/api/v1/feedbacks?isAnswered=false&take=1&skip=0';
      const response = UrlFetchApp.fetch(url, { method: 'GET', headers: { 'Authorization': credentials.apiKey }, muteHttpExceptions: true });
      const code = response.getResponseCode();
      const responseBody = response.getContentText();
      
      log(`[–¢–µ—Å—Ç WB] –û—Ç–≤–µ—Ç: ${code}. –¢–µ–ª–æ: ${responseBody.substring(0, 200)}...`);
      
      if (code === 200) {
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º Content API –¥–æ—Å—Ç—É–ø
        const contentTestResult = testWbContentApiAccess(credentials.apiKey);
        const mainMessage = '–£—Å–ø–µ—à–Ω–æ! –ö–ª—é—á –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤—ã–º –æ—Ç–∑—ã–≤–∞–º.';
        if (contentTestResult) {
          return { success: true, message: mainMessage + ' Content API —Ç–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–µ–Ω.' };
        } else {
          return { success: true, message: mainMessage + ' ‚ö†Ô∏è Content API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –±—É–¥—É—Ç "–ù–µ —É–∫–∞–∑–∞–Ω–æ".' };
        }
      }
      if (code === 401) return { success: false, message: '–û—à–∏–±–∫–∞ 401: –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á.' };
      if (code === 403) return { success: false, message: '–û—à–∏–±–∫–∞ 403: API –∫–ª—é—á –Ω–µ –∏–º–µ–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π.' };
      if (code === 429) return { success: false, message: '–û—à–∏–±–∫–∞ 429: –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' };
      return { success: false, message: `–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${code}. ${responseBody.substring(0, 100)}...` };
    } else if (marketplace === 'Ozon') {
      if (!credentials.clientId || !credentials.apiKey) return { success: false, message: 'Client ID –∏ API Key –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–∫–∞–∑–∞–Ω—ã.' };
      
      // –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –∫–ª—é—á–µ–π
      if (!credentials.clientId.trim() || credentials.clientId.length < 5) {
        return { success: false, message: 'Client ID —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∏–ª–∏ –ø—É—Å—Ç–æ–π.' };
      }
      if (!credentials.apiKey.trim() || credentials.apiKey.length < 10) {
        return { success: false, message: 'API Key —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∏–ª–∏ –ø—É—Å—Ç–æ–π.' };
      }
      
      const url = 'https://api-seller.ozon.ru/v1/review/list';
      const payload = { limit: 20 };
      const response = UrlFetchApp.fetch(url, {
        method: 'POST',
        headers: { 'Client-Id': credentials.clientId, 'Api-Key': credentials.apiKey },
        contentType: 'application/json',
        payload: JSON.stringify(payload),
        muteHttpExceptions: true
      });
      const code = response.getResponseCode();
      const responseBody = response.getContentText();
      log(`[–¢–µ—Å—Ç Ozon] –û—Ç–≤–µ—Ç: ${code}. –¢–µ–ª–æ: ${responseBody.substring(0, 300)}...`);
      
      if (code === 200) {
        try {
          const json = JSON.parse(responseBody);
          // –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞ - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
          if (json.reviews !== undefined || (json.result && json.result.reviews) || (json.data && json.data.reviews)) {
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º Product API –¥–æ—Å—Ç—É–ø
            const productTestResult = testOzonProductApiAccess(credentials.clientId, credentials.apiKey);
            const mainMessage = '–£—Å–ø–µ—à–Ω–æ! –ö–ª—é—á–∏ –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø –∫ –æ—Ç–∑—ã–≤–∞–º.';
            if (productTestResult) {
              return { success: true, message: mainMessage + ' Product API —Ç–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–µ–Ω.' };
            } else {
              return { success: true, message: mainMessage + ' ‚ö†Ô∏è Product API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –±—É–¥—É—Ç "–ù–µ —É–∫–∞–∑–∞–Ω–æ".' };
            }
          } else {
            return { success: false, message: 'API –∏–∑–º–µ–Ω–∏–ª—Å—è: –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞. –ü–æ–ª—É—á–µ–Ω—ã –∫–ª—é—á–∏: ' + Object.keys(json).join(', ') };
          }
        } catch (e) {
          return { success: false, message: '–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –æ—Ç–≤–µ—Ç–∞: ' + e.message };
        }
      }
      if (code === 401) return { success: false, message: '–û—à–∏–±–∫–∞ 401: –ù–µ–≤–µ—Ä–Ω—ã–π Api-Key –∏–ª–∏ Client-Id.' };
      if (code === 403) {
        try {
          const json = JSON.parse(responseBody);
          return { success: false, message: `–û—à–∏–±–∫–∞ 403: ${json.message || '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ API –∫–ª—é—á–∞.'}` };
        } catch (e) {
          return { success: false, message: '–û—à–∏–±–∫–∞ 403: –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Client-Id –∏ API Key.' };
        }
      }
      if (code === 404) return { success: false, message: '–û—à–∏–±–∫–∞ 404: –ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥—Ä–µ—Å –∑–∞–ø—Ä–æ—Å–∞. –í–æ–∑–º–æ–∂–Ω–æ, API Ozon –∏–∑–º–µ–Ω–∏–ª—Å—è.' };
      if (code === 429) return { success: false, message: '–û—à–∏–±–∫–∞ 429: –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' };
      if (code >= 500) return { success: false, message: `–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ Ozon (${code}). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.` };
      return { success: false, message: `–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${code}. ${responseBody.substring(0, 100)}...` };
    }
    return { success: false, message: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å.' };
  } catch (e) {
    log(`[–¢–µ—Å—Ç] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${e.stack}`);
    return { success: false, message: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${e.message}` };
  }
}

// ============ LOGGING & INITIAL SETUP ============
function log(message) {
  try {
    const logSheet = createOrGetLogSheet_();
    const timestamp = new Date().toLocaleString('ru-RU', { hour12: false });
    logSheet.insertRowBefore(2).getRange(2, 1, 1, 2).setValues([[timestamp, message]]);
    
    const lastRow = logSheet.getLastRow();
    if (lastRow > CONFIG.LOG_MAX_ROWS) {
      logSheet.deleteRows(CONFIG.LOG_MAX_ROWS + 1, lastRow - CONFIG.LOG_MAX_ROWS);
    }
  } catch (e) {
    console.error(`Failed to write to log sheet: ${e.stack}. Log message was: "${message}".`);
  }
}

function createOrGetLogSheet_() {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  let sheet = ss.getSheetByName(CONFIG.LOG_SHEET_NAME);
  if (!sheet) {
    sheet = ss.insertSheet(CONFIG.LOG_SHEET_NAME, ss.getNumSheets());
    sheet.getRange('A1:B1').setValues([['–í—Ä–µ–º—è', '–°–æ–æ–±—â–µ–Ω–∏–µ']])
           .setFontWeight('bold').setBackground('#f3f3f3');
    sheet.setColumnWidth(1, 150);
    sheet.setColumnWidth(2, 800);
    sheet.hideSheet();
  }
  return sheet;
}

function toggleLogSheet() {
  const sheet = createOrGetLogSheet_();
  if (sheet.isSheetHidden()) {
    sheet.showSheet();
    SpreadsheetApp.getActiveSpreadsheet().setActiveSheet(sheet);
  } else {
    sheet.hideSheet();
  }
}

function initialSetup() {
  log('–ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...');
  const templateSheet = createOrGetSheet(CONFIG.SHEETS.TEMPLATES, ['–®–∞–±–ª–æ–Ω –æ—Ç–≤–µ—Ç–∞', '–î–ª—è –æ—Ü–µ–Ω–∫–∏ (4, 5, –∏–ª–∏ 4-5)']);
  fillInitialTemplates();
  updateDevModeStatus();
  log('–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
  SpreadsheetApp.getUi().alert('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞', `–°–æ–∑–¥–∞–Ω –ª–∏—Å—Ç "${CONFIG.SHEETS.TEMPLATES}" –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.`, SpreadsheetApp.getUi().ButtonSet.OK);
}

// ============ UI FUNCTIONS ============
function showStoreManagerSidebar() {
  const html = HtmlService.createTemplateFromFile('StoreManagerSidebar').evaluate().setTitle('üè™ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏').setWidth(450);
  SpreadsheetApp.getUi().showSidebar(html);
}

function include(filename) {
  return HtmlService.createHtmlOutputFromFile(filename).getContent();
}

// ============ SORTING FUNCTION ============
/**
 * Sorts a sheet by date column (newest first)
 * @param {GoogleAppsScript.Spreadsheet.Sheet} sheet - The sheet to sort
 */
function sortSheetByDate(sheet) {
  if (sheet.getLastRow() <= 2) return; // –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ (—Ç–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –º–∞–∫—Å–∏–º—É–º –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –¥–∞–Ω–Ω—ã—Ö)
  
  const dateColumnIndex = CONFIG.HEADERS.indexOf('–î–∞—Ç–∞ –æ—Ç–∑—ã–≤–∞') + 1;
  if (dateColumnIndex === 0) {
    log('–û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω —Å—Ç–æ–ª–±–µ—Ü "–î–∞—Ç–∞ –æ—Ç–∑—ã–≤–∞" –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.');
    return;
  }
  
  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ (–∏—Å–∫–ª—é—á–∞—è –∑–∞–≥–æ–ª–æ–≤–æ–∫) –ø–æ —Å—Ç–æ–ª–±—Ü—É —Å –¥–∞—Ç–æ–π –≤ —É–±—ã–≤–∞—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ
  const range = sheet.getRange(2, 1, sheet.getLastRow() - 1, CONFIG.HEADERS.length);
  range.sort([{column: dateColumnIndex, ascending: false}]);
}

// ============ DATE FILTERING FUNCTION ============
/**
 * Filters feedbacks based on store's start date setting
 * @param {Array} feedbacks - Array of feedback objects
 * @param {Object} store - Store configuration with settings
 * @returns {Array} Filtered feedbacks
 */
function filterFeedbacksByDate(feedbacks, store) {
  if (!store.settings || !store.settings.startDate) {
    return feedbacks; // No date filter, return all feedbacks
  }
  
  const startDate = new Date(store.settings.startDate);
  if (isNaN(startDate.getTime())) {
    log(`[${store.name}] –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø–æ–∏—Å–∫–∞ –æ—Ç–∑—ã–≤–æ–≤: ${store.settings.startDate}. –§–∏–ª—å—Ç—Ä –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω.`);
    return feedbacks;
  }
  
  // Check if start date is in the future
  const today = new Date();
  today.setHours(0, 0, 0, 0); // Reset to start of day for fair comparison
  
  if (startDate > today) {
    log(`[${store.name}] –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø–æ–∏—Å–∫–∞ (${store.settings.startDate}) –≤ –±—É–¥—É—â–µ–º! –í—Å–µ –æ—Ç–∑—ã–≤—ã –±—É–¥—É—Ç –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞.`);
    // Continue with filtering but add the warning
  }
  
  const filteredFeedbacks = feedbacks.filter(feedback => {
    const feedbackDate = new Date(feedback.createdDate);
    return feedbackDate >= startDate;
  });
  
  if (filteredFeedbacks.length !== feedbacks.length) {
    log(`[${store.name}] –ü—Ä–∏–º–µ–Ω–µ–Ω —Ñ–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ: –æ—Å—Ç–∞–ª–æ—Å—å ${filteredFeedbacks.length} –∏–∑ ${feedbacks.length} –æ—Ç–∑—ã–≤–æ–≤ (–Ω–∞—á–∏–Ω–∞—è —Å ${store.settings.startDate}).`);
    
    // Additional warning if no feedbacks remain and start date is future
    if (filteredFeedbacks.length === 0 && startDate > today) {
      log(`[${store.name}] ‚ùå –í–ù–ò–ú–ê–ù–ò–ï: –î–∞—Ç–∞ —Ñ–∏–ª—å—Ç—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ –±—É–¥—É—â–µ–º! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –¥–∞—Ç—É –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –º–∞–≥–∞–∑–∏–Ω–∞.`);
    }
  }
  
  return filteredFeedbacks;
}

// ============ RATING FILTERING FUNCTION ============
/**
 * Filters feedbacks to include only 4 and 5 star reviews
 * @param {Array} feedbacks - Array of feedback objects
 * @param {Object} store - Store configuration
 * @returns {Array} Filtered feedbacks (only 4-5 stars)
 */
function filterFeedbacksByRating(feedbacks, store) {
  const originalCount = feedbacks.length;
  const targetRatings = [4, 5]; // Only 4 and 5 star reviews
  
  const filteredFeedbacks = feedbacks.filter(feedback => {
    return targetRatings.includes(feedback.rating);
  });
  
  if (filteredFeedbacks.length !== originalCount) {
    const filtered = originalCount - filteredFeedbacks.length;
    log(`[${store.name}] –ü—Ä–∏–º–µ–Ω–µ–Ω —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É (4-5 –∑–≤–µ–∑–¥): –æ—Å—Ç–∞–ª–æ—Å—å ${filteredFeedbacks.length} –∏–∑ ${originalCount} –æ—Ç–∑—ã–≤–æ–≤ (–∏—Å–∫–ª—é—á–µ–Ω–æ ${filtered} –æ—Ç–∑—ã–≤–æ–≤ —Å –Ω–∏–∑–∫–∏–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º).`);
  }
  
  return filteredFeedbacks;
}

// ============ EMPTY REVIEW FILTERING FUNCTION ============
/**
 * Filters out reviews without meaningful text content
 * @param {Array} feedbacks - Array of feedback objects
 * @param {Object} store - Store configuration
 * @returns {Array} Filtered feedbacks (only those with meaningful text)
 */
function filterFeedbacksByContent(feedbacks, store) {
  const originalCount = feedbacks.length;
  
  const filteredFeedbacks = feedbacks.filter(feedback => {
    const text = (feedback.text || '').trim();
    
    // Skip reviews with no text or very short text
    if (!text || text === '(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)' || text.length < CONFIG.MIN_REVIEW_TEXT_LENGTH) {
      if (isDevMode()) {
        log(`[${store.marketplace} DEBUG] –ü—Ä–æ–ø—É—â–µ–Ω –æ—Ç–∑—ã–≤ ID ${feedback.id}: –ø—É—Å—Ç–æ–π –∏–ª–∏ –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–µ–∫—Å—Ç ("${text}")`);
      }
      return false;
    }
    
    return true;
  });
  
  if (filteredFeedbacks.length !== originalCount) {
    const skippedCount = originalCount - filteredFeedbacks.length;
    log(`[${store.name}] –ü—Ä–∏–º–µ–Ω–µ–Ω —Ñ–∏–ª—å—Ç—Ä –ø–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é: –æ—Å—Ç–∞–ª–æ—Å—å ${filteredFeedbacks.length} –∏–∑ ${originalCount} –æ—Ç–∑—ã–≤–æ–≤ (–∏—Å–∫–ª—é—á–µ–Ω–æ ${skippedCount} –ø—É—Å—Ç—ã—Ö –æ—Ç–∑—ã–≤–æ–≤).`);
  }
  
  return filteredFeedbacks;
}

// ============ CORE PROCESSING LOGIC ============

/**
 * Main function to process new feedback for all active stores.
 */
function processAllStores() {
  const devMode = isDevMode();
  log(`--- –ó–ê–ü–£–°–ö –û–ë–†–ê–ë–û–¢–ö–ò (${devMode ? '–†–ï–ñ–ò–ú –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–ê' : '–ë–û–ï–í–û–ô –†–ï–ñ–ò–ú'}) ---`);
  const allStores = getStores();
  const activeStores = allStores.filter(store => store.isActive);
  if (activeStores.length === 0) {
    log('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏. –ó–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É.');
    return;
  }
  
  log(`–ù–∞–π–¥–µ–Ω–æ ${activeStores.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤.`);
  activeStores.forEach(store => {
    log(`--- –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –º–∞–≥–∞–∑–∏–Ω–∞: ${store.name} [${store.marketplace}] ---`);
    processSingleStore(store, devMode);
    log(`--- –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞: ${store.name} ---`);
  });
  log('--- –û–ë–†–ê–ë–û–¢–ö–ê –í–°–ï–• –ú–ê–ì–ê–ó–ò–ù–û–í –ó–ê–í–ï–†–®–ï–ù–ê ---');
}

function processSingleStore(store, devMode) {
  const sheet = createOrGetSheet(`–û—Ç–∑—ã–≤—ã (${store.name})`, CONFIG.HEADERS);
  const processedIds = getProcessedIdsFromSheet(sheet);
  const templates = getTemplates();
  if (templates.length === 0) {
      log(`[${store.name}] –û–®–ò–ë–ö–ê: –ù–µ—Ç —à–∞–±–ª–æ–Ω–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤. –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.`);
      return;
  }
  
  const includeAnswered = store.settings?.includeAnswered || false;
  log(`[${store.name}] –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ (${includeAnswered ? '–í–°–ï –æ—Ç–∑—ã–≤—ã' : '—Ç–æ–ª—å–∫–æ –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ'})...`);
  let feedbacks = (store.marketplace === 'Wildberries') 
      ? getWbFeedbacks(store.credentials.apiKey, includeAnswered, store) 
      : getOzonFeedbacks(store.credentials.clientId, store.credentials.apiKey, includeAnswered, store);
      
  if (!feedbacks || feedbacks.length === 0) { 
      log(`[${store.name}] –ù–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.`);
      return;
  }
  
  log(`[${store.name}] –ù–∞–π–¥–µ–Ω–æ –≤—Å–µ–≥–æ ${feedbacks.length} –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤.`);
  
  // Apply content filter first - remove empty reviews
  feedbacks = filterFeedbacksByContent(feedbacks, store);
  
  // Apply date filter
  feedbacks = filterFeedbacksByDate(feedbacks, store);
  
  // Apply rating filter - only 4 and 5 star reviews
  feedbacks = filterFeedbacksByRating(feedbacks, store);
  
  const newFeedbacks = feedbacks.filter(fb => !processedIds.has(fb.id));
  log(`[${store.name}] –ò–∑ –Ω–∏—Ö ${newFeedbacks.length} –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–æ–≤—ã—Ö (–Ω–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ).`);
  if (newFeedbacks.length === 0) return;

  // üöÄ –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–û–ï –°–û–•–†–ê–ù–ï–ù–ò–ï: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∂–¥—ã–π –æ—Ç–∑—ã–≤ —Å—Ä–∞–∑—É
  log(`[${store.name}] üöÄ –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–û–ï –°–û–•–†–ê–ù–ï–ù–ò–ï: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...`);
  
  let processedCount = 0;
  const maxToProcess = Math.min(newFeedbacks.length, CONFIG.MAX_FEEDBACKS_PER_RUN);
  
  newFeedbacks.slice(0, maxToProcess).forEach((feedback, index) => {
    const progressInfo = `[${index + 1}/${maxToProcess}]`;
    
    let rowData = [
        feedback.id, new Date(feedback.createdDate), feedback.product.id, 
        feedback.product.name, feedback.product.url, feedback.rating, 
        feedback.text
      ];

    if (!CONFIG.RESPOND_TO_RATINGS.includes(feedback.rating)) {
      rowData.push('', CONFIG.STATUS.SKIPPED_RATING, `–†–µ–π—Ç–∏–Ω–≥ ${feedback.rating} –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –æ—Ç–≤–µ—Ç–∞.`, '');
      
      // üíæ –°–†–ê–ó–£ –°–û–•–†–ê–ù–Ø–ï–ú –í –¢–ê–ë–õ–ò–¶–£
      sheet.appendRow(rowData);
      processedCount++;
      
      log(`${progressInfo} [${store.name}] –ü—Ä–æ–ø—É—â–µ–Ω –æ—Ç–∑—ã–≤ ID: ${feedback.id} (—Ä–µ–π—Ç–∏–Ω–≥ ${feedback.rating}). –°—Å—ã–ª–∫–∞: ${feedback.product.url}`);
      return;
    }
      
    const template = selectRandomTemplate(templates, feedback.rating);
    if (!template) {
      rowData.push('', CONFIG.STATUS.NO_TEMPLATE, `–ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π —à–∞–±–ª–æ–Ω –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞ ${feedback.rating}.`, '');
      
      // üíæ –°–†–ê–ó–£ –°–û–•–†–ê–ù–Ø–ï–ú –í –¢–ê–ë–õ–ò–¶–£
      sheet.appendRow(rowData);
      processedCount++;
      
      log(`${progressInfo} [${store.name}] –ù–µ—Ç —à–∞–±–ª–æ–Ω–∞ –¥–ª—è –æ—Ç–∑—ã–≤–∞ ID: ${feedback.id} (—Ä–µ–π—Ç–∏–Ω–≥ ${feedback.rating}). –°—Å—ã–ª–∫–∞: ${feedback.product.url}`);
      return;
    }

    if (devMode) {
      rowData.push(template, CONFIG.STATUS.PENDING, '', '');
      
      // üíæ –°–†–ê–ó–£ –°–û–•–†–ê–ù–Ø–ï–ú –í –¢–ê–ë–õ–ò–¶–£
      sheet.appendRow(rowData);
      processedCount++;
      
      log(`${progressInfo} [${store.name}] DEV: –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –¥–ª—è –æ—Ç–∑—ã–≤–∞ ID: ${feedback.id}. –°—Å—ã–ª–∫–∞: ${feedback.product.url}`);
    } else {
      // Production mode: send answer immediately
      const result = sendAnswer(store, feedback.id, template);
      rowData.push(template, result.status, result.error, result.timestamp);
      
      // üíæ –°–†–ê–ó–£ –°–û–•–†–ê–ù–Ø–ï–ú –í –¢–ê–ë–õ–ò–¶–£ –ü–û–°–õ–ï –û–¢–ü–†–ê–í–ö–ò
      sheet.appendRow(rowData);
      processedCount++;
      
      log(`${progressInfo} [${store.name}] PROD: –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –¥–ª—è ID: ${feedback.id}. –°—Ç–∞—Ç—É—Å: ${result.status}. –°—Å—ã–ª–∫–∞: ${feedback.product.url}`);
      
      // –ó–∞–¥–µ—Ä–∂–∫–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–∑—ã–≤
      if (index < maxToProcess - 1) {
        Utilities.sleep(CONFIG.DELAY_BETWEEN_REQUESTS);
      }
    }
  });
  
  if (processedCount > 0) {
    log(`[${store.name}] ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${processedCount} –æ—Ç–∑—ã–≤–æ–≤ –≤ —Ä–µ–∂–∏–º–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –∑–∞–ø–∏—Å–∏`);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ - –Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã –Ω–∞–≤–µ—Ä—Ö
    sortSheetByDate(sheet);
    log(`[${store.name}] –¢–∞–±–ª–∏—Ü–∞ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã –Ω–∞–≤–µ—Ä—Ö—É).`);
  }
}

/**
 * Sends all pending answers from all store sheets.
 */
function sendPendingAnswers() {
  log('--- –ó–ê–ü–£–°–ö –û–¢–ü–†–ê–í–ö–ò –ü–û–î–ì–û–¢–û–í–õ–ï–ù–ù–´–• –û–¢–í–ï–¢–û–í ---');
  const allStores = getStores().filter(s => s.isActive);
  
  allStores.forEach(store => {
    log(`--- –ü—Ä–æ–≤–µ—Ä—è—é –º–∞–≥–∞–∑–∏–Ω: ${store.name} ---`);
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(`–û—Ç–∑—ã–≤—ã (${store.name})`);
    if (!sheet) return;

    const data = sheet.getDataRange().getValues();
    const headers = data[0];
    const statusCol = headers.indexOf('–°—Ç–∞—Ç—É—Å') + 1;
    const answerCol = headers.indexOf('–ü–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç') + 1;
    const idCol = headers.indexOf('ID –æ—Ç–∑—ã–≤–∞') + 1;
    const errorCol = headers.indexOf('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏') + 1;
    const timeCol = headers.indexOf('–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏') + 1;
    const linkCol = headers.indexOf('–°—Å—ã–ª–∫–∞') + 1;

    if (statusCol === 0) {
        log(`[${store.name}] –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ç–æ–ª–±–µ—Ü "–°—Ç–∞—Ç—É—Å".`);
        return;
    }

    let sentCount = 0;
    let successCount = 0;
    for (let i = 1; i < data.length; i++) {
      if (data[i][statusCol - 1] === CONFIG.STATUS.PENDING) {
        const feedbackId = data[i][idCol - 1];
        const answerText = data[i][answerCol - 1];
        const reviewLink = data[i][linkCol - 1] || '';
        
        const result = sendAnswer(store, feedbackId, answerText);
        
        sheet.getRange(i + 1, statusCol).setValue(result.status);
        sheet.getRange(i + 1, errorCol).setValue(result.error);
        sheet.getRange(i + 1, timeCol).setValue(result.timestamp);
        
        // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –æ—Ç–≤–µ—Ç–æ–º API
        let logMessage = `[${store.name}] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –¥–ª—è ID ${feedbackId}. –°—Ç–∞—Ç—É—Å: ${result.status}${reviewLink ? '. –°—Å—ã–ª–∫–∞: ' + reviewLink : ''}`;
        if (result.apiResponse) {
          logMessage += `. –û—Ç–≤–µ—Ç API: ${result.apiResponse}`;
        }
        log(logMessage);
        
        sentCount++;
        if (result.status === CONFIG.STATUS.SENT) {
          successCount++;
        }
        Utilities.sleep(CONFIG.DELAY_BETWEEN_REQUESTS);
      }
    }

    if (sentCount > 0) {
        log(`[${store.name}] –ü–æ–ø—ã—Ç–æ–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏: ${sentCount}. –£—Å–ø–µ—à–Ω–æ: ${successCount}. –û—à–∏–±–æ–∫: ${sentCount - successCount}.`);
    } else {
        log(`[${store.name}] –ù–µ—Ç –æ—Ç–≤–µ—Ç–æ–≤, –æ–∂–∏–¥–∞—é—â–∏—Ö –æ—Ç–ø—Ä–∞–≤–∫–∏.`);
    }
  });
  log('--- –û–¢–ü–†–ê–í–ö–ê –ü–û–î–ì–û–¢–û–í–õ–ï–ù–ù–´–• –û–¢–í–ï–¢–û–í –ó–ê–í–ï–†–®–ï–ù–ê ---');
}

// ============ API-SPECIFIC FUNCTIONS ============

/**
 * Universal function to send answer to review
 * Routes to appropriate marketplace-specific function
 * @param {Object} store - Store configuration
 * @param {string} feedbackId - Review ID
 * @param {string} text - Answer text
 * @returns {Object} Result object with status, error, timestamp, and apiResponse
 */
function sendAnswer(store, feedbackId, text) {
  try {
    let success, message, apiResponse;
    if (store.marketplace === WB_CONFIG.MARKETPLACE_NAME) {
      [success, message, apiResponse] = sendWbFeedbackAnswer(feedbackId, text, store.credentials.apiKey);
    } else if (store.marketplace === OZON_CONFIG.MARKETPLACE_NAME) {
      [success, message, apiResponse] = sendOzonFeedbackAnswer(feedbackId, text, store.credentials.clientId, store.credentials.apiKey);
    } else {
      return { status: CONFIG.STATUS.ERROR, error: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å', timestamp: '', apiResponse: '' };
    }
    
    if (success) {
      return { status: CONFIG.STATUS.SENT, error: '', timestamp: new Date(), apiResponse: apiResponse || 'OK' };
    } else {
      return { status: CONFIG.STATUS.ERROR, error: message, timestamp: new Date(), apiResponse: apiResponse || message };
    }
  } catch (e) {
    log(`–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è ID ${feedbackId}: ${e.stack}`);
    return { status: CONFIG.STATUS.ERROR, error: e.message, timestamp: new Date(), apiResponse: e.message };
  }
}

// ============ WILDBERRIES API ============

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ WB —Å –ø–æ–ª–Ω–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
 */
function getWbFeedbacks(apiKey, includeAnswered = false, store = null) {
    log(`[WB] üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ (–≤–∫–ª—é—á–∞—è –æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ: ${includeAnswered})`);
    return getWbFeedbacksWithFullPagination(apiKey, includeAnswered, store);
}

function sendWbFeedbackAnswer(feedbackId, text, apiKey) {
    log(`[WB API] üéØ –ù–ê–ß–ê–õ–û –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è ID ${feedbackId}`);
    log(`[WB API] üìù –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: "${text}" (–¥–ª–∏–Ω–∞: ${text.length} —Å–∏–º–≤–æ–ª–æ–≤)`);
    log(`[WB API] üîë API –∫–ª—é—á: ${apiKey.substring(0, 15)}... (–¥–ª–∏–Ω–∞: ${apiKey.length})`);
    
    // üöÄ –ò–°–ü–û–õ–¨–ó–£–ï–ú –¢–û–õ–¨–ö–û –†–ê–ë–û–ß–ò–ô METHOD 2 (ID –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞) 
    // Method 1 (ID –≤ URL) –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 404, —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ–¥–∞
    const result = attemptWbFeedbackAnswerMethod2(feedbackId, text, apiKey);
    if (result[0]) {
        log(`[WB API] ‚úÖ –£–°–ü–ï–•! –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω (Method 2)`);
        return result;
    }
    
    log(`[WB API] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç. –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º—ã —Å API –∏–ª–∏ ID –æ—Ç–∑—ã–≤–∞.`);
    return result;
}

// Method 1 (ID –≤ URL) –£–î–ê–õ–ï–ù - –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª 404 –æ—à–∏–±–∫—É

/**
 * Method 2: ID –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞ - –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥
 * Endpoint: POST /api/v1/feedbacks/answer
 */
function attemptWbFeedbackAnswerMethod2(feedbackId, text, apiKey) {
    const url = `https://feedbacks-api.wildberries.ru/api/v1/feedbacks/answer`;
    const payload = { 
        id: feedbackId,  // ID –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞
        text: text       // –¢–µ–∫—Å—Ç —Ç–∞–∫–∂–µ –≤ —Ç–µ–ª–µ
    };
    
    log(`[WB API Method 2] üöÄ URL: ${url}`);
    log(`[WB API Method 2] üìù Payload: ${JSON.stringify(payload)}`);
    
    return sendWbApiRequest(url, payload, apiKey, "Method 2 (ID –≤ —Ç–µ–ª–µ)");
}

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ WB API –∑–∞–ø—Ä–æ—Å–∞
 * @param {string} url - URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
 * @param {Object} payload - –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
 * @param {string} apiKey - API –∫–ª—é—á
 * @param {string} methodName - –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
 * @returns {Array} [success, errorMessage, responseBody]
 */
function sendWbApiRequest(url, payload, apiKey, methodName) {
    try {
        log(`[WB ${methodName}] üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...`);
        
        const response = UrlFetchApp.fetch(url, {
            method: 'POST',
            headers: { 
                'Authorization': apiKey,
                'Content-Type': 'application/json'
            },
            payload: JSON.stringify(payload),
            muteHttpExceptions: true
        });
        
        const code = response.getResponseCode();
        const responseBody = response.getContentText();
        const responseHeaders = response.getAllHeaders();
        
        // üîç –î–ï–¢–ê–õ–¨–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        log(`[WB ${methodName}] üì• –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${code}`);
        log(`[WB ${methodName}] üì• –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: "${responseBody}"`);
        
        if (isDevMode()) {
            log(`[WB ${methodName} DEBUG] üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞: Authorization: ${apiKey.substring(0, 20)}..., Content-Type: application/json`);
            log(`[WB ${methodName} DEBUG] üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: ${JSON.stringify(responseHeaders, null, 2)}`);
        }
        
        // üéØ –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–æ–≤ –æ—Ç–≤–µ—Ç–∞
        const success = (code === 200 || code === 201 || code === 204);
        let errorMessage = '';
        
        if (success) {
            log(`[WB ${methodName}] ‚úÖ –£–°–ü–ï–•: –ö–æ–¥ ${code}`);
            if (code === 200) log(`[WB ${methodName}] ‚ÑπÔ∏è 200 OK - –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ`);
            if (code === 201) log(`[WB ${methodName}] ‚ÑπÔ∏è 201 Created - –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω`);
            if (code === 204) log(`[WB ${methodName}] ‚ÑπÔ∏è 204 No Content - –û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –¥–∞–Ω–Ω—ã—Ö –Ω–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ`);
        } else {
            errorMessage = `${methodName}: –ö–æ–¥ ${code}. –û—Ç–≤–µ—Ç: ${responseBody}`;
            log(`[WB ${methodName}] ‚ùå –ù–ï–£–î–ê–ß–ê: ${errorMessage}`);
            
            // üîç –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–∏–ø–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫
            if (code === 400) log(`[WB ${methodName}] üîé 400 Bad Request - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –∏ –¥–∞–Ω–Ω—ã–µ`);
            if (code === 401) log(`[WB ${methodName}] üîé 401 Unauthorized - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á`);
            if (code === 403) log(`[WB ${methodName}] üîé 403 Forbidden - API –∫–ª—é—á –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –∏–ª–∏ –æ—Ç–∑—ã–≤ —É–∂–µ –æ—Ç–≤–µ—á–µ–Ω`);
            if (code === 404) log(`[WB ${methodName}] üîé 404 Not Found - –û—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ endpoint –Ω–µ–≤–µ—Ä–Ω—ã–π`);
            if (code === 422) log(`[WB ${methodName}] üîé 422 Unprocessable Entity - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ (–¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞, —Å—Ç–∞—Ç—É—Å –æ—Ç–∑—ã–≤–∞)`);
            if (code === 429) log(`[WB ${methodName}] üîé 429 Too Many Requests - –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ (max 3/—Å–µ–∫)`);
            if (code >= 500) log(`[WB ${methodName}] üîé ${code} Server Error - –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ WB`);
        }
        
        return [success, errorMessage, responseBody];
        
    } catch (e) {
        const criticalError = `${methodName} –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${e.message}`;
        log(`[WB ${methodName}] ‚õî ${criticalError}`);
        log(`[WB ${methodName}] üîç Stack trace: ${e.stack}`);
        return [false, criticalError, e.message];
    }
}

// ============ OZON API ============

/**
 * Fetches reviews from Ozon API
 * @param {string} clientId - Ozon Client ID
 * @param {string} apiKey - Ozon API Key
 * @param {boolean} includeAnswered - Whether to include answered reviews
 * @returns {Array} Array of normalized feedback objects
 */
function getOzonFeedbacks(clientId, apiKey, includeAnswered = false, store = null) {
    const url = 'https://api-seller.ozon.ru/v1/review/list';
    
    let payload = {
        filter: {
            has_text: true,  // –¢–æ–ª—å–∫–æ –æ—Ç–∑—ã–≤—ã —Å —Ç–µ–∫—Å—Ç–æ–º
            has_answer: includeAnswered ? undefined : false,  // –§–∏–ª—å—Ç—Ä –ø–æ –æ—Ç–≤–µ—Ç–∞–º
            status: includeAnswered ? ['MODERATED', 'NEW'] : ['MODERATED']  // –°—Ç–∞—Ç—É—Å—ã –æ—Ç–∑—ã–≤–æ–≤
        },
        sort: {
            field: 'CREATED_AT',
            direction: 'DESC'  // –ù–æ–≤—ã–µ –ø–µ—Ä–≤—ã–º–∏
        },
        page: 1,
        limit: OZON_CONFIG.API_LIMITS.MAX_LIMIT  // 100 - –º–∞–∫—Å–∏–º—É–º
    };

    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –¥–∞—Ç –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–∞–≥–∞–∑–∏–Ω–∞
    if (store && store.settings && store.settings.startDate) {
        const startDate = store.settings.startDate;
        const today = new Date().toISOString().split('T')[0];
        
        const dateFrom = formatDateForOzon(startDate);
        const dateTo = formatDateForOzon(today);
        
        payload.filter.date_from = dateFrom;
        payload.filter.date_to = dateTo;
        
        log(`[Ozon] üóìÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω —Ñ–∏–ª—å—Ç—Ä –¥–∞—Ç –º–∞–≥–∞–∑–∏–Ω–∞: ${startDate} - ${today} (RFC3339: ${dateFrom} - ${dateTo})`);
    } else {
        log(`[Ozon] üóìÔ∏è –§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω - –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ—Ç–∑—ã–≤—ã`);
    }
    try {
        const response = UrlFetchApp.fetch(url, {
            method: 'POST', headers: { 'Client-Id': clientId, 'Api-Key': apiKey },
            contentType: 'application/json', payload: JSON.stringify(payload),
            muteHttpExceptions: true
        });
        const responseCode = response.getResponseCode();
        const responseBody = response.getContentText();
        if (responseCode !== 200) {
            log(`[Ozon] –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–∑—ã–≤—ã. –ö–æ–¥: ${responseCode}. –¢–µ–ª–æ: ${responseBody}`);
            return [];
        }

        const json = JSON.parse(responseBody);
        
        // ‚úÖ –£–õ–£–ß–®–ï–ù–ê –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä –æ—Ç–≤–µ—Ç–∞ API
        let reviews = [];
        if (json.result && json.result.reviews) {
            reviews = json.result.reviews;
        } else if (json.reviews) {
            reviews = json.reviews;
        } else if (json.data && json.data.reviews) {
            reviews = json.data.reviews;
        } else {
            log(`[Ozon] ‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞. –ö–ª—é—á–∏: ${Object.keys(json).join(', ')}. –û—Ç–≤–µ—Ç: ${responseBody.substring(0, 200)}...`);
            return [];
        }
        
        if (!Array.isArray(reviews)) {
            log(`[Ozon] –û–®–ò–ë–ö–ê: reviews –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º. –¢–∏–ø: ${typeof reviews}. –ó–Ω–∞—á–µ–Ω–∏–µ: ${JSON.stringify(reviews).substring(0, 100)}...`);
            return [];
        }

        log(`[Ozon] üìÑ –ü–æ–ª—É—á–µ–Ω–æ ${reviews.length} –æ—Ç–∑—ã–≤–æ–≤ —á–µ—Ä–µ–∑ –Ω–æ–≤—ã–π API`);

        // –ö–†–ò–¢–ò–ß–ù–û: –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã –ø–µ—Ä–≤—ã–º–∏) 
        reviews.sort((a, b) => new Date(b.created_at || b.published_at) - new Date(a.created_at || a.published_at));
        
        let processedReviews = reviews.map(fb => ({
            id: fb.id, 
            createdDate: fb.published_at, 
            rating: fb.rating,
            text: fb.text || '(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)', 
            user: '–ê–Ω–æ–Ω–∏–º', // –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –≤ —ç—Ç–æ–º –º–µ—Ç–æ–¥–µ
            product: { 
              id: fb.sku || fb.offer_id, // –ò—Å–ø–æ–ª—å–∑—É–µ–º sku –∏–ª–∏ offer_id
              name: '–ù–µ —É–∫–∞–∑–∞–Ω–æ', // –ë—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∏–∂–µ —á–µ—Ä–µ–∑ Product API
              url: `https://www.ozon.ru/product/${fb.sku || fb.offer_id}`
            }
        }));
        
        // ‚úÖ –û–ë–û–ì–ê–©–ê–ï–ú –ù–ê–ó–í–ê–ù–ò–Ø–ú–ò –¢–û–í–ê–†–û–í —á–µ—Ä–µ–∑ /v3/product/info/list (–Ω–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º)
        if (processedReviews.length > 0 && store && store.credentials) {
            // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –±–∞—Ç—á-–∑–∞–ø—Ä–æ—Å–∞
            const identifiers = [];
            processedReviews.forEach(review => {
                const productId = review.product.id;
                if (!productId) return;
                
                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ (sku - —á–∏—Å–ª–æ–≤–æ–π, offer_id - —Å—Ç—Ä–æ–∫–æ–≤—ã–π)
                if (/^\d+$/.test(String(productId))) {
                    identifiers.push({ type: 'sku', value: String(productId) });
                } else {
                    identifiers.push({ type: 'offer_id', value: String(productId) });
                }
            });
            
            log(`[Ozon] üè∑Ô∏è –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ ${identifiers.length} –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –æ–±–æ–≥–∞—â–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏`);
            
            // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
            const productInfo = getOzonProductInfoList(identifiers, store.credentials.clientId, store.credentials.apiKey);
            
            if (Object.keys(productInfo).length > 0) {
                let enrichedCount = 0;
                processedReviews.forEach(review => {
                    const info = productInfo[review.product.id];
                    if (info && info.name) {
                        review.product.name = info.name;
                        // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –º–æ–∂–µ–º —Ç–∞–∫–∂–µ –æ–±–æ–≥–∞—Ç–∏—Ç—å —Ü–µ–Ω–æ–π –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
                        if (info.price) {
                            review.product.price = info.price;
                        }
                        enrichedCount++;
                    }
                });
                log(`[Ozon] üè∑Ô∏è –û–±–æ–≥–∞—â–µ–Ω–æ ${enrichedCount} –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ ${Object.keys(productInfo).length} –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤`);
            } else {
                log(`[Ozon] ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö —á–µ—Ä–µ–∑ Product API`);
            }
        }
        
        return processedReviews;
    } catch (e) {
        log(`[Ozon] –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –æ—Ç–∑—ã–≤–æ–≤: ${e.stack}`);
        return [];
    }
}

function sendOzonFeedbackAnswer(feedbackId, text, clientId, apiKey) {
    const url = 'https://api-seller.ozon.ru/v1/review/comment/create';
    const payload = { review_id: feedbackId, text: text, mark_review_as_processed: true };
    
    const response = UrlFetchApp.fetch(url, {
        method: 'POST', 
        headers: { 'Client-Id': clientId, 'Api-Key': apiKey },
        contentType: 'application/json', 
        payload: JSON.stringify(payload),
        muteHttpExceptions: true
    });
    
    const code = response.getResponseCode();
    const responseBody = response.getContentText();
    
    // Include detailed API response for debugging
    const success = code === 200;
    const errorMessage = success ? '' : `–ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${code}. –¢–µ–ª–æ: ${responseBody}`;
    
    return [success, errorMessage, responseBody];
}

// ============ DATA (STORE & TEMPLATE) MANAGEMENT ============
function getStores() {
  const storesJson = PropertiesService.getUserProperties().getProperty(CONFIG.PROPERTIES_KEY);
  if (!storesJson) return [];
  const stores = JSON.parse(storesJson);
  return stores.map(store => {
      if (typeof store.isActive === 'undefined') store.isActive = true;
      // Ensure settings object exists for backward compatibility
      if (!store.settings) store.settings = {};
      return store;
  });
}

function saveStore(store) {
  log(`–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞: ${store.name}${store.settings && store.settings.startDate ? ' (–¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ' + store.settings.startDate + ')' : ''}`);
  const stores = getStores();
  const storeIndex = stores.findIndex(s => s.id === store.id);
  
  if (typeof store.isActive === 'undefined') store.isActive = true;
  // Ensure settings object exists
  if (!store.settings) store.settings = {};
  
  if (storeIndex > -1) {
    stores[storeIndex] = store; 
  } else {
    store.id = store.id || new Date().getTime().toString(); 
    stores.push(store); 
  }
  PropertiesService.getUserProperties().setProperty(CONFIG.PROPERTIES_KEY, JSON.stringify(stores));
  createOrGetSheet(`–û—Ç–∑—ã–≤—ã (${store.name})`, CONFIG.HEADERS);
  return getStores();
}

function deleteStore(storeId) {
  log(`–£–¥–∞–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ —Å ID: ${storeId}`);
  let stores = getStores();
  stores = stores.filter(s => s.id !== storeId);
  PropertiesService.getUserProperties().setProperty(CONFIG.PROPERTIES_KEY, JSON.stringify(stores));
  return getStores();
}

function getTemplates() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(CONFIG.SHEETS.TEMPLATES);
  if (!sheet || sheet.getLastRow() < 2) return [];
  // Use getDisplayValues() to get the formatted string, not the underlying value (which can be a date)
  return sheet.getRange(2, 1, sheet.getLastRow() - 1, 2).getDisplayValues().map(row => ({ 
    text: row[0], 
    rating: row[1].trim()
  })).filter(t => t.text.trim() && t.rating);
}

function fillInitialTemplates() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(CONFIG.SHEETS.TEMPLATES);
  if (sheet.getLastRow() <= 1) {
    const templates = [
      ['–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –†–∞–¥—ã, —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å! üòä', '5'],
      ['–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–∫—É–ø–∫—É! –ñ–¥–µ–º –≤–∞—Å —Å–Ω–æ–≤–∞! ‚ù§Ô∏è', '5'],
      ['–°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã—Å–æ–∫—É—é –æ—Ü–µ–Ω–∫—É! –í—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å!', '4-5'],
      ['–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–∑—ã–≤! –ü—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫!', '4']
    ];
    sheet.getRange(2, 1, templates.length, 2).setValues(templates);
  }
}

function createOrGetSheet(sheetName, headers) {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  let sheet = ss.getSheetByName(sheetName);
  if (!sheet) {
    sheet = ss.insertSheet(sheetName);
    log(`–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ª–∏—Å—Ç: "${sheetName}"`);
  }
  
  if (headers && headers.length > 0) {
    const currentHeaders = sheet.getRange(1, 1, 1, sheet.getMaxColumns()).getValues()[0];
    if (currentHeaders.join('') !== headers.join('')) {
        sheet.getRange(1, 1, 1, headers.length).setValues([headers]).setFontWeight('bold').setBackground('#4a86e8').setFontColor('#ffffff');
        sheet.setFrozenRows(1);
        headers.forEach((_, i) => sheet.autoResizeColumn(i + 1));
        log(`–û–±–Ω–æ–≤–ª–µ–Ω—ã –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ –ª–∏—Å—Ç–µ "${sheetName}".`);
    }
  }
  return sheet;
}

function selectRandomTemplate(templates, rating) {
  const suitable = templates.filter(t => {
      if (!t.rating) return false;
      if (t.rating.includes('-')) {
          const [min, max] = t.rating.split('-').map(Number);
          return rating >= min && rating <= max;
      }
      return Number(t.rating) === rating;
  });
  if (suitable.length === 0) return null;
  return suitable[Math.floor(Math.random() * suitable.length)].text;
}

function getProcessedIdsFromSheet(sheet) {
  if (sheet.getLastRow() < 2) return new Set();
  const idCol = CONFIG.HEADERS.indexOf('ID –æ—Ç–∑—ã–≤–∞') + 1;
  const ids = sheet.getRange(2, idCol, sheet.getLastRow() - 1, 1).getDisplayValues().flat();
  return new Set(ids.filter(id => id));
}

function manuallyDeleteReviewById() {
  const ui = SpreadsheetApp.getUi();
  const response = ui.prompt('–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞', '–í–≤–µ–¥–∏—Ç–µ ID –æ—Ç–∑—ã–≤–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –ª–æ–≥–∞:', ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK || !response.getResponseText()) {
    log('–û–ø–µ—Ä–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.');
    return;
  }

  const feedbackId = response.getResponseText().trim();
  log(`–ó–∞–ø—É—Å–∫ —Ä—É—á–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞ —Å ID: ${feedbackId}`);
  const stores = getStores();
  let foundAndDeleted = false;

  stores.forEach(store => {
    const sheetName = `–û—Ç–∑—ã–≤—ã (${store.name})`;
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(sheetName);
    if (sheet && sheet.getLastRow() > 1) {
      const ids = sheet.getRange(2, 1, sheet.getLastRow() - 1, 1).getValues().flat();
      for (let i = ids.length - 1; i >= 0; i--) {
        if (String(ids[i]) == feedbackId) {
          log(`–ù–∞–π–¥–µ–Ω –æ—Ç–∑—ã–≤ ID ${feedbackId} –≤ "${store.name}" –Ω–∞ —Å—Ç—Ä–æ–∫–µ ${i + 2}. –£–¥–∞–ª—è—é.`);
          sheet.deleteRow(i + 2);
          foundAndDeleted = true;
          break;
        }
      }
    }
  });

  if (foundAndDeleted) {
    ui.alert('–£—Å–ø–µ—Ö', `–ó–∞–ø–∏—Å—å –æ–± –æ—Ç–∑—ã–≤–µ —Å ID "${feedbackId}" —É–¥–∞–ª–µ–Ω–∞.`);
  } else {
    ui.alert('–ù–µ –Ω–∞–π–¥–µ–Ω–æ', `–û—Ç–∑—ã–≤ —Å ID "${feedbackId}" –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
  }
}

// ============ WB TESTING FUNCTIONS ============
/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –æ—Ç–∑—ã–≤ WB
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±–∞ endpoint'–∞ –±–µ–∑ –≤–ª–∏—è–Ω–∏—è –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
 */
function testWbFeedbackAnswerById() {
  const ui = SpreadsheetApp.getUi();
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤
  const stores = getStores().filter(s => s.isActive && s.marketplace === 'Wildberries');
  if (stores.length === 0) {
    ui.alert('‚ùå –û—à–∏–±–∫–∞', '–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ Wildberries –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.', ui.ButtonSet.OK);
    return;
  }
  
  // –í—ã–±–∏—Ä–∞–µ–º –º–∞–≥–∞–∑–∏–Ω (–ø–æ–∫–∞ –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π)
  const store = stores[0];
  log(`[WB TEST] üß™ –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞: ${store.name}`);
  
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID –æ—Ç–∑—ã–≤–∞
  const feedbackIdResponse = ui.prompt('üß™ –¢–µ—Å—Ç WB API', 
    '–í–≤–µ–¥–∏—Ç–µ ID –æ—Ç–∑—ã–≤–∞ Wildberries –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', ui.ButtonSet.OK_CANCEL);
  
  if (feedbackIdResponse.getSelectedButton() !== ui.Button.OK || !feedbackIdResponse.getResponseText().trim()) {
    log('[WB TEST] ‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.');
    return;
  }
  
  const feedbackId = feedbackIdResponse.getResponseText().trim();
  log(`[WB TEST] üéØ ID –æ—Ç–∑—ã–≤–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${feedbackId}`);
  
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
  const answerTextResponse = ui.prompt('üß™ –¢–µ—Å—Ç WB API', 
    '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (2-5000 —Å–∏–º–≤–æ–ª–æ–≤):', ui.ButtonSet.OK_CANCEL);
    
  if (answerTextResponse.getSelectedButton() !== ui.Button.OK || !answerTextResponse.getResponseText().trim()) {
    log('[WB TEST] ‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.');
    return;
  }
  
  const answerText = answerTextResponse.getResponseText().trim();
  
  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –æ—Ç–≤–µ—Ç–∞
  if (answerText.length < 2) {
    ui.alert('‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏', '–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π (–º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞).', ui.ButtonSet.OK);
    return;
  }
  if (answerText.length > 5000) {
    ui.alert('‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏', '–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–º–∞–∫—Å–∏–º—É–º 5000 —Å–∏–º–≤–æ–ª–æ–≤).', ui.ButtonSet.OK);
    return;
  }
  
  log(`[WB TEST] üìù –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: "${answerText}" (${answerText.length} —Å–∏–º–≤–æ–ª–æ–≤)`);
  
  // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const confirmResponse = ui.alert('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï', 
    `–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –†–ï–ê–õ–¨–ù–´–ô –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Ç–∑—ã–≤ ${feedbackId} –≤ –º–∞–≥–∞–∑–∏–Ω–µ "${store.name}"!\n\n–¢–µ–∫—Å—Ç: "${answerText}"\n\n–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?`, 
    ui.ButtonSet.YES_NO);
    
  if (confirmResponse !== ui.Button.YES) {
    log('[WB TEST] ‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞ —ç—Ç–∞–ø–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.');
    return;
  }
  
  // –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –Ω–∞ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∞ –¥–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –ª–æ–≥–æ–≤
  const wasDevMode = isDevMode();
  if (!wasDevMode) {
    log('[WB TEST] üõ†Ô∏è –í—Ä–µ–º–µ–Ω–Ω–æ –≤–∫–ª—é—á–∞–µ–º Dev Mode –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è...');
    setDevMode('true');
  }
  
  try {
    log('[WB TEST] üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞...');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –¥–≤—É–º—è –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ endpoint'–æ–≤
    const result = sendWbFeedbackAnswer(feedbackId, answerText, store.credentials.apiKey);
    const [success, errorMessage, responseBody] = result;
    
    log(`[WB TEST] üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê:`);
    log(`[WB TEST] ‚úÖ –£—Å–ø–µ—Ö: ${success ? '–î–ê' : '–ù–ï–¢'}`);
    log(`[WB TEST] üìù –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: ${errorMessage || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    log(`[WB TEST] üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${responseBody || '–ø—É—Å—Ç–æ–π'}`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if (success) {
      ui.alert('‚úÖ –£–°–ü–ï–•', 
        `–û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!\n\n–û—Ç–∑—ã–≤ ID: ${feedbackId}\n–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${responseBody}`, 
        ui.ButtonSet.OK);
    } else {
      ui.alert('‚ùå –û–®–ò–ë–ö–ê', 
        `–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç.\n\n–û—à–∏–±–∫–∞: ${errorMessage}\n–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${responseBody}\n\n–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ª–æ–≥–µ –æ—Ç–ª–∞–¥–∫–∏.`, 
        ui.ButtonSet.OK);
    }
    
  } catch (e) {
    log(`[WB TEST] ‚õî –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤ —Ç–µ—Å—Ç–µ: ${e.message}`);
    log(`[WB TEST] üîç Stack trace: ${e.stack}`);
    ui.alert('‚õî –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê', 
      `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:\n\n${e.message}\n\n–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ª–æ–≥–µ –æ—Ç–ª–∞–¥–∫–∏.`, 
      ui.ButtonSet.OK);
  } finally {
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
    if (!wasDevMode) {
      log('[WB TEST] üõ†Ô∏è –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞...');
      setDevMode('false');
    }
    
    log('[WB TEST] üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ü–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏ –≤ –ª–∏—Å—Ç–µ "üêû –õ–æ–≥ –æ—Ç–ª–∞–¥–∫–∏".');
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞ WB
 * –ü–æ–º–æ–≥–∞–µ—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å, –ø–æ—á–µ–º—É –æ—Ç–∑—ã–≤ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç
 */
function checkWbFeedbackStatus(feedbackId, apiKey) {
  try {
    log(`[WB Check] üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–∑—ã–≤–∞ ${feedbackId}...`);
    
    const url = `https://feedbacks-api.wildberries.ru/api/v1/feedback?id=${feedbackId}`;
    
    const response = UrlFetchApp.fetch(url, {
      method: 'GET',
      headers: { 'Authorization': apiKey },
      muteHttpExceptions: true
    });
    
    const code = response.getResponseCode();
    const responseBody = response.getContentText();
    
    log(`[WB Check] üì• –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${code}`);
    log(`[WB Check] üìã –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: ${responseBody}`);
    
    if (code === 200) {
      try {
        const feedback = JSON.parse(responseBody);
        const hasAnswer = feedback.answer && feedback.answer.text;
        const createdDate = feedback.createdDate;
        const rating = feedback.rating;
        
        log(`[WB Check] ‚úÖ –û—Ç–∑—ã–≤ –Ω–∞–π–¥–µ–Ω:`);
        log(`[WB Check] üìÖ –î–∞—Ç–∞: ${createdDate}`);
        log(`[WB Check] ‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${rating}`);
        log(`[WB Check] üí¨ –ò–º–µ–µ—Ç –æ—Ç–≤–µ—Ç: ${hasAnswer ? '–î–ê' : '–ù–ï–¢'}`);
        if (hasAnswer) {
          log(`[WB Check] üìù –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: "${feedback.answer.text}"`);
        }
        
        return { exists: true, hasAnswer, feedback };
      } catch (e) {
        log(`[WB Check] ‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: ${e.message}`);
        return { exists: false, error: 'JSON parse error' };
      }
    } else {
      log(`[WB Check] ‚ùå –û—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞ API: ${code}`);
      return { exists: false, error: `HTTP ${code}: ${responseBody}` };
    }
  } catch (e) {
    log(`[WB Check] ‚õî –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${e.message}`);
    return { exists: false, error: e.message };
  }
}

// ============ TRIGGERS ============
function createTrigger(minutes) {
  deleteAllTriggers();
  ScriptApp.newTrigger('processAllStores').timeBased().everyMinutes(minutes).create();
  log(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç—Ä–∏–≥–≥–µ—Ä –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –Ω–∞ –∫–∞–∂–¥—ã–µ ${minutes} –º–∏–Ω—É—Ç.`);
  SpreadsheetApp.getUi().alert('‚úÖ –¢—Ä–∏–≥–≥–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', `–û–±—Ä–∞–±–æ—Ç–∫–∞ –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–µ ${minutes} –º–∏–Ω—É—Ç.`, SpreadsheetApp.getUi().ButtonSet.OK);
}

function createTrigger5Min() { createTrigger(5); }
function createTrigger30Min() { createTrigger(30); }
function createTrigger1Hour() { createTrigger(60); }

function deleteAllTriggers() {
  const triggers = ScriptApp.getProjectTriggers();
  let deletedCount = 0;
  triggers.forEach(trigger => {
    if (trigger.getHandlerFunction() === 'processAllStores') {
      ScriptApp.deleteTrigger(trigger);
      deletedCount++;
    }
  });
  if (deletedCount > 0) {
    log(`–£–¥–∞–ª–µ–Ω–æ ${deletedCount} —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞.`);
  }
}

// ============ –ù–û–ß–ù–û–ô –ö–ï–®-–ü–†–û–ì–†–ï–í ============

/**
 * üåô –ù–û–ß–ù–û–ô –ö–ï–®-–ü–†–û–ì–†–ï–í: –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–∞—Ö –≤ –∫–µ—à
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ —Ç—Ä–∏–≥–≥–µ—Ä—É —Ä–∞–∑ –≤ –¥–µ–Ω—å (–æ–±—ã—á–Ω–æ –Ω–æ—á—å—é)
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–æ–≤ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function warmupProductCache() {
  log('=== üåô –ó–ê–ü–£–°–ö –ù–û–ß–ù–û–ì–û –ö–ï–®-–ü–†–û–ì–†–ï–í–ê ===');
  const startTime = new Date();
  
  const allStores = getStores();
  const activeStores = allStores.filter(store => store.isActive);
  
  if (activeStores.length === 0) {
    log('[Warmup] ‚ö†Ô∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ –¥–ª—è –ø—Ä–æ–≥—Ä–µ–≤–∞ –∫–µ—à–∞');
    return;
  }
  
  log(`[Warmup] üè™ –ù–∞–π–¥–µ–Ω–æ ${activeStores.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤`);
  
  let totalProductsWarmed = 0;
  let successfulStores = 0;
  let failedStores = 0;
  
  activeStores.forEach((store, index) => {
    log(`[Warmup] üì¶ [${index + 1}/${activeStores.length}] –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞: ${store.name} [${store.marketplace}]`);
    
    try {
      let warmedCount = 0;
      
      if (store.marketplace === 'Wildberries') {
        warmedCount = warmupWildberriesProducts(store);
      } else if (store.marketplace === 'Ozon') {
        warmedCount = warmupOzonProducts(store);
      }
      
      if (warmedCount > 0) {
        totalProductsWarmed += warmedCount;
        successfulStores++;
        log(`[Warmup] ‚úÖ ${store.name}: –ø—Ä–æ–≥—Ä–µ—Ç–æ ${warmedCount} —Ç–æ–≤–∞—Ä–æ–≤`);
      } else {
        log(`[Warmup] ‚ö†Ô∏è ${store.name}: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≥—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã`);
      }
      
      // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –º–∞–≥–∞–∑–∏–Ω–∞–º–∏ –¥–ª—è —Å–æ–±–ª—é–¥–µ–Ω–∏—è rate limits
      if (index < activeStores.length - 1) {
        Utilities.sleep(2000);
      }
      
    } catch (e) {
      failedStores++;
      log(`[Warmup] ‚ùå –û–®–ò–ë–ö–ê –¥–ª—è ${store.name}: ${e.message}`);
    }
  });
  
  const endTime = new Date();
  const duration = Math.round((endTime - startTime) / 1000);
  
  log('=== üåô –ó–ê–í–ï–†–®–ï–ù–ò–ï –ö–ï–®-–ü–†–û–ì–†–ï–í–ê ===');
  log(`[Warmup] üìä –ò–¢–û–ì–û: ${totalProductsWarmed} —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–æ–≥—Ä–µ—Ç–æ`);
  log(`[Warmup] ‚úÖ –£—Å–ø–µ—à–Ω–æ: ${successfulStores} –º–∞–≥–∞–∑–∏–Ω–æ–≤`);
  log(`[Warmup] ‚ùå –û—à–∏–±–∫–∏: ${failedStores} –º–∞–≥–∞–∑–∏–Ω–æ–≤`);
  log(`[Warmup] ‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${duration} —Å–µ–∫—É–Ω–¥`);
}

/**
 * –ü—Ä–æ–≥—Ä–µ–≤ –∫–µ—à–∞ –¥–ª—è Wildberries
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è –≤ –∫–µ—à
 */
function warmupWildberriesProducts(store) {
  if (!store.credentials || !store.credentials.apiKey) {
    log(`[WB Warmup] ‚ùå –ù–µ—Ç API –∫–ª—é—á–∞ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ ${store.name}`);
    return 0;
  }
  
  try {
    log(`[WB Warmup] üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...`);
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ Content API
    const url = 'https://content-api.wildberries.ru/content/v2/get/cards/list';
    const response = UrlFetchApp.fetch(url, {
      method: 'POST',
      headers: { 
        'Authorization': store.credentials.apiKey,
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify({
        settings: {
          cursor: {
            limit: 100  // –ú–∞–∫—Å–∏–º—É–º –∑–∞ –∑–∞–ø—Ä–æ—Å
          },
          filter: {
            withPhoto: -1  // –í—Å–µ —Ç–æ–≤–∞—Ä—ã
          }
        }
      }),
      muteHttpExceptions: true
    });
    
    const code = response.getResponseCode();
    if (code !== 200) {
      log(`[WB Warmup] ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞: ${code}`);
      return 0;
    }
    
    const json = JSON.parse(response.getContentText());
    const cards = json.cards || [];
    
    if (cards.length === 0) {
      log(`[WB Warmup] ‚ö†Ô∏è –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç`);
      return 0;
    }
    
    log(`[WB Warmup] üì¶ –ù–∞–π–¥–µ–Ω–æ ${cards.length} —Ç–æ–≤–∞—Ä–æ–≤`);
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º nmId –∏–∑ –∫–∞—Ä—Ç–æ—á–µ–∫ –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∏—Ö –≤ –∫–µ—à
    const nmIds = cards.map(card => card.nmID).filter(id => id);
    
    if (nmIds.length === 0) {
      log(`[WB Warmup] ‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ nmID –≤ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö`);
      return 0;
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    const productNames = getWbProductNames(nmIds, store.credentials.apiKey);
    const warmedCount = Object.keys(productNames).length;
    
    log(`[WB Warmup] üíæ –ü—Ä–æ–≥—Ä–µ—Ç–æ –≤ –∫–µ—à: ${warmedCount} —Ç–æ–≤–∞—Ä–æ–≤`);
    return warmedCount;
    
  } catch (e) {
    log(`[WB Warmup] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${e.message}`);
    return 0;
  }
}

/**
 * –ü—Ä–æ–≥—Ä–µ–≤ –∫–µ—à–∞ –¥–ª—è Ozon
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∏—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–µ—à
 */
function warmupOzonProducts(store) {
  if (!store.credentials || !store.credentials.clientId || !store.credentials.apiKey) {
    log(`[Ozon Warmup] ‚ùå –ù–µ—Ç API –∫–ª—é—á–µ–π –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ ${store.name}`);
    return 0;
  }
  
  try {
    log(`[Ozon Warmup] üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...`);
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ /v3/product/list
    const url = 'https://api-seller.ozon.ru/v3/product/list';
    let allProducts = [];
    let lastId = "";
    let pageCount = 0;
    const maxPages = 50; // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (5000 —Ç–æ–≤–∞—Ä–æ–≤ –º–∞–∫—Å–∏–º—É–º)
    
    while (pageCount < maxPages) {
      const payload = {
        filter: {},
        last_id: lastId,
        limit: 100  // –ú–∞–∫—Å–∏–º—É–º –∑–∞ –∑–∞–ø—Ä–æ—Å
      };
      
      const response = UrlFetchApp.fetch(url, {
        method: 'POST',
        headers: { 
          'Client-Id': store.credentials.clientId, 
          'Api-Key': store.credentials.apiKey,
          'Content-Type': 'application/json'
        },
        payload: JSON.stringify(payload),
        muteHttpExceptions: true
      });
      
      const code = response.getResponseCode();
      if (code !== 200) {
        log(`[Ozon Warmup] ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageCount + 1}): ${code}`);
        break;
      }
      
      const json = JSON.parse(response.getContentText());
      const items = json.result?.items || [];
      
      if (items.length === 0) {
        log(`[Ozon Warmup] ‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –≤—Å–µ —Ç–æ–≤–∞—Ä—ã (—Å—Ç—Ä–∞–Ω–∏—Ü: ${pageCount})`);
        break;
      }
      
      allProducts = allProducts.concat(items);
      lastId = json.result?.last_id || "";
      pageCount++;
      
      log(`[Ozon Warmup] üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageCount}: –ø–æ–ª—É—á–µ–Ω–æ ${items.length} —Ç–æ–≤–∞—Ä–æ–≤ (–≤—Å–µ–≥–æ: ${allProducts.length})`);
      
      // –ï—Å–ª–∏ last_id –ø—É—Å—Ç–æ–π, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
      if (!lastId) {
        log(`[Ozon Warmup] ‚úÖ –î–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞`);
        break;
      }
      
      // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
      Utilities.sleep(OZON_CONFIG.RATE_LIMITS.DELAY_BETWEEN_REQUESTS);
    }
    
    if (allProducts.length === 0) {
      log(`[Ozon Warmup] ‚ö†Ô∏è –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç`);
      return 0;
    }
    
    log(`[Ozon Warmup] üì¶ –ò–¢–û–ì–û –Ω–∞–π–¥–µ–Ω–æ ${allProducts.length} —Ç–æ–≤–∞—Ä–æ–≤`);
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    const identifiers = [];
    allProducts.forEach(product => {
      // –î–æ–±–∞–≤–ª—è–µ–º sku
      if (product.sku) {
        identifiers.push({ type: 'sku', value: String(product.sku) });
      }
      // –î–æ–±–∞–≤–ª—è–µ–º offer_id –µ—Å–ª–∏ –µ—Å—Ç—å
      if (product.offer_id) {
        identifiers.push({ type: 'offer_id', value: String(product.offer_id) });
      }
    });
    
    if (identifiers.length === 0) {
      log(`[Ozon Warmup] ‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏`);
      return 0;
    }
    
    log(`[Ozon Warmup] üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è ${identifiers.length} –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤...`);
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –±–∞—Ç—á–∏–Ω–≥–æ–º
    const productInfo = getOzonProductInfoList(identifiers, store.credentials.clientId, store.credentials.apiKey);
    const warmedCount = Object.keys(productInfo).length;
    
    log(`[Ozon Warmup] üíæ –ü—Ä–æ–≥—Ä–µ—Ç–æ –≤ –∫–µ—à: ${warmedCount} —Ç–æ–≤–∞—Ä–æ–≤`);
    return warmedCount;
    
  } catch (e) {
    log(`[Ozon Warmup] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${e.message}`);
    return 0;
  }
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ—á–Ω–æ–≥–æ —Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è –∫–µ—à-–ø—Ä–æ–≥—Ä–µ–≤–∞
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ä–∞–∑ –≤ –¥–µ–Ω—å –≤ 23:00
 */
function createWarmupTrigger() {
  // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –ø—Ä–æ–≥—Ä–µ–≤–∞
  const triggers = ScriptApp.getProjectTriggers();
  triggers.forEach(trigger => {
    if (trigger.getHandlerFunction() === 'warmupProductCache') {
      ScriptApp.deleteTrigger(trigger);
    }
  });
  
  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç—Ä–∏–≥–≥–µ—Ä –Ω–∞ 23:00
  ScriptApp.newTrigger('warmupProductCache')
    .timeBased()
    .atHour(23)  // 23:00
    .everyDays(1)
    .create();
  
  log('[Warmup Trigger] ‚úÖ –°–æ–∑–¥–∞–Ω —Ç—Ä–∏–≥–≥–µ—Ä –Ω–æ—á–Ω–æ–≥–æ –∫–µ—à-–ø—Ä–æ–≥—Ä–µ–≤–∞ (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 23:00)');
  SpreadsheetApp.getUi().alert('‚úÖ –£—Å–ø–µ—Ö', '–¢—Ä–∏–≥–≥–µ—Ä –Ω–æ—á–Ω–æ–≥–æ –∫–µ—à-–ø—Ä–æ–≥—Ä–µ–≤–∞ —Å–æ–∑–¥–∞–Ω.\n\n–ë—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 23:00.', SpreadsheetApp.getUi().ButtonSet.OK);
}

/**
 * –£–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞ –∫–µ—à-–ø—Ä–æ–≥—Ä–µ–≤–∞
 */
function deleteWarmupTrigger() {
  const triggers = ScriptApp.getProjectTriggers();
  let deletedCount = 0;
  
  triggers.forEach(trigger => {
    if (trigger.getHandlerFunction() === 'warmupProductCache') {
      ScriptApp.deleteTrigger(trigger);
      deletedCount++;
    }
  });
  
  if (deletedCount > 0) {
    log(`[Warmup Trigger] üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ ${deletedCount} —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –∫–µ—à-–ø—Ä–æ–≥—Ä–µ–≤–∞`);
    SpreadsheetApp.getUi().alert('‚úÖ –£—Å–ø–µ—Ö', `–£–¥–∞–ª–µ–Ω–æ ${deletedCount} —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –Ω–æ—á–Ω–æ–≥–æ –∫–µ—à-–ø—Ä–æ–≥—Ä–µ–≤–∞.`, SpreadsheetApp.getUi().ButtonSet.OK);
  } else {
    SpreadsheetApp.getUi().alert('‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–¢—Ä–∏–≥–≥–µ—Ä—ã –Ω–æ—á–Ω–æ–≥–æ –∫–µ—à-–ø—Ä–æ–≥—Ä–µ–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.', SpreadsheetApp.getUi().ButtonSet.OK);
  }
}

// ============ –ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–´–ï –¢–†–ò–ì–ì–ï–†–´ –î–õ–Ø –ú–ê–ì–ê–ó–ò–ù–û–í ============

/**
 * üéØ –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê: –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
 * –ö–∞–∂–¥—ã–π –º–∞–≥–∞–∑–∏–Ω –ø–æ–ª—É—á–∞–µ—Ç —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∏–≥–≥–µ—Ä
 * Google Apps Script –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –¥–æ 30 —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
 */
function createPerStoreTriggers() {
  const ui = SpreadsheetApp.getUi();
  
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª
  const intervalResponse = ui.prompt('üéØ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã',
    '–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –∑–∞–ø—É—Å–∫–∞ –≤ –º–∏–Ω—É—Ç–∞—Ö (5, 10, 15, 30):', ui.ButtonSet.OK_CANCEL);
  
  if (intervalResponse.getSelectedButton() !== ui.Button.OK) {
    log('[Per-Store Triggers] –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
    return;
  }
  
  const interval = parseInt(intervalResponse.getResponseText());
  if (isNaN(interval) || interval < 1) {
    ui.alert('‚ùå –û—à–∏–±–∫–∞', '–ù–µ–≤–µ—Ä–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0.', ui.ButtonSet.OK);
    return;
  }
  
  log(`[Per-Store Triggers] üéØ –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º ${interval} –º–∏–Ω—É—Ç...`);
  
  const allStores = getStores();
  const activeStores = allStores.filter(store => store.isActive);
  
  if (activeStores.length === 0) {
    ui.alert('‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤.', ui.ButtonSet.OK);
    return;
  }
  
  log(`[Per-Store Triggers] üè™ –ù–∞–π–¥–µ–Ω–æ ${activeStores.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤`);
  
  // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã
  deletePerStoreTriggersInternal();
  
  let createdCount = 0;
  
  activeStores.forEach((store, index) => {
    try {
      // –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é-–æ–±–µ—Ä—Ç–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
      const functionName = `processStore_${store.id}`;
      
      // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π –º–µ–∂–¥—É –º–∞–≥–∞–∑–∏–Ω–∞–º–∏ –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏
      const offsetMinutes = index * 2; // –ö–∞–∂–¥—ã–π –º–∞–≥–∞–∑–∏–Ω –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π 2 –º–∏–Ω—É—Ç—ã
      
      ScriptApp.newTrigger(functionName)
        .timeBased()
        .everyMinutes(interval)
        .create();
      
      createdCount++;
      log(`[Per-Store Triggers] ‚úÖ [${index + 1}/${activeStores.length}] –°–æ–∑–¥–∞–Ω —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è "${store.name}" (—Ñ—É–Ω–∫—Ü–∏—è: ${functionName})`);
      
    } catch (e) {
      log(`[Per-Store Triggers] ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è "${store.name}": ${e.message}`);
    }
  });
  
  log(`[Per-Store Triggers] üéØ –ò–¢–û–ì–û: —Å–æ–∑–¥–∞–Ω–æ ${createdCount} —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤`);
  
  // –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏-–æ–±–µ—Ä—Ç–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
  savePerStoreFunctions(activeStores);
  
  ui.alert('‚úÖ –£—Å–ø–µ—Ö', 
    `–°–æ–∑–¥–∞–Ω–æ ${createdCount} –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤.\n\n` +
    `–ò–Ω—Ç–µ—Ä–≤–∞–ª: –∫–∞–∂–¥—ã–µ ${interval} –º–∏–Ω—É—Ç.\n\n` +
    `‚ö†Ô∏è –í–ê–ñ–ù–û: –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä —Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.`,
    ui.ButtonSet.OK);
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞–≥–∞–∑–∏–Ω–∞—Ö –¥–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤
 */
function savePerStoreFunctions(stores) {
  const props = PropertiesService.getScriptProperties();
  const storeMap = {};
  
  stores.forEach(store => {
    storeMap[`store_${store.id}`] = JSON.stringify(store);
  });
  
  props.setProperties(storeMap);
  log(`[Per-Store Triggers] üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${stores.length} –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –º–∞–≥–∞–∑–∏–Ω–æ–≤`);
}

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–¥–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –ø–æ ID
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º–∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞–º–∏
 */
function processSingleStoreById(storeId) {
  const devMode = isDevMode();
  log(`--- üéØ –ó–ê–ü–£–°–ö –û–ë–†–ê–ë–û–¢–ö–ò –ú–ê–ì–ê–ó–ò–ù–ê ID: ${storeId} (${devMode ? 'DEV' : 'PROD'}) ---`);
  
  const props = PropertiesService.getScriptProperties();
  const storeJson = props.getProperty(`store_${storeId}`);
  
  if (!storeJson) {
    log(`[Store ${storeId}] ‚ùå –û–®–ò–ë–ö–ê: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
    return;
  }
  
  try {
    const store = JSON.parse(storeJson);
    
    if (!store.isActive) {
      log(`[Store ${storeId}] ‚ö†Ô∏è –ú–∞–≥–∞–∑–∏–Ω "${store.name}" –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é`);
      return;
    }
    
    log(`[Store ${storeId}] üè™ –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞: ${store.name} [${store.marketplace}]`);
    processSingleStore(store, devMode);
    log(`[Store ${storeId}] ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞`);
    
  } catch (e) {
    log(`[Store ${storeId}] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${e.message}`);
  }
}

/**
 * –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function deletePerStoreTriggers() {
  const deletedCount = deletePerStoreTriggersInternal();
  
  const ui = SpreadsheetApp.getUi();
  if (deletedCount > 0) {
    ui.alert('‚úÖ –£—Å–ø–µ—Ö', `–£–¥–∞–ª–µ–Ω–æ ${deletedCount} –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤.`, ui.ButtonSet.OK);
  } else {
    ui.alert('‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –º–∞–≥–∞–∑–∏–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.', ui.ButtonSet.OK);
  }
}

/**
 * –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ñ—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤
 */
function deletePerStoreTriggersInternal() {
  const triggers = ScriptApp.getProjectTriggers();
  let deletedCount = 0;
  
  triggers.forEach(trigger => {
    const functionName = trigger.getHandlerFunction();
    // –£–¥–∞–ª—è–µ–º —Ç—Ä–∏–≥–≥–µ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å processStore_
    if (functionName.startsWith('processStore_')) {
      ScriptApp.deleteTrigger(trigger);
      deletedCount++;
    }
  });
  
  if (deletedCount > 0) {
    log(`[Per-Store Triggers] üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ ${deletedCount} –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤`);
  }
  
  return deletedCount;
}

// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–≤–∞–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
// –≠—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ createPerStoreTriggers()
// –ü—Ä–∏–º–µ—Ä: function processStore_1() { processSingleStoreById('1'); }
