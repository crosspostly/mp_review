/**
 * @file logger.gs
 * @description –ú–æ–¥—É–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è MP Review Manager
 * @version 2.0
 * @date 2025-10-26
 * 
 * –ê–†–•–ò–¢–ï–ö–¢–£–†–ê:
 * - –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã
 * - –†–∞–∑–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ª–æ–≥–æ–≤
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–æ—Ç–∞—Ü–∏—è –ª–æ–≥–æ–≤
 * - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ–Ω—Å–æ–ª–∏ –∏ Google Sheets
 */

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
 * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∞
 * @param {string} level - –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∞ (DEBUG, INFO, WARNING, ERROR, SUCCESS)
 * @param {string} category - –ö–∞—Ç–µ–≥–æ—Ä–∏—è –ª–æ–≥–∞ (SYSTEM, WB-API, OZON-API, etc.)
 * @param {Object} metadata - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ª–æ–≥–∞
 */
function log(message, level = LOG_CONFIG.LEVELS.INFO, category = LOG_CONFIG.CATEGORIES.SYSTEM, metadata = null) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    if (!message || typeof message !== 'string') {
      console.error('Logger: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∞');
      return;
    }
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    var formattedMessage = formatLogMessage(message, level, category, metadata);
    
    // –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å (–≤—Å–µ–≥–¥–∞)
    logToConsole(formattedMessage, level);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Google Sheets (—Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫)
    try {
      logToSheet(formattedMessage, level, category);
    } catch (sheetError) {
      console.error('Logger: –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ Sheets: ' + sheetError.message);
    }
    
  } catch (error) {
    console.error('Logger: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ' + error.message);
  }
}

/**
 * –ë—ã—Å—Ç—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π
 */
function logDebug(message, category = LOG_CONFIG.CATEGORIES.SYSTEM, metadata = null) {
  var envConfig = getEnvironmentConfig();
  if (envConfig.ENABLE_DETAILED_LOGGING) {
    log(message, LOG_CONFIG.LEVELS.DEBUG, category, metadata);
  }
}

function logInfo(message, category = LOG_CONFIG.CATEGORIES.SYSTEM, metadata = null) {
  log(message, LOG_CONFIG.LEVELS.INFO, category, metadata);
}

function logWarning(message, category = LOG_CONFIG.CATEGORIES.SYSTEM, metadata = null) {
  log(message, LOG_CONFIG.LEVELS.WARNING, category, metadata);
}

function logError(message, category = LOG_CONFIG.CATEGORIES.SYSTEM, metadata = null) {
  log(message, LOG_CONFIG.LEVELS.ERROR, category, metadata);
}

function logSuccess(message, category = LOG_CONFIG.CATEGORIES.SYSTEM, metadata = null) {
  log(message, LOG_CONFIG.LEVELS.SUCCESS, category, metadata);
}

/**
 * –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è API
 */
function logApiRequest(marketplace, endpoint, params = null) {
  var message = '–ó–∞–ø—Ä–æ—Å –∫ ' + marketplace + ' API: ' + endpoint;
  var category = marketplace === 'Wildberries' ? LOG_CONFIG.CATEGORIES.WB_API : LOG_CONFIG.CATEGORIES.OZON_API;
  logDebug(message, category, { endpoint, params });
}

function logApiResponse(marketplace, endpoint, responseCode, responseTime = null) {
  var message = '–û—Ç–≤–µ—Ç ' + marketplace + ' API: ' + endpoint + ' (HTTP ' + responseCode + ')';
  var category = marketplace === 'Wildberries' ? LOG_CONFIG.CATEGORIES.WB_API : LOG_CONFIG.CATEGORIES.OZON_API;
  var level = responseCode >= 200 && responseCode < 300 ? LOG_CONFIG.LEVELS.SUCCESS : LOG_CONFIG.LEVELS.ERROR;
  log(message, level, category, { endpoint, responseCode, responseTime });
}

function logApiError(marketplace, endpoint, error, statusCode = null) {
  var message = '–û—à–∏–±–∫–∞ ' + marketplace + ' API: ' + endpoint + ' - ' + error.message || error;
  var category = marketplace === 'Wildberries' ? LOG_CONFIG.CATEGORIES.WB_API : LOG_CONFIG.CATEGORIES.OZON_API;
  logError(message, category, { endpoint, error: error.message || error, statusCode });
}

/**
 * –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã
 */
function logTrigger(triggerName, message, level = LOG_CONFIG.LEVELS.INFO, metadata = null) {
  var formattedMessage = '[' + triggerName + '] ' + message;
  log(formattedMessage, level, LOG_CONFIG.CATEGORIES.TRIGGER, metadata);
}

function logCache(operation, storeId, message, level = LOG_CONFIG.LEVELS.INFO, metadata = null) {
  var formattedMessage = '[' + operation + '] ' + storeId + ': ' + message;
  log(formattedMessage, level, LOG_CONFIG.CATEGORIES.CACHE, metadata);
}

function logStore(storeId, message, level = LOG_CONFIG.LEVELS.INFO, metadata = null) {
  var formattedMessage = '[' + storeId + '] ' + message;
  log(formattedMessage, level, LOG_CONFIG.CATEGORIES.STORE, metadata);
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ª–æ–≥–∞
 */
function formatLogMessage(message, level, category, metadata) {
  var timestamp = Utilities.formatDate(new Date(), LOG_CONFIG.TIMEZONE, LOG_CONFIG.DATE_FORMAT);
  var emoji = getLogEmoji(level);
  
  var formattedMessage = '[' + timestamp + '] ' + emoji + ' [' + category + '] ' + message;
  
  if (metadata && Object.keys(metadata).length > 0) {
    formattedMessage += ' | ' + JSON.stringify(metadata);
  }
  
  return formattedMessage;
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –¥–ª—è —É—Ä–æ–≤–Ω—è –ª–æ–≥–∞
 */
function getLogEmoji(level) {
  switch (level) {
    case LOG_CONFIG.LEVELS.DEBUG: return 'üîç';
    case LOG_CONFIG.LEVELS.INFO: return '‚ÑπÔ∏è';
    case LOG_CONFIG.LEVELS.WARNING: return '‚ö†Ô∏è';
    case LOG_CONFIG.LEVELS.ERROR: return '‚ùå';
    case LOG_CONFIG.LEVELS.SUCCESS: return '‚úÖ';
    default: return 'üìù';
  }
}

/**
 * –í—ã–≤–æ–¥–∏—Ç –ª–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å Google Apps Script
 */
function logToConsole(message, level) {
  switch (level) {
    case LOG_CONFIG.LEVELS.ERROR:
      console.error(message);
      break;
    case LOG_CONFIG.LEVELS.WARNING:
      console.warn(message);
      break;
    case LOG_CONFIG.LEVELS.DEBUG:
      console.debug(message);
      break;
    default:
      console.log(message);
  }
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ª–æ–≥ –≤ Google Sheets
 */
function logToSheet(message, level, category) {
  try {
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var logSheet = ss.getSheetByName(CONFIG.SHEETS.LOGS);
    
    // –°–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!logSheet) {
      logSheet = ss.insertSheet(CONFIG.SHEETS.LOGS);
      initializeLogSheet(logSheet);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –ª–æ–≥–∞ –∏ –æ—á–∏—â–∞–µ–º –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    var currentRows = logSheet.getLastRow();
    if (currentRows > LOG_CONFIG.MAX_LOG_ROWS) {
      cleanupOldLogs(logSheet);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
    var timestamp = new Date();
    logSheet.appendRow([timestamp, level, category, message]);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –ª–∏—Å—Ç –ª–æ–≥–æ–≤: ' + error.message);
  }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ª–∏—Å—Ç –ª–æ–≥–æ–≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
 */
function initializeLogSheet(sheet) {
  var headers = ['–í—Ä–µ–º—è', '–£—Ä–æ–≤–µ–Ω—å', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è', '–°–æ–æ–±—â–µ–Ω–∏–µ'];
  sheet.getRange(1, 1, 1, headers.length).setValues([headers]);
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
  var headerRange = sheet.getRange(1, 1, 1, headers.length);
  headerRange.setFontWeight('bold');
  headerRange.setBackground('#f0f0f0');
  
  // –ê–≤—Ç–æ—à–∏—Ä–∏–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫
  sheet.autoResizeColumns(1, headers.length);
}

/**
 * –û—á–∏—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞
 */
function cleanupOldLogs(sheet) {
  try {
    var totalRows = sheet.getLastRow();
    var rowsToDelete = totalRows - LOG_CONFIG.CLEANUP_ROWS;
    
    if (rowsToDelete > 0) {
      // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å—Ç—Ä–æ–∫–∏ (–æ—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ + CLEANUP_ROWS –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π)
      sheet.deleteRows(2, rowsToDelete);
      console.log('Logger: –£–¥–∞–ª–µ–Ω–æ ' + rowsToDelete + ' —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ –ª–æ–≥–∞');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤: ' + error.message);
  }
}

// ============ PERFORMANCE TIMER –ö–õ–ê–°–° ============

/**
 * –ö–ª–∞—Å—Å –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π
 */
class PerformanceTimer {
  constructor(operationName = 'operation') {
    this.operationName = operationName;
    this.startTime = Date.now();
    this.endTime = null;
    
    logDebug('Timer started: ' + operationName, LOG_CONFIG.CATEGORIES.SYSTEM);
  }
  
  /**
   * –ó–∞–≤–µ—Ä—à–∞–µ—Ç –∏–∑–º–µ—Ä–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
   */
  finish(logLevel = LOG_CONFIG.LEVELS.DEBUG) {
    this.endTime = Date.now();
    var duration = this.getTotalTime();
    
    var message = 'Timer finished: ' + this.operationName + ' (' + duration + 'ms)';
    log(message, logLevel, LOG_CONFIG.CATEGORIES.SYSTEM, { 
      operation: this.operationName, 
      duration: duration 
    });
  }
  
  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –æ–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
   */
  getTotalTime() {
    var end = this.endTime || Date.now();
    return end - this.startTime;
  }
  
  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è
   */
  getElapsedTime() {
    return Date.now() - this.startTime;
  }
  
  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏ —Ç–∞–π–º–∞—É—Ç
   */
  isTimeout(timeoutMs) {
    return this.getElapsedTime() > timeoutMs;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤
 * @param {number} count - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
 * @param {string} level - –§–∏–ª—å—Ç—Ä –ø–æ —É—Ä–æ–≤–Ω—é (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 * @param {string} category - –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 * @returns {Array} –ú–∞—Å—Å–∏–≤ –∑–∞–ø–∏—Å–µ–π –ª–æ–≥–æ–≤
 */
function getRecentLogs(count = 100, level = null, category = null) {
  try {
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var logSheet = ss.getSheetByName(CONFIG.SHEETS.LOGS);
    
    if (!logSheet) {
      return [];
    }
    
    var totalRows = logSheet.getLastRow();
    if (totalRows <= 1) {
      return []; // –¢–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏
    var startRow = Math.max(2, totalRows - count + 1);
    var numRows = totalRows - startRow + 1;
    var data = logSheet.getRange(startRow, 1, numRows, 4).getValues();
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ —É—Ä–æ–≤–Ω—é –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –µ—Å–ª–∏ –∑–∞–¥–∞–Ω—ã
    var filteredData = data;
    if (level) {
      filteredData = filteredData.filter(function(row) { return row[1] === level; });
    }
    if (category) {
      filteredData = filteredData.filter(function(row) { return row[2] === category; });
    }
    
    return filteredData.reverse(); // –ù–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ –ø–µ—Ä–≤—ã–º–∏
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤: ' + error.message);
    return [];
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ª–æ–≥–æ–≤
 * @returns {Object} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —É—Ä–æ–≤–Ω—è–º –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
 */
function getLogStatistics() {
  try {
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var logSheet = ss.getSheetByName(CONFIG.SHEETS.LOGS);
    
    if (!logSheet) {
      return { levels: {}, categories: {}, total: 0 };
    }
    
    var totalRows = logSheet.getLastRow();
    if (totalRows <= 1) {
      return { levels: {}, categories: {}, total: 0 };
    }
    
    var data = logSheet.getRange(2, 1, totalRows - 1, 4).getValues();
    var stats = {
      levels: {},
      categories: {},
      total: data.length
    };
    
    for (var i = 0; i < data.length; i++) {
      var row = data[i];
      var level = row[1];
      var category = row[2];
      
      stats.levels[level] = (stats.levels[level] || 0) + 1;
      stats.categories[category] = (stats.categories[category] || 0) + 1;
    });
    
    return stats;
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ª–æ–≥–æ–≤: ' + error.message);
    return { levels: {}, categories: {}, total: 0, error: error.message };
  }
}

/**
 * –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç
 * @param {number} count - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
 * @returns {string} –õ–æ–≥–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
 */
function exportLogsAsText(count = 1000) {
  try {
    var logs = getRecentLogs(count);
    if (!logs.length) {
      return '–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã';
    }
    
    var textLogs = 'MP Review Manager - –≠–∫—Å–ø–æ—Ä—Ç –ª–æ–≥–æ–≤ (' + logs.length + ' –∑–∞–ø–∏—Å–µ–π)\n';
    textLogs += '='.repeat(80) + '\n\n';
    
    for (var i = 0; i < logs.length; i++) {
      var log = logs[i];
      var [timestamp, level, category, message] = log;
      var formattedTime = Utilities.formatDate(timestamp, LOG_CONFIG.TIMEZONE, LOG_CONFIG.DATE_FORMAT);
      textLogs += '[' + formattedTime + '] [' + level + '] [' + category + '] ' + message + '\n';
    });
    
    return textLogs;
    
  } catch (error) {
    return '–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –ª–æ–≥–æ–≤: ' + error.message;
  }
}
