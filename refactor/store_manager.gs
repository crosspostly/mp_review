/**
 * üîÑ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ù–ê–Ø –°–¢–ê–†–ê–Ø –†–ê–ë–û–ß–ê–Ø –°–ò–°–¢–ï–ú–ê –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ú–ê–ì–ê–ó–ò–ù–ê–ú–ò
 * 
 * –í–æ–∑–≤—Ä–∞—â–µ–Ω–∞ –∏–∑ code.gs –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
 * –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:
 * - –õ–∏—Å—Ç—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ –ù–ê–ó–í–ê–ù–ò–Æ –º–∞–≥–∞–∑–∏–Ω–∞, –∞ –Ω–µ ID
 * - –†–∞–±–æ—á–∏–µ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å" –∏ "–ó–∞–≥—Ä—É–∑–∏—Ç—å" —Å –ª–æ–≥–∞–º–∏
 * - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤
 * - –°—Ç–∞–±–∏–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –±–µ–∑ –∑–∞–≤–∏—Å–∞–Ω–∏–π
 */

// ============ –°–¢–ê–†–´–ï –†–ê–ë–û–ß–ò–ï –§–£–ù–ö–¶–ò–ò –ò–ó CODE.GS ============

function getStores() {
  const storesJson = PropertiesService.getUserProperties().getProperty(CONFIG.PROPERTIES_KEY);
  if (!storesJson) return [];
  const stores = JSON.parse(storesJson);
  return stores.filter(store => store && store.id).map(store => {
      if (typeof store.isActive === 'undefined') store.isActive = true;
      // Ensure settings object exists for backward compatibility
      if (!store.settings) store.settings = {};
      return store;
  });
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω—ã
 * @returns {Array<Object>} –ú–∞—Å—Å–∏–≤ –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function getActiveStores() {
  try {
    const allStores = getStores();
    const activeStores = allStores.filter(store => store.isActive === true);
    
    logInfo(`–ê–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤: ${activeStores.length} –∏–∑ ${allStores.length}`, LOG_CONFIG.CATEGORIES.STORE);
    return activeStores;
    
  } catch (error) {
    logError(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤: ${error.message}`, LOG_CONFIG.CATEGORIES.STORE);
    return [];
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –º–∞–≥–∞–∑–∏–Ω –ø–æ ID
 * @param {string} storeId - ID –º–∞–≥–∞–∑–∏–Ω–∞
 * @returns {Object|null} –û–±—ä–µ–∫—Ç –º–∞–≥–∞–∑–∏–Ω–∞ –∏–ª–∏ null
 */
function getStoreById(storeId) {
  try {
    if (!storeId) {
      logWarning('getStoreById: –Ω–µ —É–∫–∞–∑–∞–Ω ID –º–∞–≥–∞–∑–∏–Ω–∞', LOG_CONFIG.CATEGORIES.STORE);
      return null;
    }
    
    const stores = getStores();
    const store = stores.find(s => s.id === storeId);
    
    if (!store) {
      logWarning(`–ú–∞–≥–∞–∑–∏–Ω —Å ID ${storeId} –Ω–µ –Ω–∞–π–¥–µ–Ω`, LOG_CONFIG.CATEGORIES.STORE);
      return null;
    }
    
    logDebug(`–ù–∞–π–¥–µ–Ω –º–∞–≥–∞–∑–∏–Ω: ${store.name} (${storeId})`, LOG_CONFIG.CATEGORIES.STORE);
    return store;
    
  } catch (error) {
    logError(`–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞ ${storeId}: ${error.message}`, LOG_CONFIG.CATEGORIES.STORE);
    return null;
  }
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –º–∞–≥–∞–∑–∏–Ω (—Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π)
 * @param {Object} store - –û–±—ä–µ–∫—Ç –º–∞–≥–∞–∑–∏–Ω–∞
 * @returns {Array<Object>} –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function saveStore(store) {
  log(`–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞: ${store.name}${store.settings && store.settings.startDate ? ' (–¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ' + store.settings.startDate + ')' : ''}`);
  const stores = getStores();
  const storeIndex = stores.findIndex(s => s.id === store.id);
  
  if (typeof store.isActive === 'undefined') store.isActive = true;
  // Ensure settings object exists
  if (!store.settings) store.settings = {};
  
  // üöÄ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
  let shouldResetProgress = false;
  if (storeIndex > -1) {
    const oldStore = stores[storeIndex];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤–∞–∂–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫, –≤–ª–∏—è—é—â–∏—Ö –Ω–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏—é
    const oldStartDate = oldStore.settings?.startDate;
    const newStartDate = store.settings?.startDate;
    const oldIncludeAnswered = oldStore.settings?.includeAnswered;
    const newIncludeAnswered = store.settings?.includeAnswered;
    const oldSortOldestFirst = oldStore.settings?.sortOldestFirst;
    const newSortOldestFirst = store.settings?.sortOldestFirst;
    
    if (oldStartDate !== newStartDate) {
      log(`[${store.name}] üìÖ –ò–ó–ú–ï–ù–ï–ù–ê –¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø–æ–∏—Å–∫–∞: "${oldStartDate}" ‚Üí "${newStartDate}"`);
      shouldResetProgress = true;
    }
    
    if (oldIncludeAnswered !== newIncludeAnswered) {
      log(`[${store.name}] üîÑ –ò–ó–ú–ï–ù–ï–ù–ê –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è –æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö: ${oldIncludeAnswered} ‚Üí ${newIncludeAnswered}`);
      shouldResetProgress = true;
    }
    
    if (typeof oldSortOldestFirst !== 'undefined' && oldSortOldestFirst !== newSortOldestFirst) {
      log(`[${store.name}] üìä –ò–ó–ú–ï–ù–ï–ù–ê –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏: sortOldestFirst ${oldSortOldestFirst} ‚Üí ${newSortOldestFirst}`);
      shouldResetProgress = true;
    }
    
    stores[storeIndex] = store; 
  } else {
    store.id = store.id || new Date().getTime().toString(); 
    stores.push(store);
    shouldResetProgress = false; // –ù–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω - –Ω–µ—Ç —Å—Ç–∞—Ä–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞
  }
  
  // üöÄ –°–ë–†–ê–°–´–í–ê–ï–ú –ü–†–û–ì–†–ï–°–° –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
  if (shouldResetProgress) {
    resetStoreProgress(store.id);
    log(`[${store.name}] üîÑ –°–ë–†–û–®–ï–ù –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑-–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫`);
  }
  
  PropertiesService.getUserProperties().setProperty(CONFIG.PROPERTIES_KEY, JSON.stringify(stores));
  
  // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –°–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç —Å –ù–ê–ó–í–ê–ù–ò–ï–ú, –∞ –Ω–µ ID
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    let sheet = ss.getSheetByName(store.name); // ‚Üê –ü–û –ù–ê–ó–í–ê–ù–ò–Æ!
    
    if (!sheet) {
      sheet = ss.insertSheet(store.name); // ‚Üê –ü–û –ù–ê–ó–í–ê–ù–ò–Æ!
      sheet.getRange(1, 1, 1, CONFIG.HEADERS.length).setValues([CONFIG.HEADERS]);
      sheet.getRange(1, 1, 1, CONFIG.HEADERS.length).setFontWeight('bold');
      sheet.getRange(1, 1, 1, CONFIG.HEADERS.length).setBackground('#e8f0fe');
      log(`üìÑ –°–æ–∑–¥–∞–Ω –ª–∏—Å—Ç: "${store.name}"`);
    }
  } catch (e) {
    log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—Å—Ç–∞ –¥–ª—è ${store.name}: ${e.message}`);
  }
  
  return stores;
}

/**
 * –£–¥–∞–ª—è–µ—Ç –º–∞–≥–∞–∑–∏–Ω –∏–∑ —Å–∏—Å—Ç–µ–º—ã
 * @param {string} storeId - ID –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
 * @returns {boolean} –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏
 */
function deleteStore(storeId) {
  const timer = new PerformanceTimer('deleteStore');
  
  try {
    if (!storeId) {
      logError('deleteStore: –Ω–µ —É–∫–∞–∑–∞–Ω ID –º–∞–≥–∞–∑–∏–Ω–∞', LOG_CONFIG.CATEGORIES.STORE);
      timer.finish(LOG_CONFIG.LEVELS.ERROR);
      return false;
    }
    
    const stores = getStores();
    const storeIndex = stores.findIndex(s => s.id === storeId);
    
    if (storeIndex === -1) {
      logWarning(`–ú–∞–≥–∞–∑–∏–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω: ${storeId}`, LOG_CONFIG.CATEGORIES.STORE);
      timer.finish(LOG_CONFIG.LEVELS.WARNING);
      return false;
    }
    
    const storeName = stores[storeIndex].name;
    
    // –£–¥–∞–ª—è–µ–º –º–∞–≥–∞–∑–∏–Ω –∏–∑ –º–∞—Å—Å–∏–≤–∞
    stores.splice(storeIndex, 1);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ (–∏—Å–ø–æ–ª—å–∑—É–µ–º UserProperties –∫–∞–∫ –≤ —Å—Ç–∞—Ä–æ–π —Å–∏—Å—Ç–µ–º–µ)
    const props = PropertiesService.getUserProperties();
    props.setProperty(CONFIG.PROPERTIES_KEY, JSON.stringify(stores));
    
    // –û—á–∏—â–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    cleanupStoreData(storeId);
    
    logSuccess(`–ú–∞–≥–∞–∑–∏–Ω ${storeName} (${storeId}) —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω`, LOG_CONFIG.CATEGORIES.STORE);
    timer.finish(LOG_CONFIG.LEVELS.SUCCESS);
    
    return true;
    
  } catch (error) {
    logError(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ ${storeId}: ${error.message}`, LOG_CONFIG.CATEGORIES.STORE);
    timer.finish(LOG_CONFIG.LEVELS.ERROR);
    return false;
  }
}

/**
 * –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω–∞
 * @param {Object} store - –û–±—ä–µ–∫—Ç –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
 * @returns {Object} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ { isValid: boolean, errors: Array }
 */
function validateStore(store) {
  const errors = [];
  
  try {
    // –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    if (!store.name || typeof store.name !== 'string' || store.name.trim().length < 2) {
      errors.push('–ù–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞');
    }
    
    if (!store.marketplace || !['Wildberries', 'Ozon'].includes(store.marketplace)) {
      errors.push('–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å "Wildberries" –∏–ª–∏ "Ozon"');
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è credentials –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞
    if (store.marketplace === 'Wildberries') {
      if (!store.credentials?.apiKey || store.credentials.apiKey.length < 10) {
        errors.push('WB API –∫–ª—é—á –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤');
      }
    }
    
    if (store.marketplace === 'Ozon') {
      if (!store.credentials?.clientId || store.credentials.clientId.length < 3) {
        errors.push('Ozon Client ID –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω');
      }
      if (!store.credentials?.apiKey || store.credentials.apiKey.length < 10) {
        errors.push('Ozon API –∫–ª—é—á –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤');
      }
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    if (store.settings) {
      if (store.settings.startDate) {
        const startDate = new Date(store.settings.startDate);
        if (isNaN(startDate.getTime())) {
          errors.push('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞');
        }
      }
      
      if (store.settings.includeAnswered !== undefined && typeof store.settings.includeAnswered !== 'boolean') {
        errors.push('includeAnswered –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å boolean –∑–Ω–∞—á–µ–Ω–∏–µ–º');
      }
    }
    
    return {
      isValid: errors.length === 0,
      errors: errors
    };
    
  } catch (error) {
    logError(`–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞: ${error.message}`, LOG_CONFIG.CATEGORIES.STORE);
    return {
      isValid: false,
      errors: [`–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: ${error.message}`]
    };
  }
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
 * @param {string} marketplace - –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞
 * @returns {string} –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –º–∞–≥–∞–∑–∏–Ω–∞
 */
function generateStoreId(marketplace) {
  const prefix = marketplace === 'Wildberries' ? 'wb' : 'ozon';
  const timestamp = Date.now().toString().slice(-6); // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 6 —Ü–∏—Ñ—Ä timestamp
  const random = Math.floor(Math.random() * 100).toString().padStart(2, '0');
  
  return `${prefix}_${timestamp}_${random}`;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –ª–∏—Å—Ç –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ –≤ Google Sheets –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
 * @param {Object} store - –û–±—ä–µ–∫—Ç –º–∞–≥–∞–∑–∏–Ω–∞
 */
function createStoreSheetIfNotExists(store) {
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    let sheet = ss.getSheetByName(store.id);
    
    if (!sheet) {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ª–∏—Å—Ç
      sheet = ss.insertSheet(store.id);
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
      const headers = [
        'reviewId', 'createdDate', 'rating', 'text', 'product',
        'status', 'processedDate', 'answer', 'errorMsg'
      ];
      
      sheet.getRange(1, 1, 1, headers.length).setValues([headers]);
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
      const headerRange = sheet.getRange(1, 1, 1, headers.length);
      headerRange.setFontWeight('bold');
      headerRange.setBackground('#e8f0fe');
      
      // –ê–≤—Ç–æ—à–∏—Ä–∏–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫
      sheet.autoResizeColumns(1, headers.length);
      
      logSuccess(`–°–æ–∑–¥–∞–Ω –ª–∏—Å—Ç –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞: ${store.name} (${store.id})`, LOG_CONFIG.CATEGORIES.STORE);
    }
    
  } catch (error) {
    logError(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—Å—Ç–∞ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ ${store.id}: ${error.message}`, LOG_CONFIG.CATEGORIES.STORE);
  }
}

/**
 * –û—á–∏—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
 * @param {string} storeId - ID –º–∞–≥–∞–∑–∏–Ω–∞
 */
function cleanupStoreData(storeId) {
  try {
    const props = PropertiesService.getUserProperties();
    
    // –£–¥–∞–ª—è–µ–º –∫–µ—à –æ—Ç–∑—ã–≤–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞
    const cacheKey = `${CACHE_CONFIG.PREFIX_REVIEW_IDS}${storeId}`;
    props.deleteProperty(cacheKey);
    
    // –£–¥–∞–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –ø–æ–ª–æ—Å–∫–∏
    const stripeKey = `${CACHE_CONFIG.PREFIX_STRIPE_POSITION}${storeId}`;
    props.deleteProperty(stripeKey);
    
    // –£–¥–∞–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –º–∞–≥–∞–∑–∏–Ω–∞
    const progressKey = `${CACHE_CONFIG.PREFIX_STORE_PROGRESS}${storeId}`;
    props.deleteProperty(progressKey);
    
    logInfo(`–û—á–∏—â–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞: ${storeId}`, LOG_CONFIG.CATEGORIES.STORE);
    
  } catch (error) {
    logError(`–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–∞ ${storeId}: ${error.message}`, LOG_CONFIG.CATEGORIES.STORE);
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º
 * @returns {Object} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function getStoreStatistics() {
  try {
    const stores = getStores();
    const activeStores = stores.filter(s => s.isActive);
    
    const byMarketplace = stores.reduce((acc, store) => {
      acc[store.marketplace] = (acc[store.marketplace] || 0) + 1;
      return acc;
    }, {});
    
    const stats = {
      total: stores.length,
      active: activeStores.length,
      inactive: stores.length - activeStores.length,
      byMarketplace: byMarketplace
    };
    
    logDebug('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –ø–æ–ª—É—á–µ–Ω–∞', LOG_CONFIG.CATEGORIES.STORE, stats);
    return stats;
    
  } catch (error) {
    logError(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤: ${error.message}`, LOG_CONFIG.CATEGORIES.STORE);
    return { total: 0, active: 0, inactive: 0, byMarketplace: {}, error: error.message };
  }
}

// –£–ë–†–ê–ù–û: –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ testStoreConnection - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–µ—Ä—Å–∏—è –∏–∑ main.gs

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WB API
 * @param {Object} store - –û–±—ä–µ–∫—Ç –º–∞–≥–∞–∑–∏–Ω–∞
 * @returns {Object} –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
function testWbConnection(store) {
  try {
    if (!store.credentials?.apiKey) {
      return { success: false, error: '–ù–µ —É–∫–∞–∑–∞–Ω API –∫–ª—é—á' };
    }
    
    // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –∑–∞–ø—Ä–æ—Å –æ—Ç–∑—ã–≤–æ–≤ —Å –ª–∏–º–∏—Ç–æ–º 1
    const url = `${WB_CONFIG.API_BASE_URL}${WB_CONFIG.ENDPOINTS.GET_FEEDBACKS}?take=1&skip=0`;
    
    const response = UrlFetchApp.fetch(url, {
      method: 'GET',
      headers: {
        'Authorization': store.credentials.apiKey
      },
      muteHttpExceptions: true
    });
    
    const responseCode = response.getResponseCode();
    
    if (responseCode === 200) {
      return { success: true, message: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ' };
    } else {
      return { 
        success: false, 
        error: `HTTP ${responseCode}: ${response.getContentText()}` 
      };
    }
    
  } catch (error) {
    return { 
      success: false, 
      error: error.message 
    };
  }
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Ozon API
 * @param {Object} store - –û–±—ä–µ–∫—Ç –º–∞–≥–∞–∑–∏–Ω–∞
 * @returns {Object} –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
function testOzonConnection(store) {
  try {
    if (!store.credentials?.clientId || !store.credentials?.apiKey) {
      return { success: false, error: '–ù–µ —É–∫–∞–∑–∞–Ω—ã Client ID –∏–ª–∏ API –∫–ª—é—á' };
    }
    
    // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –∑–∞–ø—Ä–æ—Å –æ—Ç–∑—ã–≤–æ–≤ —Å –ª–∏–º–∏—Ç–æ–º 1
    const url = `${OZON_CONFIG.API_BASE_URL}${OZON_CONFIG.ENDPOINTS.GET_FEEDBACKS}`;
    
    const payload = {
      limit: 1,
      with_photos: false
    };
    
    const response = UrlFetchApp.fetch(url, {
      method: 'POST',
      headers: {
        'Client-Id': store.credentials.clientId,
        'Api-Key': store.credentials.apiKey,
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify(payload),
      muteHttpExceptions: true,
      followRedirects: true
    });
    
    const responseCode = response.getResponseCode();
    
    if (responseCode === 200) {
      return { success: true, message: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ' };
    } else {
      return { 
        success: false, 
        error: `HTTP ${responseCode}: ${response.getContentText()}` 
      };
    }
    
  } catch (error) {
    return { 
      success: false, 
      error: error.message 
    };
  }
}

/**
 * –ê–ª–∏–∞—Å –¥–ª—è getStores() - –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å UI
 * @returns {Array} –í—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã
 */
function getAllStores() {
  return getStores();
}

/**
 * –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ (–±–µ–∑ API –∫–ª—é—á–µ–π)
 * @returns {string} JSON –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function exportStoreConfigs() {
  try {
    const stores = getStores();
    
    // –£–±–∏—Ä–∞–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
    const safeStores = stores.map(store => ({
      id: store.id,
      name: store.name,
      marketplace: store.marketplace,
      isActive: store.isActive,
      settings: store.settings,
      // credentials —Å–∫—Ä—ã—Ç—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
      hasCredentials: !!(store.credentials?.apiKey)
    }));
    
    log(`–≠–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ${safeStores.length} –º–∞–≥–∞–∑–∏–Ω–æ–≤`);
    
    return JSON.stringify(safeStores, null, 2);
    
  } catch (error) {
    log(`–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –º–∞–≥–∞–∑–∏–Ω–æ–≤: ${error.message}`);
    return `{"error": "${error.message}"}`;
  }
}

// ============ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò –ò–ó CODE.GS ============

// –£–ë–†–ê–ù–û: –î—É–±–ª–∏—Ä—É—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è testStoreConnection - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–µ—Ä—Å–∏—è –∏–∑ main.gs

/**
 * ‚úÖ –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è WB Content API
 */
function testWbContentApiAccess(apiKey) {
  try {
    const url = 'https://suppliers-api.wildberries.ru/content/v2/cards/cursor/list';
    const payload = { limit: 1 }; // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç-–∑–∞–ø—Ä–æ—Å
    
    const response = UrlFetchApp.fetch(url, {
      method: 'POST',
      headers: { 
        'Authorization': apiKey,
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify(payload),
      muteHttpExceptions: true
    });
    
    const code = response.getResponseCode();
    log(`[Content API Test] –°—Ç–∞—Ç—É—Å: ${code}`);
    
    return code === 200;
  } catch (e) {
    log(`[Content API Test] –û—à–∏–±–∫–∞: ${e.message}`);
    return false;
  }
}

/**
 * ‚úÖ –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏–∑ code.gs
 */
function resetStoreProgress(storeId) {
  try {
    const props = PropertiesService.getUserProperties();
    const progressKey = `${CONFIG.PROGRESS_KEY}_${storeId}`;
    props.deleteProperty(progressKey);
    log(`[Progress] üîÑ –°–±—Ä–æ—à–µ–Ω –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞: ${storeId}`);
    return true;
  } catch (e) {
    log(`[Progress] ‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è ${storeId}: ${e.message}`);
    return false;
  }
}
