/**
 * üß™ –¢–ï–°–¢–´ –¢–û–õ–¨–ö–û –î–õ–Ø WB API v2
 * 
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ—Å—Ç—ã —Ç–æ–ª—å–∫–æ –¥–ª—è WB API v2,
 * —Ç–∞–∫ –∫–∞–∫ v2 –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω—è–µ—Ç v1.
 */

/**
 * üß™ –¢–µ—Å—Ç WB API v2 - –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤
 */
function testWbApiV2GetFeedbacks() {
  logDebug('üß™ –¢–µ—Å—Ç: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ WB API v2', 'WB-V2-TEST');
  
  try {
    // –ú–æ–∫–∞–µ–º UrlFetchApp
    const originalUrlFetchApp = UrlFetchApp;
    global.UrlFetchApp = {
      fetch: function(url, options) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è v2 endpoint
        if (!url.includes('/api/v2/feedbacks')) {
          throw new Error('–î–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è WB API v2 endpoint');
        }
        
        return {
          getResponseCode: function() { return 200; },
          getContentText: function() { 
            return JSON.stringify({
              data: {
                feedbacks: [
                  {
                    id: 'wb-v2-test-1',
                    productValuation: 5,
                    text: '–û—Ç–ª–∏—á–Ω—ã–π —Ç–æ–≤–∞—Ä! –†–µ–∫–æ–º–µ–Ω–¥—É—é!',
                    createdDate: '2024-01-15T10:00:00Z',
                    isAnswered: false,
                    productDetails: {
                      nmId: 12345,
                      productName: '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä WB v2',
                      supplierArticle: 'WB-12345'
                    }
                  }
                ]
              }
            });
          }
        };
      }
    };
    
    try {
      const feedbacks = getWbFeedbacks('test-api-key', false, MOCK_STORE);
      
      if (!Array.isArray(feedbacks)) {
        throw new Error('getWbFeedbacks –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –º–∞—Å—Å–∏–≤');
      }
      
      if (feedbacks.length === 0) {
        throw new Error('getWbFeedbacks –Ω–µ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–∑—ã–≤–∞
      const feedback = feedbacks[0];
      if (!feedback.id || !feedback.text || !feedback.rating) {
        throw new Error('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–∑—ã–≤–∞ WB v2');
      }
      
      logSuccess('‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ WB API v2 —Ä–∞–±–æ—Ç–∞–µ—Ç', 'WB-V2-TEST');
      return true;
      
    } finally {
      global.UrlFetchApp = originalUrlFetchApp;
    }
    
  } catch (error) {
    logError(`‚ùå –¢–µ—Å—Ç WB API v2 –ø—Ä–æ–≤–∞–ª–µ–Ω: ${error.message}`, 'WB-V2-TEST');
    return false;
  }
}

/**
 * üß™ –¢–µ—Å—Ç WB API v2 - –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∞—Ç–µ
 */
function testWbApiV2DateFiltering() {
  logDebug('üß™ –¢–µ—Å—Ç: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∞—Ç–µ WB API v2', 'WB-V2-TEST');
  
  try {
    const store = {
      id: 'test-store',
      name: 'Test Store',
      settings: {
        startDate: '2024-01-01'
      }
    };
    
    // –ú–æ–∫–∞–µ–º UrlFetchApp
    const originalUrlFetchApp = UrlFetchApp;
    global.UrlFetchApp = {
      fetch: function(url, options) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ URL –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä dateFrom
        if (!url.includes('dateFrom=2024-01-01')) {
          throw new Error('URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä dateFrom –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–∞—Ç–µ');
        }
        
        return {
          getResponseCode: function() { return 200; },
          getContentText: function() { 
            return JSON.stringify({
              data: {
                feedbacks: []
              }
            });
          }
        };
      }
    };
    
    try {
      const feedbacks = getWbFeedbacks('test-api-key', false, store);
      
      logSuccess('‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∞—Ç–µ WB API v2 —Ä–∞–±–æ—Ç–∞–µ—Ç', 'WB-V2-TEST');
      return true;
      
    } finally {
      global.UrlFetchApp = originalUrlFetchApp;
    }
    
  } catch (error) {
    logError(`‚ùå –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–∞—Ç–µ WB API v2 –ø—Ä–æ–≤–∞–ª–µ–Ω: ${error.message}`, 'WB-V2-TEST');
    return false;
  }
}

/**
 * üß™ –¢–µ—Å—Ç WB API v2 - –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
 */
function testWbApiV2RatingFiltering() {
  logDebug('üß™ –¢–µ—Å—Ç: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É WB API v2', 'WB-V2-TEST');
  
  try {
    const store = {
      id: 'test-store',
      name: 'Test Store',
      settings: {
        minRating: 4
      }
    };
    
    // –ú–æ–∫–∞–µ–º UrlFetchApp
    const originalUrlFetchApp = UrlFetchApp;
    global.UrlFetchApp = {
      fetch: function(url, options) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ URL –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä valuation
        if (!url.includes('valuation=4')) {
          throw new Error('URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä valuation –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É');
        }
        
        return {
          getResponseCode: function() { return 200; },
          getContentText: function() { 
            return JSON.stringify({
              data: {
                feedbacks: []
              }
            });
          }
        };
      }
    };
    
    try {
      const feedbacks = getWbFeedbacks('test-api-key', false, store);
      
      logSuccess('‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É WB API v2 —Ä–∞–±–æ—Ç–∞–µ—Ç', 'WB-V2-TEST');
      return true;
      
    } finally {
      global.UrlFetchApp = originalUrlFetchApp;
    }
    
  } catch (error) {
    logError(`‚ùå –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É WB API v2 –ø—Ä–æ–≤–∞–ª–µ–Ω: ${error.message}`, 'WB-V2-TEST');
    return false;
  }
}

/**
 * üß™ –¢–µ—Å—Ç WB API v2 - –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–æ–≤–∞—Ä—É
 */
function testWbApiV2ProductFiltering() {
  logDebug('üß™ –¢–µ—Å—Ç: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–æ–≤–∞—Ä—É WB API v2', 'WB-V2-TEST');
  
  try {
    const store = {
      id: 'test-store',
      name: 'Test Store',
      settings: {
        nmId: 12345
      }
    };
    
    // –ú–æ–∫–∞–µ–º UrlFetchApp
    const originalUrlFetchApp = UrlFetchApp;
    global.UrlFetchApp = {
      fetch: function(url, options) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ URL –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä nmId
        if (!url.includes('nmId=12345')) {
          throw new Error('URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä nmId –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ç–æ–≤–∞—Ä—É');
        }
        
        return {
          getResponseCode: function() { return 200; },
          getContentText: function() { 
            return JSON.stringify({
              data: {
                feedbacks: []
              }
            });
          }
        };
      }
    };
    
    try {
      const feedbacks = getWbFeedbacks('test-api-key', false, store);
      
      logSuccess('‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–æ–≤–∞—Ä—É WB API v2 —Ä–∞–±–æ—Ç–∞–µ—Ç', 'WB-V2-TEST');
      return true;
      
    } finally {
      global.UrlFetchApp = originalUrlFetchApp;
    }
    
  } catch (error) {
    logError(`‚ùå –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ç–æ–≤–∞—Ä—É WB API v2 –ø—Ä–æ–≤–∞–ª–µ–Ω: ${error.message}`, 'WB-V2-TEST');
    return false;
  }
}

/**
 * üß™ –¢–µ—Å—Ç WB API v2 - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
 */
function testWbApiV2ErrorHandling() {
  logDebug('üß™ –¢–µ—Å—Ç: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ WB API v2', 'WB-V2-TEST');
  
  try {
    // –ú–æ–∫–∞–µ–º UrlFetchApp –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –æ—à–∏–±–∫–∏
    const originalUrlFetchApp = UrlFetchApp;
    global.UrlFetchApp = {
      fetch: function(url, options) {
        return {
          getResponseCode: function() { return 401; },
          getContentText: function() { 
            return JSON.stringify({ error: 'Unauthorized' });
          }
        };
      }
    };
    
    try {
      const feedbacks = getWbFeedbacks('invalid-key', false, null);
      
      // –ü—Ä–∏ –æ—à–∏–±–∫–µ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
      if (!Array.isArray(feedbacks)) {
        throw new Error('–ü—Ä–∏ –æ—à–∏–±–∫–µ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –º–∞—Å—Å–∏–≤');
      }
      
      logSuccess('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ WB API v2 —Ä–∞–±–æ—Ç–∞–µ—Ç', 'WB-V2-TEST');
      return true;
      
    } finally {
      global.UrlFetchApp = originalUrlFetchApp;
    }
    
  } catch (error) {
    logError(`‚ùå –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ WB API v2 –ø—Ä–æ–≤–∞–ª–µ–Ω: ${error.message}`, 'WB-V2-TEST');
    return false;
  }
}

/**
 * üß™ –¢–µ—Å—Ç WB API v2 - –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
 */
function testWbApiV2SendAnswer() {
  logDebug('üß™ –¢–µ—Å—Ç: –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ WB API v2', 'WB-V2-TEST');
  
  try {
    // –ú–æ–∫–∞–µ–º UrlFetchApp
    const originalUrlFetchApp = UrlFetchApp;
    global.UrlFetchApp = {
      fetch: function(url, options) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è v2 endpoint –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞
        if (!url.includes('/api/v2/feedbacks/') || !url.includes('/answer')) {
          throw new Error('–î–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è WB API v2 endpoint –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞');
        }
        
        return {
          getResponseCode: function() { return 200; },
          getContentText: function() { 
            return JSON.stringify({ success: true });
          }
        };
      }
    };
    
    try {
      const result = sendWbFeedbackAnswer('wb-test-1', '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!', 'test-api-key');
      
      if (!result || !result.success) {
        throw new Error('sendWbFeedbackAnswer –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç');
      }
      
      logSuccess('‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ WB API v2 —Ä–∞–±–æ—Ç–∞–µ—Ç', 'WB-V2-TEST');
      return true;
      
    } finally {
      global.UrlFetchApp = originalUrlFetchApp;
    }
    
  } catch (error) {
    logError(`‚ùå –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ WB API v2 –ø—Ä–æ–≤–∞–ª–µ–Ω: ${error.message}`, 'WB-V2-TEST');
    return false;
  }
}

/**
 * üß™ –¢–µ—Å—Ç WB API v2 - –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
 */
function testWbApiV2Performance() {
  logDebug('üß™ –¢–µ—Å—Ç: –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å WB API v2', 'WB-V2-TEST');
  
  try {
    const startTime = Date.now();
    
    // –ú–æ–∫–∞–µ–º UrlFetchApp
    const originalUrlFetchApp = UrlFetchApp;
    global.UrlFetchApp = {
      fetch: function(url, options) {
        return {
          getResponseCode: function() { return 200; },
          getContentText: function() { 
            return JSON.stringify({
              data: {
                feedbacks: Array(100).fill().map((_, i) => ({
                  id: `wb-v2-test-${i}`,
                  productValuation: 5,
                  text: `Test feedback ${i}`,
                  createdDate: new Date().toISOString(),
                  isAnswered: false
                }))
              }
            });
          }
        };
      }
    };
    
    try {
      const feedbacks = getWbFeedbacks('test-api-key', false, null);
      
      const endTime = Date.now();
      const duration = endTime - startTime;
      
      logDebug(`‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${duration}–º—Å`, 'WB-V2-TEST');
      
      if (duration > 1000) {
        logWarning('‚ö†Ô∏è –ú–µ–¥–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å WB API v2', 'WB-V2-TEST');
        return false;
      } else {
        logSuccess('‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å WB API v2 –≤ –Ω–æ—Ä–º–µ', 'WB-V2-TEST');
        return true;
      }
      
    } finally {
      global.UrlFetchApp = originalUrlFetchApp;
    }
    
  } catch (error) {
    logError(`‚ùå –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ WB API v2 –ø—Ä–æ–≤–∞–ª–µ–Ω: ${error.message}`, 'WB-V2-TEST');
    return false;
  }
}

/**
 * üöÄ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ WB API v2
 */
function runWbApiV2Tests() {
  log('üß™ ===== –¢–ï–°–¢–´ WB API v2 =====', 'INFO', 'WB-V2-TEST-RUNNER');
  
  const results = {
    total: 0,
    passed: 0,
    failed: 0,
    errors: []
  };
  
  const testFunctions = [
    { name: '–ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤', test: testWbApiV2GetFeedbacks },
    { name: '–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∞—Ç–µ', test: testWbApiV2DateFiltering },
    { name: '–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', test: testWbApiV2RatingFiltering },
    { name: '–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–æ–≤–∞—Ä—É', test: testWbApiV2ProductFiltering },
    { name: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫', test: testWbApiV2ErrorHandling },
    { name: '–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞', test: testWbApiV2SendAnswer },
    { name: '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', test: testWbApiV2Performance }
  ];
  
  for (const test of testFunctions) {
    results.total++;
    log(`üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: ${test.name}`, 'INFO', 'WB-V2-TEST-RUNNER');
    
    try {
      const success = test.test();
      if (success) {
        results.passed++;
        logSuccess(`‚úÖ ${test.name} - –ü–†–û–ô–î–ï–ù`, 'WB-V2-TEST-RUNNER');
      } else {
        results.failed++;
        logError(`‚ùå ${test.name} - –ü–†–û–í–ê–õ–ï–ù`, 'WB-V2-TEST-RUNNER');
      }
    } catch (error) {
      results.failed++;
      results.errors.push(`${test.name}: ${error.message}`);
      logError(`‚ùå ${test.name} - –û–®–ò–ë–ö–ê: ${error.message}`, 'WB-V2-TEST-RUNNER');
    }
  }
  
  // –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  log('üß™ ===== –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø WB API v2 =====', 'INFO', 'WB-V2-TEST-RUNNER');
  log(`üìä –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${results.total}`, 'INFO', 'WB-V2-TEST-RUNNER');
  log(`‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${results.passed}`, 'SUCCESS', 'WB-V2-TEST-RUNNER');
  log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${results.failed}`, 'ERROR', 'WB-V2-TEST-RUNNER');
  
  if (results.errors.length > 0) {
    log('üîç –û—à–∏–±–∫–∏:', 'WARNING', 'WB-V2-TEST-RUNNER');
    results.errors.forEach(error => {
      log(`  - ${error}`, 'ERROR', 'WB-V2-TEST-RUNNER');
    });
  }
  
  const successRate = Math.round((results.passed / results.total) * 100);
  log(`üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${successRate}%`, 'INFO', 'WB-V2-TEST-RUNNER');
  
  if (successRate === 100) {
    logSuccess('üéâ –í–°–ï –¢–ï–°–¢–´ WB API v2 –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!', 'WB-V2-TEST-RUNNER');
    } else if (successRate >= 80) {
    logWarning(`‚ö†Ô∏è –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤ WB API v2 –ø—Ä–æ–π–¥–µ–Ω–æ (${successRate}%), —Ç—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ${results.failed} —Ç–µ—Å—Ç–æ–≤`, 'WB-V2-TEST-RUNNER');
    } else {
      logError(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –æ—à–∏–±–æ–∫ WB API v2 (${successRate}%), —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–µ—Ä—å–µ–∑–Ω–∞—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞`, 'WB-V2-TEST-RUNNER');
    }
  
  return results;
}