/**
 * @file ozon_functions.gs  
 * @description –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Ozon API
 * –†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –æ—à–∏–±–∫–∏ 422 "Invalid request" –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–∞–≥–∏–Ω–∞—Ü–∏—é
 */

// ============ OZON API CONFIGURATION ============
const OZON_CONFIG = {
  MARKETPLACE_NAME: 'Ozon',
  MARKETPLACE_CODE: 'OZON',
  API_BASE_URL: 'https://api-seller.ozon.ru/v1',
  ENDPOINTS: {
    GET_REVIEWS: '/review/list',
    SEND_COMMENT: '/review/comment/create'
  },
  API_LIMITS: {
    MAX_LIMIT: 100,          // –†–ï–ê–õ–¨–ù–´–ô –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç Ozon API (–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ)
    MIN_LIMIT: 20,           // –†–ï–ê–õ–¨–ù–´–ô –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç Ozon API
    DEFAULT_LIMIT: 100,      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç
    RECOMMENDED_LIMIT: 100,  // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π = –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    PAGINATION_STEP: 100     // –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã - –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∞–∫—Å–∏–º—É–º
  },
  PAGINATION: {
    ENABLED: true,           // Ozon API –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏—é —á–µ—Ä–µ–∑ last_id
    TYPE: 'last_id_based'    // –ò—Å–ø–æ–ª—å–∑—É–µ–º last_id –≤–º–µ—Å—Ç–æ offset
  },
  RATE_LIMITS: {
    REQUESTS_PER_MINUTE: 100,       // –ú–∞–∫—Å–∏–º—É–º –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É (–≤—ã—à–µ —á–µ–º WB)
    DELAY_BETWEEN_REQUESTS: 600,    // –ú–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (–±—ã—Å—Ç—Ä–µ–µ WB)
    BURST_LIMIT: 20,                // –ú–∞–∫—Å–∏–º—É–º –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–¥—Ä—è–¥ (–±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏)
    BURST_DELAY: 50,                // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ burst —Ä–µ–∂–∏–º–µ (–º—Å)
    RECOVERY_DELAY: 3000            // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –∏—Å—á–µ—Ä–ø–∞–Ω–∏—è burst –ª–∏–º–∏—Ç–∞ (–º—Å)
  },
  BATCH_PROCESSING: {
    ENABLED: false,                 // Ozon API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç batch –æ—Ç–ø—Ä–∞–≤–∫—É
    ALTERNATIVE: 'sequential_with_smart_throttling' // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å —É–º–Ω—ã–º throttling
  },
  WEBHOOK: {
    SUPPORTED: false,               // Ozon API webhook —Ç—Ä–µ–±—É–µ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    ALTERNATIVE: 'intelligent_polling' // –£–º–Ω—ã–π polling —Å timestamp filtering
  },
  RATING_FIELDS: {
    REVIEW_RATING: 'rating'
  },
  REVIEW_STATUSES: {
    UNPROCESSED: 'UNPROCESSED',
    PROCESSED: 'PROCESSED',
    NEW: 'NEW',
    PENDING: 'PENDING',
    MODERATED: 'MODERATED'
  },
  REQUIRED_TEXT_FIELDS: ['text'], // –ü–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–∫—Å—Ç
  PRODUCT_URL_TEMPLATE: 'https://www.ozon.ru/product/{sku}'
};

/**
 * üöÄ –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ Ozon —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∑–∞–ø—Ä–æ—Å–∞
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫—É 422 "Invalid request" –ø—É—Ç–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞
 * @param {string} clientId - Ozon Client ID
 * @param {string} apiKey - Ozon API Key  
 * @param {boolean} includeAnswered - –í–∫–ª—é—á–∞—Ç—å –ª–∏ –æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
 * @param {Object} store - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞
 * @returns {Array} –í—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –æ—Ç–∑—ã–≤—ã
 */
function getOzonFeedbacksFixed(clientId, apiKey, includeAnswered, store) {
    log(`[Ozon] üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –≤–µ—Ä—Å–∏—è API (includeAnswered=${includeAnswered})`);
    
    const url = 'https://api-seller.ozon.ru/v1/review/list';
    
    let allReviews = [];
    let lastId = "";
    let hasNext = true;
    let pageNumber = 1;
    const limit = OZON_CONFIG.API_LIMITS.MAX_LIMIT; // 100 - –º–∞–∫—Å–∏–º—É–º
    const maxPages = 15; // –õ–∏–º–∏—Ç —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ç–∞–π–º–∞—É—Ç–∞
    const startTime = Date.now();
    const maxExecutionTime = 4 * 60 * 1000; // 4 –º–∏–Ω—É—Ç—ã –º–∞–∫—Å–∏–º—É–º
    
    // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ê –±–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Ozon API
    let basePayload = {
        limit: limit,
        // ‚ùå –£–î–ê–õ–ï–ù–û: has_text - —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ API
        // filter: { has_text: true },
        sort: {
            type: 'CREATED_AT',  // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–ª–µ
            order: 'DESC'        // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: order –≤–º–µ—Å—Ç–æ direction  
        }
        // ‚ùå –£–î–ê–õ–ï–ù–û: filter –æ–±—ä–µ–∫—Ç –Ω–∞ –≤–µ—Ä—Ö–Ω–µ–º —É—Ä–æ–≤–Ω–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –æ—Ç–¥–µ–ª—å–Ω–æ
    };
    
    // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    if (includeAnswered) {
        // –ü–æ–ª—É—á–∞–µ–º –í–°–ï –æ—Ç–∑—ã–≤—ã (–Ω–µ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ has_answer)
        log(`[Ozon] üîÑ –†–µ–∂–∏–º: –í–°–ï –æ—Ç–∑—ã–≤—ã (–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ + –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ)`);
        // –ù–µ –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä has_answer
    } else {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
        basePayload.filter = {
            has_answer: false
        };
        log(`[Ozon] üéØ –†–µ–∂–∏–º: —Ç–æ–ª—å–∫–æ –ù–ï–û–¢–í–ï–ß–ï–ù–ù–´–ï –æ—Ç–∑—ã–≤—ã`);
    }

    // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù —Ñ–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–∞–≥–∞–∑–∏–Ω–∞
    if (store && store.settings && store.settings.startDate) {
        const startDate = store.settings.startDate;
        const today = new Date().toISOString().split('T')[0];
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
        if (!basePayload.filter) basePayload.filter = {};
        basePayload.filter.date = {
            from: formatDateForOzon(startDate),
            to: formatDateForOzon(today)
        };
        
        log(`[Ozon] üóìÔ∏è –§–∏–ª—å—Ç—Ä –¥–∞—Ç: ${startDate} - ${today}`);
    } else {
        log(`[Ozon] üóìÔ∏è –§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ –ù–ï –ø—Ä–∏–º–µ–Ω–µ–Ω - –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ—Ç–∑—ã–≤—ã`);
    }
    
    // ‚úÖ –ì–õ–ê–í–ù–´–ô –¶–ò–ö–õ –ü–ê–ì–ò–ù–ê–¶–ò–ò —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    while (hasNext && pageNumber <= maxPages) {
        // üö® –ö–û–ù–¢–†–û–õ–¨ –í–†–ï–ú–ï–ù–ò –í–´–ü–û–õ–ù–ï–ù–ò–Ø
        const elapsedTime = Date.now() - startTime;
        if (elapsedTime > maxExecutionTime) {
            log(`[Ozon] ‚è±Ô∏è –û–°–¢–ê–ù–û–í–ö–ê –ø–æ –≤—Ä–µ–º–µ–Ω–∏: ${Math.round(elapsedTime/1000)} —Å–µ–∫`);
            break;
        }
        
        log(`[Ozon] üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber} (last_id: "${lastId}")...`);
        
        const payload = {
            ...basePayload,
            last_id: lastId  // ‚úÖ –ö–õ–Æ–ß–ï–í–û–ï: –∏—Å–ø–æ–ª—å–∑—É–µ–º last_id –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
        };
        
        // üîç –î–ï–¢–ê–õ–¨–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ó–ê–ü–†–û–°–ê –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        if (isDevMode() || pageNumber <= 2) {
            log(`[Ozon DEBUG] Payload —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber}: ${JSON.stringify(payload, null, 2)}`);
        }
        
        try {
            const response = UrlFetchApp.fetch(url, {
                method: 'POST',
                headers: { 
                    'Client-Id': clientId, 
                    'Api-Key': apiKey,
                    'Content-Type': 'application/json'
                },
                payload: JSON.stringify(payload),
                muteHttpExceptions: true
            });
            
            const responseCode = response.getResponseCode();
            const responseBody = response.getContentText();
            
            log(`[Ozon] üåê –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber}: –∫–æ–¥ ${responseCode}, —Ä–∞–∑–º–µ—Ä ${responseBody.length} —Å–∏–º–≤–æ–ª–æ–≤`);
            
            // ‚úÖ –î–ï–¢–ê–õ–¨–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö
            if (responseCode !== 200) {
                log(`[Ozon] ‚ùå –û–®–ò–ë–ö–ê –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${pageNumber}: –ö–æ–¥ ${responseCode}`);
                log(`[Ozon] üì• –¢–µ–ª–æ –æ—à–∏–±–∫–∏: ${responseBody.substring(0, 1000)}`);
                
                // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–∏–ø–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫
                if (responseCode === 400) {
                    log(`[Ozon] üîé 400 Bad Request - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∑–∞–ø—Ä–æ—Å–∞`);
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ 400
                    log(`[Ozon] üîç –ó–∞–ø—Ä–æ—Å, –≤—ã–∑–≤–∞–≤—à–∏–π –æ—à–∏–±–∫—É: ${JSON.stringify(payload, null, 2)}`);
                }
                if (responseCode === 401) log(`[Ozon] üîé 401 Unauthorized - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ Client-Id –∏ Api-Key`);
                if (responseCode === 403) log(`[Ozon] üîé 403 Forbidden - API –∫–ª—é—á –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —á—Ç–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤`);
                if (responseCode === 422) {
                    log(`[Ozon] üîé 422 Unprocessable Entity - –æ—à–∏–±–∫–∞ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –∑–∞–ø—Ä–æ—Å–∞`);
                    // –ü—ã—Ç–∞–µ–º—Å—è –ø–∞—Ä—Å–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏
                    try {
                        const errorJson = JSON.parse(responseBody);
                        log(`[Ozon] üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ 422: ${JSON.stringify(errorJson, null, 2)}`);
                    } catch (e) {
                        log(`[Ozon] üîç –ù–µ —É–¥–∞–ª–æ—Å—å –ø–∞—Ä—Å–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ 422`);
                    }
                }
                if (responseCode === 429) log(`[Ozon] üîé 429 Too Many Requests - –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç 50 RPS`);
                if (responseCode >= 500) log(`[Ozon] üîé ${responseCode} Server Error - –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ Ozon`);
                
                break;
            }
            
            const json = JSON.parse(responseBody);
            
            // üö® –î–ï–¢–ê–õ–¨–ù–ê–Ø –û–¢–õ–ê–î–ö–ê —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞
            if (isDevMode() || pageNumber <= 2) {
                log(`[Ozon DEBUG] –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber}: ${JSON.stringify(Object.keys(json), null, 2)}`);
                if (json.result) {
                    log(`[Ozon DEBUG] json.result —Å–æ–¥–µ—Ä–∂–∏—Ç: ${JSON.stringify(Object.keys(json.result), null, 2)}`);
                }
            }
            
            // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ê –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞ - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
            let reviews = [];
            let resultData = null;
            
            // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞ Ozon API
            if (json.reviews && Array.isArray(json.reviews)) {
                // –°—Ç—Ä—É–∫—Ç—É—Ä–∞: { "reviews": [...], "last_id": "...", "has_next": true }
                reviews = json.reviews;
                resultData = json;
                log(`[Ozon] ‚úÖ –ö–æ—Ä–Ω–µ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: reviews=${reviews.length}, has_next=${json.has_next}, last_id="${json.last_id}"`);
            } else if (json.result && json.result.reviews) {
                // –°—Ç—Ä—É–∫—Ç—É—Ä–∞: { "result": { "reviews": [...], "has_next": true } }
                resultData = json.result;
                reviews = json.result.reviews || [];
                log(`[Ozon] ‚úÖ Result —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: reviews=${reviews.length}`);
            } else if (json.data && json.data.reviews) {
                // –°—Ç—Ä—É–∫—Ç—É—Ä–∞: { "data": { "reviews": [...] } }
                resultData = json.data;
                reviews = json.data.reviews;
                log(`[Ozon] ‚úÖ Data —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: reviews=${reviews.length}`);
            } else {
                log(`[Ozon] ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${pageNumber}`);
                log(`[Ozon] üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª—é—á–∏: ${Object.keys(json).join(', ')}`);
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–∑–µ—Ü –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
                if (pageNumber <= 3) {
                    log(`[Ozon EMERGENCY] –û–±—Ä–∞–∑–µ—Ü –æ—Ç–≤–µ—Ç–∞: ${responseBody.substring(0, 1500)}`);
                }
                break;
            }
            
            if (!Array.isArray(reviews)) {
                log(`[Ozon] ‚ùå reviews –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º. –¢–∏–ø: ${typeof reviews}`);
                break;
            }
            
            log(`[Ozon] üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber}: –ø–æ–ª—É—á–µ–Ω–æ ${reviews.length} –æ—Ç–∑—ã–≤–æ–≤`);
            
            // ‚úÖ –û–ë–†–ê–ë–ê–¢–´–í–ê–ï–ú –û–¢–ó–´–í–´ –ò –î–û–ë–ê–í–õ–Ø–ï–ú –ö –û–ë–©–ï–ú–£ –°–ü–ò–°–ö–£
            const processedReviews = reviews.map(fb => ({
                id: fb.id, 
                createdDate: fb.published_at || fb.created_at || fb.date, 
                rating: fb.rating,
                text: fb.text || '(–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)', 
                user: '–ê–Ω–æ–Ω–∏–º',
                hasAnswer: !!(fb.answer && fb.answer.text) || !!(fb.comment && fb.comment.text) || fb.has_answer === true,
                product: { 
                    id: fb.sku || fb.offer_id || fb.product_id,
                    name: fb.product_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
                    url: `https://www.ozon.ru/product/${fb.sku || fb.offer_id || fb.product_id}`
                }
            }));
            
            allReviews = allReviews.concat(processedReviews);
            
            // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
            if (resultData) {
                hasNext = resultData.has_next || false;
                lastId = resultData.last_id || "";
                
                if (isDevMode()) {
                    log(`[Ozon DEBUG] –ü–∞–≥–∏–Ω–∞—Ü–∏—è: has_next=${hasNext}, last_id="${lastId}"`);
                }
            } else {
                // Fallback: –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞–ø–∏—Å–µ–π
                hasNext = (reviews.length === limit);
                log(`[Ozon] ‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–∞–≥–∏–Ω–∞—Ü–∏–∏. –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º has_next=${hasNext}`);
            }
            
            // –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –º–µ–Ω—å—à–µ –∑–∞–ø–∏—Å–µ–π —á–µ–º –ª–∏–º–∏—Ç - –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
            if (reviews.length < limit) {
                log(`[Ozon] ‚úÖ –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber}: ${reviews.length} < ${limit}`);
                hasNext = false;
            }
            
            pageNumber++;
            
            // ‚úÖ RATE LIMITING: —Å–æ–±–ª—é–¥–∞–µ–º –ª–∏–º–∏—Ç—ã API
            Utilities.sleep(25); // ~40 RPS –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –∫–∞–∂–¥—ã–µ 20 –∑–∞–ø—Ä–æ—Å–æ–≤
            if (pageNumber % 20 === 0) {
                log(`[Ozon] üí§ –ü–∞—É–∑–∞ –ø–æ—Å–ª–µ ${pageNumber - 1} —Å—Ç—Ä–∞–Ω–∏—Ü...`);
                Utilities.sleep(1000);
            }
            
        } catch (e) {
            log(`[Ozon] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${pageNumber}: ${e.message}`);
            log(`[Ozon] üîç Stack trace: ${e.stack}`);
            break;
        }
    }
    
    if (pageNumber > maxPages) {
        log(`[Ozon] ‚ö†Ô∏è –õ–ò–ú–ò–¢ –°–¢–†–ê–ù–ò–¶: –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å –Ω–∞ ${maxPages} —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö. –í–æ–∑–º–æ–∂–Ω–æ –µ—Å—Ç—å –µ—â–µ –¥–∞–Ω–Ω—ã–µ.`);
    }
    
    // ‚úÖ –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–û–†–¢–ò–†–û–í–ö–ê (–Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã –ø–µ—Ä–≤—ã–º–∏)
    allReviews.sort((a, b) => new Date(b.createdDate) - new Date(a.createdDate));
    
    log(`[Ozon] üéØ –ò–¢–û–ì–û –ø–æ–ª—É—á–µ–Ω–æ ${allReviews.length} –æ—Ç–∑—ã–≤–æ–≤ –∑–∞ ${pageNumber - 1} —Å—Ç—Ä–∞–Ω–∏—Ü`);
    return allReviews;
}

/**
 * üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –æ—Ç–∑—ã–≤ Ozon
 * @param {string} feedbackId - ID –æ—Ç–∑—ã–≤–∞
 * @param {string} text - –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
 * @param {string} clientId - Ozon Client ID
 * @param {string} apiKey - Ozon API Key
 * @returns {Array} [success, errorMessage, responseBody]
 */
function sendOzonFeedbackAnswerFixed(feedbackId, text, clientId, apiKey) {
    log(`[Ozon] üéØ –û–¢–ü–†–ê–í–ö–ê –æ—Ç–≤–µ—Ç–∞ –¥–ª—è ID ${feedbackId}`);
    log(`[Ozon] üìù –¢–µ–∫—Å—Ç: "${text}" (${text.length} —Å–∏–º–≤–æ–ª–æ–≤)`);
    
    const url = 'https://api-seller.ozon.ru/v1/review/comment/create';
    
    // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ê —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    const payload = { 
        review_id: feedbackId,  // ID –æ—Ç–∑—ã–≤–∞
        text: text,             // –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
        mark_review_as_processed: true  // –û—Ç–º–µ—Ç–∏—Ç—å –æ—Ç–∑—ã–≤ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π
    };
    
    try {
        log(`[Ozon] üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ POST –∑–∞–ø—Ä–æ—Å–∞...`);
        log(`[Ozon] üìã Payload: ${JSON.stringify(payload)}`);
        
        const response = UrlFetchApp.fetch(url, {
            method: 'POST', 
            headers: { 
                'Client-Id': clientId, 
                'Api-Key': apiKey,
                'Content-Type': 'application/json'
            },
            payload: JSON.stringify(payload),
            muteHttpExceptions: true
        });
        
        const code = response.getResponseCode();
        const responseBody = response.getContentText();
        
        // üîç –î–ï–¢–ê–õ–¨–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï
        log(`[Ozon] üì• –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${code}`);
        log(`[Ozon] üì• –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: "${responseBody}"`);
        
        if (isDevMode()) {
            const headers = response.getAllHeaders();
            log(`[Ozon DEBUG] –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: ${JSON.stringify(headers, null, 2)}`);
        }
        
        // ‚úÖ –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–ê
        const success = (code === 200 || code === 201 || code === 204);
        let errorMessage = '';
        
        if (success) {
            log(`[Ozon] ‚úÖ –£–°–ü–ï–•: –ö–æ–¥ ${code}`);
            if (code === 200) log(`[Ozon] ‚ÑπÔ∏è 200 OK - –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ`);
            if (code === 201) log(`[Ozon] ‚ÑπÔ∏è 201 Created - –û—Ç–≤–µ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ`);
            if (code === 204) log(`[Ozon] ‚ÑπÔ∏è 204 No Content - –û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞`);
        } else {
            errorMessage = `–ö–æ–¥ ${code}. –û—Ç–≤–µ—Ç: ${responseBody}`;
            log(`[Ozon] ‚ùå –ù–ï–£–î–ê–ß–ê: ${errorMessage}`);
            
            // üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê —Ç–∏–ø–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫
            if (code === 400) log(`[Ozon] üîé 400 Bad Request - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ ID –æ—Ç–∑—ã–≤–∞ –∏ —Ç–µ–∫—Å—Ç`);
            if (code === 401) log(`[Ozon] üîé 401 Unauthorized - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ Client-Id –∏ Api-Key`);
            if (code === 403) log(`[Ozon] üîé 403 Forbidden - –Ω–µ—Ç –ø—Ä–∞–≤ –∏–ª–∏ –æ—Ç–∑—ã–≤ —É–∂–µ –æ—Ç–≤–µ—á–µ–Ω`);
            if (code === 404) log(`[Ozon] üîé 404 Not Found - –æ—Ç–∑—ã–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            if (code === 422) {
                log(`[Ozon] üîé 422 Unprocessable Entity - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ`);
                // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏
                try {
                    const errorJson = JSON.parse(responseBody);
                    if (errorJson.message) {
                        log(`[Ozon] üîç –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: ${errorJson.message}`);
                    }
                    if (errorJson.details) {
                        log(`[Ozon] üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: ${JSON.stringify(errorJson.details)}`);
                    }
                } catch (parseError) {
                    log(`[Ozon] üîç –ù–µ —É–¥–∞–ª–æ—Å—å –ø–∞—Ä—Å–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏`);
                }
            }
            if (code === 429) log(`[Ozon] üîé 429 Too Many Requests - –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤`);
            if (code >= 500) log(`[Ozon] üîé ${code} Server Error - –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ Ozon`);
        }
        
        return [success, errorMessage, responseBody];
        
    } catch (e) {
        const criticalError = `–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${e.message}`;
        log(`[Ozon] ‚õî ${criticalError}`);
        log(`[Ozon] üîç Stack trace: ${e.stack}`);
        return [false, criticalError, e.message];
    }
}

/**
 * –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–∞—Ç—ã –≤ RFC3339 —Ñ–æ—Ä–º–∞—Ç –¥–ª—è Ozon API
 * @param {string} dateString - –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "YYYY-MM-DD" 
 * @returns {string} RFC3339 —Ñ–æ—Ä–º–∞—Ç
 */
function formatDateForOzon(dateString) {
    return new Date(dateString + 'T00:00:00.000Z').toISOString();
}

/**
 * üöÄ –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ offer_id —á–µ—Ä–µ–∑ Product API
 * @param {Array} offerIds - –ú–∞—Å—Å–∏–≤ offer_id —Ç–æ–≤–∞—Ä–æ–≤
 * @param {string} clientId - Ozon Client ID
 * @param {string} apiKey - Ozon API –∫–ª—é—á
 * @returns {Object} –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ {offer_id: –Ω–∞–∑–≤–∞–Ω–∏–µ}
 */
function getOzonProductNames(offerIds, clientId, apiKey) {
    if (!offerIds || offerIds.length === 0) return {};
    
    // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ offer_id
    const uniqueOfferIds = [...new Set(offerIds)].filter(id => {
        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–æ–≤—ã–µ offer_id –∏ –∏—Å–∫–ª—é—á–∞–µ–º —á–∏—Å–ª–æ–≤—ã–µ sku
        if (!id || typeof id !== 'string') return false;
        // –ò—Å–∫–ª—é—á–∞–µ–º —á–∏—Å—Ç–æ —á–∏—Å–ª–æ–≤—ã–µ ID (—ç—Ç–æ sku, –Ω–µ offer_id)
        if (/^\d+$/.test(id)) return false;
        return true;
    });
    
    log(`[Ozon Products] üè∑Ô∏è –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è ${uniqueOfferIds.length} —Ç–æ–≤–∞—Ä–æ–≤...`);
    
    if (uniqueOfferIds.length === 0) {
        log(`[Ozon Products] ‚ö†Ô∏è –ù–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö offer_id –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞–∑–≤–∞–Ω–∏–π`);
        return {};
    }
    
    const url = 'https://api-seller.ozon.ru/v3/product/list';
    const payload = {
        filter: {
            offer_id: uniqueOfferIds
        },
        last_id: "",
        limit: Math.min(uniqueOfferIds.length, 100) // Ozon –ª–∏–º–∏—Ç
    };
    
    try {
        const response = UrlFetchApp.fetch(url, {
            method: 'POST',
            headers: { 
                'Client-Id': clientId, 
                'Api-Key': apiKey,
                'Content-Type': 'application/json'
            },
            payload: JSON.stringify(payload),
            muteHttpExceptions: true
        });
        
        const responseCode = response.getResponseCode();
        const responseBody = response.getContentText();
        
        if (responseCode !== 200) {
            log(`[Ozon Products] ‚ùå –û–®–ò–ë–ö–ê –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π: ${responseCode}. ${responseBody}`);
            return {};
        }
        
        const json = JSON.parse(responseBody);
        const items = json.result?.items || [];
        
        const productNames = {};
        items.forEach(item => {
            if (item.offer_id && item.name) {
                productNames[item.offer_id] = item.name;
            }
        });
        
        log(`[Ozon Products] ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${Object.keys(productNames).length} –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤`);
        return productNames;
        
    } catch (e) {
        log(`[Ozon Products] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${e.message}`);
        return {};
    }
}

/**
 * üöÄ –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ Ozon Product API
 * @param {string} clientId - Ozon Client ID
 * @param {string} apiKey - Ozon API Key
 * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞
 */
function testOzonProductApiAccess(clientId, apiKey) {
    try {
        const url = 'https://api-seller.ozon.ru/v3/product/list';
        const payload = { limit: 1, last_id: "", filter: {} }; // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç-–∑–∞–ø—Ä–æ—Å
        
        const response = UrlFetchApp.fetch(url, {
            method: 'POST',
            headers: { 
                'Client-Id': clientId,
                'Api-Key': apiKey,
                'Content-Type': 'application/json'
            },
            payload: JSON.stringify(payload),
            muteHttpExceptions: true
        });
        
        const code = response.getResponseCode();
        log(`[Ozon Product API Test] –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${code}`);
        
        return code === 200;
    } catch (e) {
        log(`[Ozon Product API Test] –û—à–∏–±–∫–∞: ${e.message}`);
        return false;
    }
}

/**
 * üöÄ –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å isDevMode
 * –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω—É–∂–Ω–∞ –µ—Å–ª–∏ isDevMode –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤ –¥—Ä—É–≥–æ–º —Ñ–∞–π–ª–µ
 */
function isDevMode() {
    try {
        return PropertiesService.getUserProperties().getProperty('DEV_MODE_ENABLED') === 'true';
    } catch (e) {
        return false; // Fallback –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
    }
}

/**
 * üöÄ –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–µ —Å –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π
 * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∞
 */
function log(message) {
    try {
        // –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        if (typeof window !== 'undefined' && window.log) {
            window.log(message);
        } else {
            // Fallback –Ω–∞ console.log
            console.log(`${new Date().toISOString()} - ${message}`);
        }
    } catch (e) {
        console.log(message); // –ü—Ä–æ—Å—Ç–µ–π—à–∏–π fallback
    }
}