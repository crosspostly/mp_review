/**
 * üß™ –°–ò–°–¢–ï–ú–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
 * 
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç unit —Ç–µ—Å—Ç—ã –¥–ª—è –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π —Å–∏—Å—Ç–µ–º—ã
 * –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–∑—ã–≤–æ–≤ Wildberries –∏ Ozon.
 */

// ======================================================================
// ========================== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –¢–ï–°–¢–û–í ======================
// ======================================================================

const TEST_CONFIG = {
  ENABLE_LOGGING: true,
  MOCK_API_RESPONSES: true,
  TEST_TIMEOUT: 30000, // 30 —Å–µ–∫—É–Ω–¥
  MAX_TEST_ITERATIONS: 10
};

// ======================================================================
// ========================== –ú–û–ö-–î–ê–ù–ù–´–ï ===============================
// ======================================================================

/**
 * –ú–æ–∫-–¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è WB API
 */
const MOCK_WB_FEEDBACKS = [
  {
    id: "wb-test-1",
    productValuation: 5,
    text: "–û—Ç–ª–∏—á–Ω—ã–π —Ç–æ–≤–∞—Ä! –†–µ–∫–æ–º–µ–Ω–¥—É—é!",
    createdDate: "2024-01-15T10:00:00Z",
    isAnswered: false,
    productDetails: {
      nmId: 12345,
      productName: "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä WB",
      supplierArticle: "WB-12345"
    }
  },
  {
    id: "wb-test-2",
    productValuation: 3,
    text: "–ù–æ—Ä–º–∞–ª—å–Ω–æ, –Ω–æ –º–æ–≥–ª–æ –±—ã—Ç—å –ª—É—á—à–µ",
    createdDate: "2024-01-14T15:30:00Z",
    isAnswered: true,
    productDetails: {
      nmId: 67890,
      productName: "–î—Ä—É–≥–æ–π —Ç–æ–≤–∞—Ä WB",
      supplierArticle: "WB-67890"
    }
  }
];

/**
 * –ú–æ–∫-–¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Ozon API
 */
const MOCK_OZON_FEEDBACKS = [
  {
    id: "ozon-test-1",
    rating: 5,
    text: "–°—É–ø–µ—Ä –∫–∞—á–µ—Å—Ç–≤–æ! –û—á–µ–Ω—å –¥–æ–≤–æ–ª–µ–Ω –ø–æ–∫—É–ø–∫–æ–π!",
    created_at: "2024-01-15T12:00:00Z",
    is_answered: false,
    product: {
      offer_id: "ozon-123",
      name: "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä Ozon",
      sku: "OZ-123"
    }
  },
  {
    id: "ozon-test-2",
    rating: 2,
    text: "–ù–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, –∫–∞—á–µ—Å—Ç–≤–æ –ø–ª–æ—Ö–æ–µ",
    created_at: "2024-01-14T18:45:00Z",
    is_answered: true,
    product: {
      offer_id: "ozon-456",
      name: "–î—Ä—É–≥–æ–π —Ç–æ–≤–∞—Ä Ozon",
      sku: "OZ-456"
    }
  }
];

/**
 * –ú–æ–∫-–¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞
 */
const MOCK_STORE = {
  id: "test-store-1",
  name: "–¢–µ—Å—Ç–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω",
  marketplace: "wb",
  isActive: true,
  credentials: {
    apiKey: "test-wb-api-key"
  },
  settings: {
    startDate: "2024-01-01",
    minRating: 3,
    sortOldestFirst: false
  }
};

// ======================================================================
// ========================== –ú–û–ö-–§–£–ù–ö–¶–ò–ò ==============================
// ======================================================================

/**
 * –°–æ–∑–¥–∞–µ—Ç –º–æ–∫ UrlFetchApp –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
function createMockUrlFetchApp() {
  return {
    fetch: function(url, options) {
      logDebug(`Mock UrlFetchApp.fetch: ${url}`, 'MOCK');
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø API –ø–æ URL
      if (url.includes('wildberries.ru')) {
        return createMockWbResponse();
      } else if (url.includes('ozon.ru')) {
        return createMockOzonResponse();
      } else {
        return createMockErrorResponse(404, 'Not Found');
      }
    }
  };
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –º–æ–∫-–æ—Ç–≤–µ—Ç WB API
 */
function createMockWbResponse() {
  return {
    getResponseCode: function() { return 200; },
    getContentText: function() { 
      return JSON.stringify({
        data: {
          feedbacks: MOCK_WB_FEEDBACKS
        }
      });
    }
  };
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –º–æ–∫-–æ—Ç–≤–µ—Ç Ozon API
 */
function createMockOzonResponse() {
  return {
    getResponseCode: function() { return 200; },
    getContentText: function() { 
      return JSON.stringify({
        result: {
          reviews: MOCK_OZON_FEEDBACKS
        }
      });
    }
  };
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –º–æ–∫-–æ—Ç–≤–µ—Ç —Å –æ—à–∏–±–∫–æ–π
 */
function createMockErrorResponse(code, message) {
  return {
    getResponseCode: function() { return code; },
    getContentText: function() { 
      return JSON.stringify({ error: message });
    }
  };
}

// ======================================================================
// ========================== UNIT –¢–ï–°–¢–´ ===============================
// ======================================================================

/**
 * üß™ –¢–µ—Å—Ç API —Ñ—É–Ω–∫—Ü–∏–π WB
 */
function testWbApiFunctions() {
  logDebug('üß™ –¢–µ—Å—Ç API —Ñ—É–Ω–∫—Ü–∏–π WB', 'UNIT-TEST');
  
  try {
    // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ WB
    testGetWbFeedbacks();
    
    // –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –æ—Ç–∑—ã–≤ WB
    testSendWbFeedbackAnswer();
    
    // –¢–µ—Å—Ç 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ WB API
    testWbApiErrorHandling();
    
    logSuccess('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã WB API –ø—Ä–æ–π–¥–µ–Ω—ã', 'UNIT-TEST');
    return true;
    
  } catch (error) {
    logError(`‚ùå –¢–µ—Å—Ç WB API –ø—Ä–æ–≤–∞–ª–µ–Ω: ${error.message}`, 'UNIT-TEST');
    return false;
  }
}

/**
 * –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ WB
 */
function testGetWbFeedbacks() {
  logDebug('–¢–µ—Å—Ç: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ WB', 'UNIT-TEST');
  
  // –ú–æ–∫–∞–µ–º UrlFetchApp
  const originalUrlFetchApp = UrlFetchApp;
  global.UrlFetchApp = createMockUrlFetchApp();
  
  try {
    const feedbacks = getWbFeedbacks('test-api-key', false, MOCK_STORE);
    
    if (!Array.isArray(feedbacks)) {
      throw new Error('getWbFeedbacks –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –º–∞—Å—Å–∏–≤');
    }
    
    if (feedbacks.length === 0) {
      throw new Error('getWbFeedbacks –Ω–µ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–∑—ã–≤–∞
    const feedback = feedbacks[0];
    if (!feedback.id || !feedback.text || !feedback.productValuation) {
      throw new Error('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–∑—ã–≤–∞ WB');
    }
    
    logSuccess('‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ WB —Ä–∞–±–æ—Ç–∞–µ—Ç', 'UNIT-TEST');
    
  } finally {
    global.UrlFetchApp = originalUrlFetchApp;
  }
}

/**
 * –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –æ—Ç–∑—ã–≤ WB
 */
function testSendWbFeedbackAnswer() {
  logDebug('–¢–µ—Å—Ç: –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –æ—Ç–∑—ã–≤ WB', 'UNIT-TEST');
  
  // –ú–æ–∫–∞–µ–º UrlFetchApp
  const originalUrlFetchApp = UrlFetchApp;
  global.UrlFetchApp = createMockUrlFetchApp();
  
  try {
    const result = sendWbFeedbackAnswer('wb-test-1', '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!', 'test-api-key');
    
    if (!result || !result.success) {
      throw new Error('sendWbFeedbackAnswer –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç');
    }
    
    logSuccess('‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ WB —Ä–∞–±–æ—Ç–∞–µ—Ç', 'UNIT-TEST');
    
  } finally {
    global.UrlFetchApp = originalUrlFetchApp;
  }
}

/**
 * –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ WB API
 */
function testWbApiErrorHandling() {
  logDebug('–¢–µ—Å—Ç: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ WB API', 'UNIT-TEST');
  
  // –ú–æ–∫–∞–µ–º UrlFetchApp –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –æ—à–∏–±–∫–∏
  const originalUrlFetchApp = UrlFetchApp;
  global.UrlFetchApp = {
    fetch: function(url, options) {
      return createMockErrorResponse(401, 'Unauthorized');
    }
  };
  
  try {
    const feedbacks = getWbFeedbacks('invalid-key', false, MOCK_STORE);
    
    // –ü—Ä–∏ –æ—à–∏–±–∫–µ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
    if (!Array.isArray(feedbacks)) {
      throw new Error('–ü—Ä–∏ –æ—à–∏–±–∫–µ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –º–∞—Å—Å–∏–≤');
    }
    
    logSuccess('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ WB API —Ä–∞–±–æ—Ç–∞–µ—Ç', 'UNIT-TEST');
    
  } finally {
    global.UrlFetchApp = originalUrlFetchApp;
  }
}

/**
 * üß™ –¢–µ—Å—Ç API —Ñ—É–Ω–∫—Ü–∏–π Ozon
 */
function testOzonApiFunctions() {
  logDebug('üß™ –¢–µ—Å—Ç API —Ñ—É–Ω–∫—Ü–∏–π Ozon', 'UNIT-TEST');
  
  try {
    // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ Ozon
    testGetOzonFeedbacks();
    
    // –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –æ—Ç–∑—ã–≤ Ozon
    testSendOzonFeedbackAnswer();
    
    // –¢–µ—Å—Ç 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ Ozon API
    testOzonApiErrorHandling();
    
    logSuccess('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã Ozon API –ø—Ä–æ–π–¥–µ–Ω—ã', 'UNIT-TEST');
    return true;
    
  } catch (error) {
    logError(`‚ùå –¢–µ—Å—Ç Ozon API –ø—Ä–æ–≤–∞–ª–µ–Ω: ${error.message}`, 'UNIT-TEST');
    return false;
  }
}

/**
 * –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ Ozon
 */
function testGetOzonFeedbacks() {
  logDebug('–¢–µ—Å—Ç: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ Ozon', 'UNIT-TEST');
  
  // –ú–æ–∫–∞–µ–º UrlFetchApp
  const originalUrlFetchApp = UrlFetchApp;
  global.UrlFetchApp = createMockUrlFetchApp();
  
  try {
    const feedbacks = getOzonFeedbacks('test-client-id', 'test-api-key', false, MOCK_STORE);
    
    if (!Array.isArray(feedbacks)) {
      throw new Error('getOzonFeedbacks –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –º–∞—Å—Å–∏–≤');
    }
    
    if (feedbacks.length === 0) {
      throw new Error('getOzonFeedbacks –Ω–µ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–∑—ã–≤–∞
    const feedback = feedbacks[0];
    if (!feedback.id || !feedback.text || !feedback.rating) {
      throw new Error('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–∑—ã–≤–∞ Ozon');
    }
    
    logSuccess('‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ Ozon —Ä–∞–±–æ—Ç–∞–µ—Ç', 'UNIT-TEST');
    
  } finally {
    global.UrlFetchApp = originalUrlFetchApp;
  }
}

/**
 * –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –æ—Ç–∑—ã–≤ Ozon
 */
function testSendOzonFeedbackAnswer() {
  logDebug('–¢–µ—Å—Ç: –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –æ—Ç–∑—ã–≤ Ozon', 'UNIT-TEST');
  
  // –ú–æ–∫–∞–µ–º UrlFetchApp
  const originalUrlFetchApp = UrlFetchApp;
  global.UrlFetchApp = createMockUrlFetchApp();
  
  try {
    const result = sendOzonFeedbackAnswer('ozon-test-1', '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!', 'test-client-id', 'test-api-key');
    
    if (!result || !result.success) {
      throw new Error('sendOzonFeedbackAnswer –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç');
    }
    
    logSuccess('‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ Ozon —Ä–∞–±–æ—Ç–∞–µ—Ç', 'UNIT-TEST');
    
  } finally {
    global.UrlFetchApp = originalUrlFetchApp;
  }
}

/**
 * –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ Ozon API
 */
function testOzonApiErrorHandling() {
  logDebug('–¢–µ—Å—Ç: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ Ozon API', 'UNIT-TEST');
  
  // –ú–æ–∫–∞–µ–º UrlFetchApp –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –æ—à–∏–±–∫–∏
  const originalUrlFetchApp = UrlFetchApp;
  global.UrlFetchApp = {
    fetch: function(url, options) {
      return createMockErrorResponse(401, 'Unauthorized');
    }
  };
  
  try {
    const feedbacks = getOzonFeedbacks('invalid-client-id', 'invalid-key', false, MOCK_STORE);
    
    // –ü—Ä–∏ –æ—à–∏–±–∫–µ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
    if (!Array.isArray(feedbacks)) {
      throw new Error('–ü—Ä–∏ –æ—à–∏–±–∫–µ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –º–∞—Å—Å–∏–≤');
    }
    
    logSuccess('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ Ozon API —Ä–∞–±–æ—Ç–∞–µ—Ç', 'UNIT-TEST');
    
  } finally {
    global.UrlFetchApp = originalUrlFetchApp;
  }
}

/**
 * üß™ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤
 */
function testTriggerSystem() {
  logDebug('üß™ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤', 'UNIT-TEST');
  
  try {
    // –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞
    testCreateTrigger();
    
    // –¢–µ—Å—Ç 2: –£–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞
    testDeleteTrigger();
    
    // –¢–µ—Å—Ç 3: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤
    testSyncTriggers();
    
    // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤
    testTriggerIntegrity();
    
    logSuccess('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã —Å–∏—Å—Ç–µ–º—ã —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –ø—Ä–æ–π–¥–µ–Ω—ã', 'UNIT-TEST');
    return true;
    
  } catch (error) {
    logError(`‚ùå –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –ø—Ä–æ–≤–∞–ª–µ–Ω: ${error.message}`, 'UNIT-TEST');
    return false;
  }
}

/**
 * –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞
 */
function testCreateTrigger() {
  logDebug('–¢–µ—Å—Ç: –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞', 'UNIT-TEST');
  
  try {
    const triggerId = createStoreTrigger(MOCK_STORE, 30);
    
    if (!triggerId) {
      throw new Error('createStoreTrigger –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å ID —Ç—Ä–∏–≥–≥–µ—Ä–∞');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç—Ä–∏–≥–≥–µ—Ä —Å–æ–∑–¥–∞–Ω
    const triggers = ScriptApp.getProjectTriggers();
    const trigger = triggers.find(t => t.getUniqueId() === triggerId);
    
    if (!trigger) {
      throw new Error('–¢—Ä–∏–≥–≥–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è');
    }
    
    // –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç—Ä–∏–≥–≥–µ—Ä
    ScriptApp.deleteTrigger(trigger);
    
    logSuccess('‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç', 'UNIT-TEST');
    
  } catch (error) {
    logError(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞: ${error.message}`, 'UNIT-TEST');
    throw error;
  }
}

/**
 * –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞
 */
function testDeleteTrigger() {
  logDebug('–¢–µ—Å—Ç: –£–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞', 'UNIT-TEST');
  
  try {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç—Ä–∏–≥–≥–µ—Ä
    const trigger = ScriptApp.newTrigger('processAllStores')
      .timeBased()
      .everyMinutes(30)
      .create();
    
    const triggerId = trigger.getUniqueId();
    
    // –£–¥–∞–ª—è–µ–º —Ç—Ä–∏–≥–≥–µ—Ä
    const result = deleteStoreTrigger(MOCK_STORE.id);
    
    if (!result) {
      throw new Error('deleteStoreTrigger –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å true');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç—Ä–∏–≥–≥–µ—Ä —É–¥–∞–ª–µ–Ω
    const triggers = ScriptApp.getProjectTriggers();
    const foundTrigger = triggers.find(t => t.getUniqueId() === triggerId);
    
    if (foundTrigger) {
      throw new Error('–¢—Ä–∏–≥–≥–µ—Ä –Ω–µ –±—ã–ª —É–¥–∞–ª–µ–Ω');
    }
    
    logSuccess('‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç', 'UNIT-TEST');
    
  } catch (error) {
    logError(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞: ${error.message}`, 'UNIT-TEST');
    throw error;
  }
}

/**
 * –¢–µ—Å—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤
 */
function testSyncTriggers() {
  logDebug('–¢–µ—Å—Ç: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤', 'UNIT-TEST');
  
  try {
    const result = syncAllStoreTriggers();
    
    if (!result) {
      throw new Error('syncAllStoreTriggers –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å true');
    }
    
    logSuccess('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç', 'UNIT-TEST');
    
  } catch (error) {
    logError(`‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤: ${error.message}`, 'UNIT-TEST');
    throw error;
  }
}

/**
 * –¢–µ—Å—Ç —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤
 */
function testTriggerIntegrity() {
  logDebug('–¢–µ—Å—Ç: –¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤', 'UNIT-TEST');
  
  try {
    const result = validateTriggerIntegrity();
    
    if (!result) {
      throw new Error('validateTriggerIntegrity –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å true');
    }
    
    logSuccess('‚úÖ –¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç', 'UNIT-TEST');
    
  } catch (error) {
    logError(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤: ${error.message}`, 'UNIT-TEST');
    throw error;
  }
}

/**
 * üß™ –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
 */
function testDataProcessing() {
  logDebug('üß™ –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö', 'UNIT-TEST');
  
  try {
    // –¢–µ—Å—Ç 1: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∞—Ç–µ
    testDateFiltering();
    
    // –¢–µ—Å—Ç 2: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
    testRatingFiltering();
    
    // –¢–µ—Å—Ç 3: –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    testSorting();
    
    // –¢–µ—Å—Ç 4: –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    testDataNormalization();
    
    logSuccess('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–π–¥–µ–Ω—ã', 'UNIT-TEST');
    return true;
    
  } catch (error) {
    logError(`‚ùå –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≤–∞–ª–µ–Ω: ${error.message}`, 'UNIT-TEST');
    return false;
  }
}

/**
 * –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–∞—Ç–µ
 */
function testDateFiltering() {
  logDebug('–¢–µ—Å—Ç: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∞—Ç–µ', 'UNIT-TEST');
  
  try {
    const feedbacks = [
      { createdDate: '2024-01-15T10:00:00Z' },
      { createdDate: '2024-01-14T15:30:00Z' },
      { createdDate: '2024-01-13T09:15:00Z' }
    ];
    
    const filtered = feedbacks.filter(f => 
      new Date(f.createdDate) >= new Date('2024-01-14')
    );
    
    if (filtered.length !== 2) {
      throw new Error('–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∞—Ç–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ');
    }
    
    logSuccess('‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∞—Ç–µ —Ä–∞–±–æ—Ç–∞–µ—Ç', 'UNIT-TEST');
    
  } catch (error) {
    logError(`‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–∞—Ç–µ: ${error.message}`, 'UNIT-TEST');
    throw error;
  }
}

/**
 * –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
 */
function testRatingFiltering() {
  logDebug('–¢–µ—Å—Ç: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'UNIT-TEST');
  
  try {
    const feedbacks = [
      { productValuation: 5 },
      { productValuation: 3 },
      { productValuation: 1 }
    ];
    
    const filtered = feedbacks.filter(f => f.productValuation >= 3);
    
    if (filtered.length !== 2) {
      throw new Error('–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ');
    }
    
    logSuccess('‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É —Ä–∞–±–æ—Ç–∞–µ—Ç', 'UNIT-TEST');
    
  } catch (error) {
    logError(`‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É: ${error.message}`, 'UNIT-TEST');
    throw error;
  }
}

/**
 * –¢–µ—Å—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
 */
function testSorting() {
  logDebug('–¢–µ—Å—Ç: –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö', 'UNIT-TEST');
  
  try {
    const feedbacks = [
      { createdDate: '2024-01-15T10:00:00Z' },
      { createdDate: '2024-01-13T09:15:00Z' },
      { createdDate: '2024-01-14T15:30:00Z' }
    ];
    
    const sorted = feedbacks.sort((a, b) => 
      new Date(a.createdDate) - new Date(b.createdDate)
    );
    
    if (sorted[0].createdDate !== '2024-01-13T09:15:00Z') {
      throw new Error('–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ');
    }
    
    logSuccess('‚úÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç', 'UNIT-TEST');
    
  } catch (error) {
    logError(`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏: ${error.message}`, 'UNIT-TEST');
    throw error;
  }
}

/**
 * –¢–µ—Å—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
 */
function testDataNormalization() {
  logDebug('–¢–µ—Å—Ç: –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö', 'UNIT-TEST');
  
  try {
    const wbFeedback = {
      id: 'wb-1',
      productValuation: 5,
      text: '–û—Ç–ª–∏—á–Ω—ã–π —Ç–æ–≤–∞—Ä!',
      createdDate: '2024-01-15T10:00:00Z',
      isAnswered: false
    };
    
    const normalized = normalizeWbFeedback(wbFeedback);
    
    if (!normalized.id || !normalized.rating || !normalized.text) {
      throw new Error('–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ');
    }
    
    logSuccess('‚úÖ –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç', 'UNIT-TEST');
    
  } catch (error) {
    logError(`‚ùå –û—à–∏–±–∫–∞ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ${error.message}`, 'UNIT-TEST');
    throw error;
  }
}

// ======================================================================
// ========================== –ò–ù–¢–ï–ì–†–ê–¶–ò–û–ù–ù–´–ï –¢–ï–°–¢–´ =====================
// ======================================================================

/**
 * üß™ –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞
 */
function testFullStoreProcessing() {
  logDebug('üß™ –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞', 'INTEGRATION-TEST');
  
  try {
    // –ú–æ–∫–∞–µ–º UrlFetchApp
    const originalUrlFetchApp = UrlFetchApp;
    global.UrlFetchApp = createMockUrlFetchApp();
    
    try {
      const result = processSingleStore(MOCK_STORE, true);
      
      if (!result) {
        throw new Error('processSingleStore –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å true');
      }
      
      logSuccess('‚úÖ –ü–æ–ª–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç', 'INTEGRATION-TEST');
      
    } finally {
      global.UrlFetchApp = originalUrlFetchApp;
    }
    
  } catch (error) {
    logError(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞: ${error.message}`, 'INTEGRATION-TEST');
    throw error;
  }
}

/**
 * üß™ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
 */
function testProgressSystem() {
  logDebug('üß™ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞', 'INTEGRATION-TEST');
  
  try {
    const storeId = 'test-progress-store';
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    const progressData = {
      lastPage: 5,
      lastDate: new Date().toISOString(),
      processedCount: 100
    };
    
    const saveResult = updateStoreProgress(storeId, progressData);
    if (!saveResult) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å');
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    const retrievedProgress = getStoreProgress(storeId);
    if (!retrievedProgress) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
    if (retrievedProgress.lastPage !== 5) {
      throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞');
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    const resetResult = resetStoreProgress(storeId);
    if (!resetResult) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å');
    }
    
    logSuccess('‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç', 'INTEGRATION-TEST');
    
  } catch (error) {
    logError(`‚ùå –û—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: ${error.message}`, 'INTEGRATION-TEST');
    throw error;
  }
}

// ======================================================================
// ========================== –ì–õ–ê–í–ù–´–ï –§–£–ù–ö–¶–ò–ò ==========================
// ======================================================================

/**
 * üöÄ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
 */
function runAllTests() {
  log('üß™ ===== –ó–ê–ü–£–°–ö –í–°–ï–• –¢–ï–°–¢–û–í =====', 'INFO', 'TEST-RUNNER');
  
  const results = {
    total: 0,
    passed: 0,
    failed: 0,
    errors: []
  };
  
  const testSuites = [
    { name: 'WB API Functions', test: testWbApiFunctions },
    { name: 'Ozon API Functions', test: testOzonApiFunctions },
    { name: 'Trigger System', test: testTriggerSystem },
    { name: 'Data Processing', test: testDataProcessing },
    { name: 'Full Store Processing', test: testFullStoreProcessing },
    { name: 'Progress System', test: testProgressSystem }
  ];
  
  for (const suite of testSuites) {
    results.total++;
    log(`üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤: ${suite.name}`, 'INFO', 'TEST-RUNNER');
    
    try {
      const success = suite.test();
      if (success) {
        results.passed++;
        logSuccess(`‚úÖ ${suite.name} - –ü–†–û–ô–î–ï–ù`, 'TEST-RUNNER');
      } else {
        results.failed++;
        logError(`‚ùå ${suite.name} - –ü–†–û–í–ê–õ–ï–ù`, 'TEST-RUNNER');
      }
    } catch (error) {
      results.failed++;
      results.errors.push(`${suite.name}: ${error.message}`);
      logError(`‚ùå ${suite.name} - –û–®–ò–ë–ö–ê: ${error.message}`, 'TEST-RUNNER');
    }
  }
  
  // –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  log('üß™ ===== –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø =====', 'INFO', 'TEST-RUNNER');
  log(`üìä –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${results.total}`, 'INFO', 'TEST-RUNNER');
  log(`‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${results.passed}`, 'SUCCESS', 'TEST-RUNNER');
  log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${results.failed}`, 'ERROR', 'TEST-RUNNER');
  
  if (results.errors.length > 0) {
    log('üîç –û—à–∏–±–∫–∏:', 'WARNING', 'TEST-RUNNER');
    results.errors.forEach(error => {
      log(`  - ${error}`, 'ERROR', 'TEST-RUNNER');
    });
  }
  
  const successRate = Math.round((results.passed / results.total) * 100);
  log(`üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${successRate}%`, 'INFO', 'TEST-RUNNER');
  
  if (successRate === 100) {
    logSuccess('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!', 'TEST-RUNNER');
  } else if (successRate >= 80) {
    logWarning(`‚ö†Ô∏è –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ (${successRate}%), —Ç—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ${results.failed} —Ç–µ—Å—Ç–æ–≤`, 'TEST-RUNNER');
  } else {
    logError(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –æ—à–∏–±–æ–∫ (${successRate}%), —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–µ—Ä—å–µ–∑–Ω–∞—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞`, 'TEST-RUNNER');
  }
  
  return results;
}

/**
 * üß™ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
 */
function runQuickTests() {
  log('üß™ ===== –ë–´–°–¢–†–´–ï –¢–ï–°–¢–´ =====', 'INFO', 'QUICK-TEST');
  
  const criticalTests = [
    { name: 'WB API', test: testWbApiFunctions },
    { name: 'Ozon API', test: testOzonApiFunctions },
    { name: 'Data Processing', test: testDataProcessing }
  ];
  
  let passed = 0;
  let total = criticalTests.length;
  
  for (const test of criticalTests) {
    try {
      if (test.test()) {
        passed++;
        logSuccess(`‚úÖ ${test.name}`, 'QUICK-TEST');
      } else {
        logError(`‚ùå ${test.name}`, 'QUICK-TEST');
      }
    } catch (error) {
      logError(`‚ùå ${test.name}: ${error.message}`, 'QUICK-TEST');
    }
  }
  
  log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${passed}/${total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ`, 'INFO', 'QUICK-TEST');
  return passed === total;
}

/**
 * üß™ –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
 */
function runPerformanceTests() {
  log('üß™ ===== –¢–ï–°–¢–´ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò =====', 'INFO', 'PERFORMANCE-TEST');
  
  try {
    const startTime = Date.now();
    
    // –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö
    const largeData = Array(1000).fill().map((_, i) => ({
      id: `test-${i}`,
      text: `Test feedback ${i}`,
      rating: Math.floor(Math.random() * 5) + 1,
      createdDate: new Date().toISOString()
    }));
    
    const processed = processFeedbackBatch(largeData, [], MOCK_STORE, true);
    
    const endTime = Date.now();
    const duration = endTime - startTime;
    
    log(`üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${largeData.length} –∑–∞–ø–∏—Å–µ–π –∑–∞ ${duration}–º—Å`, 'INFO', 'PERFORMANCE-TEST');
    log(`‚ö° –°–∫–æ—Ä–æ—Å—Ç—å: ${Math.round(largeData.length / (duration / 1000))} –∑–∞–ø–∏—Å–µ–π/—Å–µ–∫`, 'INFO', 'PERFORMANCE-TEST');
    
    if (duration > 5000) {
      logWarning('‚ö†Ô∏è –ú–µ–¥–ª–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö', 'PERFORMANCE-TEST');
    } else {
      logSuccess('‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –Ω–æ—Ä–º–µ', 'PERFORMANCE-TEST');
    }
    
    return true;
    
  } catch (error) {
    logError(`‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: ${error.message}`, 'PERFORMANCE-TEST');
    return false;
  }
}