/**
 * @file ozon_auto_collection.gs
 * @description –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ—Ä –æ—Ç–∑—ã–≤–æ–≤ Ozon –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é (–∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞)
 * @version 1.0
 * @date 2025-10-29
 * 
 * –§–£–ù–ö–¶–ò–û–ù–ê–õ (–∞–Ω–∞–ª–æ–≥ N8N workflow):
 * - –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞ —á–µ—Ä–µ–∑ —Ç—Ä–∏–≥–≥–µ—Ä
 * - –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ —Ç–æ–ª—å–∫–æ 4-5 –∑–≤—ë–∑–¥ —Å 0 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ (comments_amount = 0)
 * - –ü–∞–≥–∏–Ω–∞—Ü–∏—è –¥–æ 20 —Å—Ç—Ä–∞–Ω–∏—Ü —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º last_id
 * - –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –æ—Ç–∑—ã–≤–∞–º–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ
 * - –ó–∞–ø–∏—Å—å —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "NEW"
 * - –ó–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ last_id –≤ Script Properties
 * - –°–±—Ä–æ—Å last_id –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 * 
 * API ENDPOINT:
 * POST https://api-seller.ozon.ru/v1/review/list
 * Headers: Client-Id, Api-Key
 * Body: { "limit": 100, "with_photos": false, "last_id": "..." }
 */

// ============ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ============
const OZON_AUTO_CONFIG = {
  // –¢—Ä–∏–≥–≥–µ—Ä: –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞
  TRIGGER_INTERVAL_HOURS: 3,
  
  // –ü–∞–≥–∏–Ω–∞—Ü–∏—è
  MAX_PAGES_PER_RUN: 20,           // –ú–∞–∫—Å–∏–º—É–º 20 —Å—Ç—Ä–∞–Ω–∏—Ü –∑–∞ —Ä–∞–∑
  REVIEWS_PER_PAGE: 100,            // 100 –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
  
  // –§–∏–ª—å—Ç—Ä—ã
  FILTER_RATINGS: [4, 5],           // –¢–æ–ª—å–∫–æ 4 –∏ 5 –∑–≤—ë–∑–¥
  FILTER_COMMENTS_COUNT: 0,          // 0 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
  
  // –ö–ª—é—á–∏ Script Properties
  LAST_ID_PREFIX: 'ozon_auto_lastId_',      // ozon_auto_lastId_{storeId}
  ITERATION_PREFIX: 'ozon_auto_iteration_',  // ozon_auto_iteration_{storeId}
  
  // –°—Ç–∞—Ç—É—Å –¥–ª—è –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
  NEW_STATUS: 'NEW',
  
  // API
  API_URL: 'https://api-seller.ozon.ru/v1/review/list'
};

/**
 * üöÄ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –¢—Ä–∏–≥–≥–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–±–æ—Ä–∞ –æ—Ç–∑—ã–≤–æ–≤ Ozon
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞ –¥–ª—è –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ Ozon
 */
function collectOzonReviewsAuto() {
  const startTime = Date.now();
  log('üöÄ –ó–ê–ü–£–°–ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–±–æ—Ä–∞ –æ—Ç–∑—ã–≤–æ–≤ Ozon');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω—ã Ozon
    const allStores = getStores();
    const ozonStores = allStores.filter(store => 
      store.isActive && 
      (store.marketplace === 'Ozon' || store.marketplace === 'OZON')
    );
    
    if (ozonStores.length === 0) {
      log('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ Ozon –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–±–æ—Ä–∞');
      return {
        success: true,
        message: '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ Ozon',
        storesProcessed: 0,
        totalNewReviews: 0
      };
    }
    
    log(`–ù–∞–π–¥–µ–Ω–æ ${ozonStores.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ Ozon`);
    
    let totalNewReviews = 0;
    const results = [];
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π –º–∞–≥–∞–∑–∏–Ω
    for (let i = 0; i < ozonStores.length; i++) {
      const store = ozonStores[i];
      
      try {
        log(`[${store.name}] –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ—Ä...`);
        
        const result = collectForStore(store);
        results.push(result);
        totalNewReviews += result.newReviewsCount || 0;
        
        // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –º–∞–≥–∞–∑–∏–Ω–∞–º–∏
        if (i < ozonStores.length - 1) {
          Utilities.sleep(2000);
        }
        
      } catch (error) {
        log(`[${store.name}] ‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        results.push({
          storeId: store.id,
          storeName: store.name,
          success: false,
          error: error.message,
          newReviewsCount: 0
        });
      }
    }
    
    const duration = Math.round((Date.now() - startTime) / 1000);
    log(`‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ ${duration} —Å–µ–∫: ${totalNewReviews} –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤`);
    
    return {
      success: true,
      storesProcessed: ozonStores.length,
      totalNewReviews: totalNewReviews,
      duration: duration,
      results: results
    };
    
  } catch (error) {
    log(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–±–æ—Ä–∞: ${error.message}`);
    return {
      success: false,
      error: error.message,
      storesProcessed: 0,
      totalNewReviews: 0
    };
  }
}

/**
 * –°–æ–±–∏—Ä–∞–µ—Ç –æ—Ç–∑—ã–≤—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
 */
function collectForStore(store) {
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ credentials
    if (!store.credentials || !store.credentials.clientId || !store.credentials.apiKey) {
      throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç credentials');
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å
    const props = PropertiesService.getScriptProperties();
    const lastIdKey = OZON_AUTO_CONFIG.LAST_ID_PREFIX + store.id;
    const iterationKey = OZON_AUTO_CONFIG.ITERATION_PREFIX + store.id;
    
    const savedLastId = props.getProperty(lastIdKey) || '';
    const iteration = parseInt(props.getProperty(iterationKey) || '0', 10);
    
    log(`[${store.name}] –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å last_id="${savedLastId}", –∏—Ç–µ—Ä–∞—Ü–∏—è=${iteration}`);
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ ID –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
    const existingIds = getExistingReviewIds(store);
    log(`[${store.name}] –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${existingIds.length} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö ID`);
    
    // –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã
    const collectionResult = collectWithPagination(
      store,
      savedLastId,
      iteration,
      existingIds
    );
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã –≤ —Ç–∞–±–ª–∏—Ü—É
    if (collectionResult.newReviews.length > 0) {
      writeToSheet(store, collectionResult.newReviews);
      log(`[${store.name}] ‚úÖ –ó–∞–ø–∏—Å–∞–Ω–æ ${collectionResult.newReviews.length} –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤`);
    } else {
      log(`[${store.name}] –ù–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–ª–∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    if (collectionResult.hasNext && collectionResult.newLastId) {
      // –ï—Å—Ç—å –µ—â–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã - —Å–æ—Ö—Ä–∞–Ω—è–µ–º
      props.setProperty(lastIdKey, collectionResult.newLastId);
      props.setProperty(iterationKey, collectionResult.nextIteration.toString());
      log(`[${store.name}] –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω: last_id="${collectionResult.newLastId}", –∏—Ç–µ—Ä–∞—Ü–∏—è=${collectionResult.nextIteration}`);
    } else {
      // –î–æ—Å—Ç–∏–≥–ª–∏ –∫–æ–Ω—Ü–∞ - —Å–±—Ä–∞—Å—ã–≤–∞–µ–º
      props.deleteProperty(lastIdKey);
      props.deleteProperty(iterationKey);
      log(`[${store.name}] –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—à–µ–Ω (–¥–æ—Å—Ç–∏–≥–Ω—É—Ç –∫–æ–Ω–µ—Ü –∏–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö)`);
    }
    
    return {
      storeId: store.id,
      storeName: store.name,
      success: true,
      newReviewsCount: collectionResult.newReviews.length,
      pagesProcessed: collectionResult.pagesProcessed,
      hasMore: collectionResult.hasNext
    };
    
  } catch (error) {
    log(`[${store.name}] ‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞: ${error.message}`);
    return {
      storeId: store.id,
      storeName: store.name,
      success: false,
      error: error.message,
      newReviewsCount: 0
    };
  }
}

/**
 * –°–æ–±–∏—Ä–∞–µ—Ç –æ—Ç–∑—ã–≤—ã —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –¥–æ MAX_PAGES_PER_RUN
 */
function collectWithPagination(store, startLastId, startIteration, existingIds) {
  const newReviews = [];
  let lastId = startLastId;
  let iteration = startIteration;
  let hasNext = true;
  let pagesProcessed = 0;
  
  const maxPages = OZON_AUTO_CONFIG.MAX_PAGES_PER_RUN;
  
  while (hasNext && pagesProcessed < maxPages) {
    const pageStart = Date.now();
    
    log(`[Ozon] –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pagesProcessed + 1}/${maxPages}, last_id="${lastId}"`);
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const pageResponse = fetchReviewsPage(store, lastId);
    
    if (!pageResponse.success) {
      log(`[Ozon] ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${pageResponse.error}`);
      break;
    }
    
    const pageReviews = pageResponse.reviews || [];
    const pageLastId = pageResponse.lastId || null;
    
    if (pageReviews.length === 0) {
      log(`[Ozon] –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—É—Å—Ç–∞, –∑–∞–≤–µ—Ä—à–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é`);
      hasNext = false;
      break;
    }
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º (4-5 –∑–≤—ë–∑–¥, 0 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤)
    const filtered = filterByCriteria(pageReviews);
    log(`[Ozon] –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ ${filtered.length} –∏–∑ ${pageReviews.length}`);
    
    // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    const unique = removeDuplicates(filtered, existingIds);
    log(`[Ozon] –ù–∞–π–¥–µ–Ω–æ ${unique.length} –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤`);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
    newReviews.push(...unique);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ ID –≤ —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö
    unique.forEach(review => existingIds.push(review.reviewId));
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
    lastId = pageLastId;
    iteration++;
    pagesProcessed++;
    hasNext = !!pageLastId && pageReviews.length >= OZON_AUTO_CONFIG.REVIEWS_PER_PAGE;
    
    // Rate limiting
    const pageTime = Date.now() - pageStart;
    if (pageTime < 500) {
      Utilities.sleep(500 - pageTime);
    }
  }
  
  return {
    newReviews: newReviews,
    newLastId: lastId,
    nextIteration: iteration,
    pagesProcessed: pagesProcessed,
    hasNext: hasNext
  };
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –æ–¥–Ω—É —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—Ç–∑—ã–≤–æ–≤ —Å Ozon API
 */
function fetchReviewsPage(store, lastId) {
  try {
    const url = OZON_AUTO_CONFIG.API_URL;
    
    const payload = {
      limit: OZON_AUTO_CONFIG.REVIEWS_PER_PAGE,
      with_photos: false
    };
    
    if (lastId) {
      payload.last_id = lastId;
    }
    
    const options = {
      method: 'POST',
      headers: {
        'Client-Id': store.credentials.clientId,
        'Api-Key': store.credentials.apiKey,
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify(payload),
      muteHttpExceptions: true
    };
    
    const response = UrlFetchApp.fetch(url, options);
    const code = response.getResponseCode();
    const text = response.getContentText();
    
    if (code !== 200) {
      return {
        success: false,
        error: `HTTP ${code}: ${text}`,
        reviews: [],
        lastId: null
      };
    }
    
    const data = JSON.parse(text);
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç–∑—ã–≤—ã –∏ last_id
    const reviews = data.reviews || data.result?.reviews || [];
    const newLastId = data.last_id || data.result?.last_id || null;
    
    return {
      success: true,
      reviews: reviews,
      lastId: newLastId
    };
    
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Ozon API: ${error.message}`);
    return {
      success: false,
      error: error.message,
      reviews: [],
      lastId: null
    };
  }
}

/**
 * –§–∏–ª—å—Ç—Ä—É–µ—Ç –æ—Ç–∑—ã–≤—ã –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º: 4-5 –∑–≤—ë–∑–¥, 0 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
 */
function filterByCriteria(reviews) {
  const filtered = [];
  
  for (let i = 0; i < reviews.length; i++) {
    const review = reviews[i];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–π—Ç–∏–Ω–≥
    const rating = parseInt(review.rating, 10);
    if (!OZON_AUTO_CONFIG.FILTER_RATINGS.includes(rating)) {
      continue;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    const commentsCount = parseInt(review.comments_amount || 0, 10);
    if (commentsCount !== OZON_AUTO_CONFIG.FILTER_COMMENTS_COUNT) {
      continue;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞
    if (!review.text || review.text.trim().length === 0) {
      continue;
    }
    
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –æ—Ç–∑—ã–≤
    const normalized = normalizeReview(review);
    filtered.push(normalized);
  }
  
  return filtered;
}

/**
 * –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –æ—Ç–∑—ã–≤ –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
 */
function normalizeReview(review) {
  const reviewDate = review.created_date || review.date || new Date().toISOString();
  const productId = review.product_id || '';
  const reviewLink = productId ? `https://www.ozon.ru/product/${productId}` : '';
  
  return {
    reviewId: review.id || review.review_id || '',
    reviewDate: reviewDate,
    sku: review.offer_id || review.sku || '',
    productName: review.product_name || '',
    reviewLink: reviewLink,
    rating: parseInt(review.rating, 10) || 0,
    reviewText: (review.text || '').substring(0, 1000),
    preparedAnswer: '',
    status: OZON_AUTO_CONFIG.NEW_STATUS,
    errorDetails: '',
    sendTime: '',
    commentsCount: parseInt(review.comments_amount || 0, 10)
  };
}

/**
 * –£–±–∏—Ä–∞–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ ID
 */
function removeDuplicates(reviews, existingIds) {
  const unique = [];
  
  for (let i = 0; i < reviews.length; i++) {
    const review = reviews[i];
    const reviewId = review.reviewId;
    
    if (!reviewId) continue;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç—Ç–æ—Ç ID
    let isDuplicate = false;
    for (let j = 0; j < existingIds.length; j++) {
      if (existingIds[j] === reviewId) {
        isDuplicate = true;
        break;
      }
    }
    
    if (!isDuplicate) {
      unique.push(review);
    }
  }
  
  return unique;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ ID –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ –ª–∏—Å—Ç–∞ –º–∞–≥–∞–∑–∏–Ω–∞
 */
function getExistingReviewIds(store) {
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const sheetName = `–û—Ç–∑—ã–≤—ã (${store.name})`;
    const sheet = ss.getSheetByName(sheetName);
    
    if (!sheet) {
      log(`[${store.name}] –õ–∏—Å—Ç "${sheetName}" –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return [];
    }
    
    const lastRow = sheet.getLastRow();
    if (lastRow <= 1) {
      return [];
    }
    
    // –ö–æ–ª–æ–Ω–∫–∞ B = "ID –æ—Ç–∑—ã–≤–∞"
    const reviewIdColumn = 2;
    const reviewIds = sheet.getRange(2, reviewIdColumn, lastRow - 1, 1).getValues();
    
    const ids = [];
    for (let i = 0; i < reviewIds.length; i++) {
      const id = reviewIds[i][0];
      if (id && id !== '') {
        ids.push(id.toString());
      }
    }
    
    return ids;
    
  } catch (error) {
    log(`[${store.name}] ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è ID: ${error.message}`);
    return [];
  }
}

/**
 * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã –≤ –ª–∏—Å—Ç –º–∞–≥–∞–∑–∏–Ω–∞
 */
function writeToSheet(store, reviews) {
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const sheetName = `–û—Ç–∑—ã–≤—ã (${store.name})`;
    const sheet = ss.getSheetByName(sheetName);
    
    if (!sheet) {
      log(`[${store.name}] ‚ùå –õ–∏—Å—Ç "${sheetName}" –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏`);
      return;
    }
    
    const lastRow = sheet.getLastRow();
    const startRow = lastRow + 1;
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏
    const rows = [];
    for (let i = 0; i < reviews.length; i++) {
      const review = reviews[i];
      const rowNumber = startRow + i;
      
      // –§–æ—Ä–º–∞—Ç: '‚Ññ', 'ID –æ—Ç–∑—ã–≤–∞', '–î–∞—Ç–∞ –æ—Ç–∑—ã–≤–∞', '–ê—Ä—Ç–∏–∫—É–ª', '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞',
      //         '–°—Å—ã–ª–∫–∞', '–û—Ü–µ–Ω–∫–∞', '–¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞', '–ü–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç',
      //         '–°—Ç–∞—Ç—É—Å', '–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏', '–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏'
      const row = [
        rowNumber - 1,              // ‚Ññ
        review.reviewId,            // ID –æ—Ç–∑—ã–≤–∞
        review.reviewDate,          // –î–∞—Ç–∞ –æ—Ç–∑—ã–≤–∞
        review.sku,                 // –ê—Ä—Ç–∏–∫—É–ª
        review.productName,         // –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
        review.reviewLink,          // –°—Å—ã–ª–∫–∞
        review.rating,              // –û—Ü–µ–Ω–∫–∞
        review.reviewText,          // –¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞
        review.preparedAnswer,      // –ü–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç (–ø—É—Å—Ç–æ)
        review.status,              // –°—Ç–∞—Ç—É—Å (NEW)
        review.errorDetails,        // –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ (–ø—É—Å—Ç–æ)
        review.sendTime             // –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (–ø—É—Å—Ç–æ)
      ];
      
      rows.push(row);
    }
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏
    sheet.getRange(startRow, 1, rows.length, rows[0].length).setValues(rows);
    
    log(`[${store.name}] ‚úÖ –ó–∞–ø–∏—Å–∞–Ω–æ ${rows.length} –æ—Ç–∑—ã–≤–æ–≤`);
    
  } catch (error) {
    log(`[${store.name}] ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏: ${error.message}`);
    throw error;
  }
}

// ============ –£–ü–†–ê–í–õ–ï–ù–ò–ï –¢–†–ò–ì–ì–ï–†–û–ú ============

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç—Ä–∏–≥–≥–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–±–æ—Ä–∞ (–∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞)
 */
function setupOzonAutoCollectionTrigger() {
  try {
    log('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç—Ä–∏–≥–≥–µ—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–±–æ—Ä–∞ Ozon (–∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞)');
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã
    deleteOzonAutoCollectionTrigger();
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
    ScriptApp.newTrigger('collectOzonReviewsAuto')
      .timeBased()
      .everyHours(OZON_AUTO_CONFIG.TRIGGER_INTERVAL_HOURS)
      .create();
    
    log(`‚úÖ –¢—Ä–∏–≥–≥–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–∫–∞–∂–¥—ã–µ ${OZON_AUTO_CONFIG.TRIGGER_INTERVAL_HOURS} —á–∞—Å–∞)`);
    
    SpreadsheetApp.getUi().alert(
      '‚úÖ –¢—Ä–∏–≥–≥–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω',
      `–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ—Ä –æ—Ç–∑—ã–≤–æ–≤ Ozon –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–µ ${OZON_AUTO_CONFIG.TRIGGER_INTERVAL_HOURS} —á–∞—Å–∞.`,
      SpreadsheetApp.getUi().ButtonSet.OK
    );
    
    return {
      success: true,
      message: '–¢—Ä–∏–≥–≥–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ',
      interval: `${OZON_AUTO_CONFIG.TRIGGER_INTERVAL_HOURS} —á–∞—Å–æ–≤`
    };
    
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞: ${error.message}`);
    return {
      success: false,
      error: error.message
    };
  }
}

/**
 * –£–¥–∞–ª—è–µ—Ç —Ç—Ä–∏–≥–≥–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–±–æ—Ä–∞
 */
function deleteOzonAutoCollectionTrigger() {
  try {
    const triggers = ScriptApp.getProjectTriggers();
    let deletedCount = 0;
    
    for (let i = 0; i < triggers.length; i++) {
      const trigger = triggers[i];
      if (trigger.getHandlerFunction() === 'collectOzonReviewsAuto') {
        ScriptApp.deleteTrigger(trigger);
        deletedCount++;
      }
    }
    
    if (deletedCount > 0) {
      log(`–£–¥–∞–ª–µ–Ω–æ ${deletedCount} —Å—Ç–∞—Ä—ã—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤`);
    }
    
    return {
      success: true,
      deletedCount: deletedCount
    };
    
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤: ${error.message}`);
    return {
      success: false,
      error: error.message
    };
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Ç—Ä–∏–≥–≥–µ—Ä–∞
 */
function checkOzonAutoCollectionTriggerStatus() {
  try {
    const triggers = ScriptApp.getProjectTriggers();
    const found = [];
    
    for (let i = 0; i < triggers.length; i++) {
      const trigger = triggers[i];
      if (trigger.getHandlerFunction() === 'collectOzonReviewsAuto') {
        found.push({
          id: trigger.getUniqueId(),
          eventType: trigger.getEventType().toString(),
          handlerFunction: trigger.getHandlerFunction()
        });
      }
    }
    
    return {
      enabled: found.length > 0,
      triggersCount: found.length,
      triggers: found,
      interval: `${OZON_AUTO_CONFIG.TRIGGER_INTERVAL_HOURS} —á–∞—Å–æ–≤`
    };
    
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞: ${error.message}`);
    return {
      enabled: false,
      error: error.message
    };
  }
}

/**
 * –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ (–≤—Ä—É—á–Ω—É—é)
 */
function resetOzonAutoCollectionProgress(storeId) {
  try {
    const props = PropertiesService.getScriptProperties();
    const lastIdKey = OZON_AUTO_CONFIG.LAST_ID_PREFIX + storeId;
    const iterationKey = OZON_AUTO_CONFIG.ITERATION_PREFIX + storeId;
    
    props.deleteProperty(lastIdKey);
    props.deleteProperty(iterationKey);
    
    log(`–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—à–µ–Ω –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ ${storeId}`);
    
    return {
      success: true,
      message: '–ü—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—à–µ–Ω'
    };
    
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: ${error.message}`);
    return {
      success: false,
      error: error.message
    };
  }
}
