/**
 * üß™ –°–ò–°–¢–ï–ú–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø API –° –õ–û–ì–ò–†–û–í–ê–ù–ò–ï–ú
 * 
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö API
 * —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
 */

// ======================================================================
// ========================== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ================
// ======================================================================

const API_TEST_CONFIG = {
  ENABLE_DETAILED_LOGGING: true,
  LOG_ALL_REQUESTS: true,
  LOG_ALL_RESPONSES: true,
  LOG_PERFORMANCE: true,
  COMPARE_VERSIONS: true,
  MAX_TEST_DURATION: 300000, // 5 –º–∏–Ω—É—Ç
  RETRY_ATTEMPTS: 3
};

// ======================================================================
// ========================== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï WB API ======================
// ======================================================================

/**
 * üß™ –¢–µ—Å—Ç WB API v1 —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
 */
function testWbApiV1WithLogging(apiKey, store = null) {
  log('üß™ ===== –¢–ï–°–¢ WB API v1 –° –õ–û–ì–ò–†–û–í–ê–ù–ò–ï–ú =====', 'INFO', 'WB-API-V1-TEST');
  
  const testResults = {
    startTime: Date.now(),
    version: 'v1',
    success: false,
    errors: [],
    requests: [],
    performance: {},
    data: {
      totalFeedbacks: 0,
      pages: 0,
      avgResponseTime: 0
    }
  };
  
  try {
    log(`üîë API Key: ${apiKey ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}`, 'INFO', 'WB-API-V1-TEST');
    log(`üè™ Store: ${store?.name || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`, 'INFO', 'WB-API-V1-TEST');
    
    // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤
    log('üì• –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤', 'INFO', 'WB-API-V1-TEST');
    const feedbacksResult = testWbApiV1GetFeedbacks(apiKey, store);
    testResults.requests.push(feedbacksResult);
    
    if (feedbacksResult.success) {
      testResults.data.totalFeedbacks = feedbacksResult.data?.length || 0;
      testResults.data.pages = feedbacksResult.pages || 0;
      testResults.data.avgResponseTime = feedbacksResult.avgResponseTime || 0;
      
      log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${testResults.data.totalFeedbacks} –æ—Ç–∑—ã–≤–æ–≤ –∑–∞ ${testResults.data.pages} —Å—Ç—Ä–∞–Ω–∏—Ü`, 'SUCCESS', 'WB-API-V1-TEST');
      log(`‚è±Ô∏è –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${testResults.data.avgResponseTime}–º—Å`, 'INFO', 'WB-API-V1-TEST');
    } else {
      testResults.errors.push('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤');
      log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤: ${feedbacksResult.error}`, 'ERROR', 'WB-API-V1-TEST');
    }
    
    // –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –æ—Ç–∑—ã–≤—ã)
    if (testResults.data.totalFeedbacks > 0) {
      log('üì§ –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞', 'INFO', 'WB-API-V1-TEST');
      const answerResult = testWbApiV1SendAnswer(apiKey);
      testResults.requests.push(answerResult);
      
      if (answerResult.success) {
        log('‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç', 'SUCCESS', 'WB-API-V1-TEST');
      } else {
        testResults.errors.push('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞');
        log(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: ${answerResult.error}`, 'ERROR', 'WB-API-V1-TEST');
      }
    }
    
    // –¢–µ—Å—Ç 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    log('üö® –¢–µ—Å—Ç 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫', 'INFO', 'WB-API-V1-TEST');
    const errorResult = testWbApiV1ErrorHandling();
    testResults.requests.push(errorResult);
    
    if (errorResult.success) {
      log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç', 'SUCCESS', 'WB-API-V1-TEST');
    } else {
      testResults.errors.push('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫');
      log(`‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫: ${errorResult.error}`, 'ERROR', 'WB-API-V1-TEST');
    }
    
    // –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    testResults.success = testResults.errors.length === 0;
    testResults.performance.totalTime = Date.now() - testResults.startTime;
    
    log('üß™ ===== –ò–¢–û–ì–ò –¢–ï–°–¢–ê WB API v1 =====', 'INFO', 'WB-API-V1-TEST');
    log(`üìä –£—Å–ø–µ—Ö: ${testResults.success ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`, testResults.success ? 'SUCCESS' : 'ERROR', 'WB-API-V1-TEST');
    log(`üìà –û—Ç–∑—ã–≤–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ: ${testResults.data.totalFeedbacks}`, 'INFO', 'WB-API-V1-TEST');
    log(`üìÑ –°—Ç—Ä–∞–Ω–∏—Ü –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${testResults.data.pages}`, 'INFO', 'WB-API-V1-TEST');
    log(`‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è: ${testResults.performance.totalTime}–º—Å`, 'INFO', 'WB-API-V1-TEST');
    log(`üîÑ –ó–∞–ø—Ä–æ—Å–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: ${testResults.requests.length}`, 'INFO', 'WB-API-V1-TEST');
    
    if (testResults.errors.length > 0) {
      log('‚ùå –û—à–∏–±–∫–∏:', 'ERROR', 'WB-API-V1-TEST');
      testResults.errors.forEach(error => {
        log(`  - ${error}`, 'ERROR', 'WB-API-V1-TEST');
      });
    }
    
    return testResults;
    
  } catch (error) {
    testResults.success = false;
    testResults.errors.push(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
    testResults.performance.totalTime = Date.now() - testResults.startTime;
    
    log(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ WB API v1: ${error.message}`, 'ERROR', 'WB-API-V1-TEST');
    return testResults;
  }
}

/**
 * üß™ –¢–µ—Å—Ç WB API v2 —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
 */
function testWbApiV2WithLogging(apiKey, store = null) {
  log('üß™ ===== –¢–ï–°–¢ WB API v2 –° –õ–û–ì–ò–†–û–í–ê–ù–ò–ï–ú =====', 'INFO', 'WB-API-V2-TEST');
  
  const testResults = {
    startTime: Date.now(),
    version: 'v2',
    success: false,
    errors: [],
    requests: [],
    performance: {},
    data: {
      totalFeedbacks: 0,
      pages: 0,
      avgResponseTime: 0
    }
  };
  
  try {
    log(`üîë API Key: ${apiKey ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}`, 'INFO', 'WB-API-V2-TEST');
    log(`üè™ Store: ${store?.name || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`, 'INFO', 'WB-API-V2-TEST');
    
    // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤
    log('üì• –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤', 'INFO', 'WB-API-V2-TEST');
    const feedbacksResult = testWbApiV2GetFeedbacks(apiKey, store);
    testResults.requests.push(feedbacksResult);
    
    if (feedbacksResult.success) {
      testResults.data.totalFeedbacks = feedbacksResult.data?.length || 0;
      testResults.data.pages = feedbacksResult.pages || 0;
      testResults.data.avgResponseTime = feedbacksResult.avgResponseTime || 0;
      
      log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${testResults.data.totalFeedbacks} –æ—Ç–∑—ã–≤–æ–≤ –∑–∞ ${testResults.data.pages} —Å—Ç—Ä–∞–Ω–∏—Ü`, 'SUCCESS', 'WB-API-V2-TEST');
      log(`‚è±Ô∏è –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${testResults.data.avgResponseTime}–º—Å`, 'INFO', 'WB-API-V2-TEST');
    } else {
      testResults.errors.push('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤');
      log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤: ${feedbacksResult.error}`, 'ERROR', 'WB-API-V2-TEST');
    }
    
    // –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –æ—Ç–∑—ã–≤—ã)
    if (testResults.data.totalFeedbacks > 0) {
      log('üì§ –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞', 'INFO', 'WB-API-V2-TEST');
      const answerResult = testWbApiV2SendAnswer(apiKey);
      testResults.requests.push(answerResult);
      
      if (answerResult.success) {
        log('‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç', 'SUCCESS', 'WB-API-V2-TEST');
      } else {
        testResults.errors.push('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞');
        log(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: ${answerResult.error}`, 'ERROR', 'WB-API-V2-TEST');
      }
    }
    
    // –¢–µ—Å—Ç 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    log('üö® –¢–µ—Å—Ç 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫', 'INFO', 'WB-API-V2-TEST');
    const errorResult = testWbApiV2ErrorHandling();
    testResults.requests.push(errorResult);
    
    if (errorResult.success) {
      log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç', 'SUCCESS', 'WB-API-V2-TEST');
    } else {
      testResults.errors.push('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫');
      log(`‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫: ${errorResult.error}`, 'ERROR', 'WB-API-V2-TEST');
    }
    
    // –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    testResults.success = testResults.errors.length === 0;
    testResults.performance.totalTime = Date.now() - testResults.startTime;
    
    log('üß™ ===== –ò–¢–û–ì–ò –¢–ï–°–¢–ê WB API v2 =====', 'INFO', 'WB-API-V2-TEST');
    log(`üìä –£—Å–ø–µ—Ö: ${testResults.success ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`, testResults.success ? 'SUCCESS' : 'ERROR', 'WB-API-V2-TEST');
    log(`üìà –û—Ç–∑—ã–≤–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ: ${testResults.data.totalFeedbacks}`, 'INFO', 'WB-API-V2-TEST');
    log(`üìÑ –°—Ç—Ä–∞–Ω–∏—Ü –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${testResults.data.pages}`, 'INFO', 'WB-API-V2-TEST');
    log(`‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è: ${testResults.performance.totalTime}–º—Å`, 'INFO', 'WB-API-V2-TEST');
    log(`üîÑ –ó–∞–ø—Ä–æ—Å–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: ${testResults.requests.length}`, 'INFO', 'WB-API-V2-TEST');
    
    if (testResults.errors.length > 0) {
      log('‚ùå –û—à–∏–±–∫–∏:', 'ERROR', 'WB-API-V2-TEST');
      testResults.errors.forEach(error => {
        log(`  - ${error}`, 'ERROR', 'WB-API-V2-TEST');
      });
    }
    
    return testResults;
    
  } catch (error) {
    testResults.success = false;
    testResults.errors.push(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
    testResults.performance.totalTime = Date.now() - testResults.startTime;
    
    log(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ WB API v2: ${error.message}`, 'ERROR', 'WB-API-V2-TEST');
    return testResults;
  }
}

/**
 * –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ WB API v1
 */
function testWbApiV1GetFeedbacks(apiKey, store) {
  const requestStart = Date.now();
  const requestResults = {
    success: false,
    data: null,
    pages: 0,
    avgResponseTime: 0,
    error: null,
    requests: []
  };
  
  try {
    log('üîÑ –ó–∞–ø—É—Å–∫ getWbFeedbacks (v1)', 'INFO', 'WB-API-V1-REQUEST');
    
    // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    const feedbacks = getWbFeedbacks(apiKey, false, store);
    
    const requestEnd = Date.now();
    const requestDuration = requestEnd - requestStart;
    
    requestResults.success = true;
    requestResults.data = feedbacks;
    requestResults.pages = 1; // v1 –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
    requestResults.avgResponseTime = requestDuration;
    
    log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${feedbacks?.length || 0} –æ—Ç–∑—ã–≤–æ–≤ –∑–∞ ${requestDuration}–º—Å`, 'SUCCESS', 'WB-API-V1-REQUEST');
    
    return requestResults;
    
  } catch (error) {
    const requestEnd = Date.now();
    const requestDuration = requestEnd - requestStart;
    
    requestResults.success = false;
    requestResults.error = error.message;
    requestResults.avgResponseTime = requestDuration;
    
    log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ v1: ${error.message} (${requestDuration}–º—Å)`, 'ERROR', 'WB-API-V1-REQUEST');
    
    return requestResults;
  }
}

/**
 * –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ WB API v2
 */
function testWbApiV2GetFeedbacks(apiKey, store) {
  const requestStart = Date.now();
  const requestResults = {
    success: false,
    data: null,
    pages: 0,
    avgResponseTime: 0,
    error: null,
    requests: []
  };
  
  try {
    log('üîÑ –ó–∞–ø—É—Å–∫ getWbFeedbacksV2 (v2)', 'INFO', 'WB-API-V2-REQUEST');
    
    // –í—ã–∑—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é v2
    const feedbacks = getWbFeedbacksV2(apiKey, false, store);
    
    const requestEnd = Date.now();
    const requestDuration = requestEnd - requestStart;
    
    requestResults.success = true;
    requestResults.data = feedbacks;
    requestResults.pages = 1; // v2 –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
    requestResults.avgResponseTime = requestDuration;
    
    log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${feedbacks?.length || 0} –æ—Ç–∑—ã–≤–æ–≤ –∑–∞ ${requestDuration}–º—Å`, 'SUCCESS', 'WB-API-V2-REQUEST');
    
    return requestResults;
    
  } catch (error) {
    const requestEnd = Date.now();
    const requestDuration = requestEnd - requestStart;
    
    requestResults.success = false;
    requestResults.error = error.message;
    requestResults.avgResponseTime = requestDuration;
    
    log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ v2: ${error.message} (${requestDuration}–º—Å)`, 'ERROR', 'WB-API-V2-REQUEST');
    
    return requestResults;
  }
}

/**
 * –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ WB API v1
 */
function testWbApiV1SendAnswer(apiKey) {
  const requestStart = Date.now();
  const requestResults = {
    success: false,
    error: null
  };
  
  try {
    log('üîÑ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ WB API v1', 'INFO', 'WB-API-V1-REQUEST');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ç–µ—Å—Ç–æ–≤—ã–º ID
    const result = sendWbFeedbackAnswer('test-id', '–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç', apiKey);
    
    const requestEnd = Date.now();
    const requestDuration = requestEnd - requestStart;
    
    requestResults.success = true;
    
    log(`‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ v1 —Ä–∞–±–æ—Ç–∞–µ—Ç (${requestDuration}–º—Å)`, 'SUCCESS', 'WB-API-V1-REQUEST');
    
    return requestResults;
    
  } catch (error) {
    const requestEnd = Date.now();
    const requestDuration = requestEnd - requestStart;
    
    requestResults.success = false;
    requestResults.error = error.message;
    
    log(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ v1: ${error.message} (${requestDuration}–º—Å)`, 'ERROR', 'WB-API-V1-REQUEST');
    
    return requestResults;
  }
}

/**
 * –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ WB API v2
 */
function testWbApiV2SendAnswer(apiKey) {
  const requestStart = Date.now();
  const requestResults = {
    success: false,
    error: null
  };
  
  try {
    log('üîÑ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ WB API v2', 'INFO', 'WB-API-V2-REQUEST');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ç–µ—Å—Ç–æ–≤—ã–º ID
    const result = sendWbFeedbackAnswerV2('test-id', '–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç', apiKey);
    
    const requestEnd = Date.now();
    const requestDuration = requestEnd - requestStart;
    
    requestResults.success = true;
    
    log(`‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ v2 —Ä–∞–±–æ—Ç–∞–µ—Ç (${requestDuration}–º—Å)`, 'SUCCESS', 'WB-API-V2-REQUEST');
    
    return requestResults;
    
  } catch (error) {
    const requestEnd = Date.now();
    const requestDuration = requestEnd - requestStart;
    
    requestResults.success = false;
    requestResults.error = error.message;
    
    log(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ v2: ${error.message} (${requestDuration}–º—Å)`, 'ERROR', 'WB-API-V2-REQUEST');
    
    return requestResults;
  }
}

/**
 * –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ WB API v1
 */
function testWbApiV1ErrorHandling() {
  const requestStart = Date.now();
  const requestResults = {
    success: false,
    error: null
  };
  
  try {
    log('üîÑ –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ WB API v1', 'INFO', 'WB-API-V1-REQUEST');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –Ω–µ–≤–µ—Ä–Ω—ã–º API –∫–ª—é—á–æ–º
    const feedbacks = getWbFeedbacks('invalid-key', false, null);
    
    const requestEnd = Date.now();
    const requestDuration = requestEnd - requestStart;
    
    // –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –≤—ã–±—Ä–æ—Å–∏–ª–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –∑–Ω–∞—á–∏—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç
    requestResults.success = true;
    
    log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ v1 —Ä–∞–±–æ—Ç–∞–µ—Ç (${requestDuration}–º—Å)`, 'SUCCESS', 'WB-API-V1-REQUEST');
    
    return requestResults;
    
  } catch (error) {
    const requestEnd = Date.now();
    const requestDuration = requestEnd - requestStart;
    
    requestResults.success = false;
    requestResults.error = error.message;
    
    log(`‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ v1: ${error.message} (${requestDuration}–º—Å)`, 'ERROR', 'WB-API-V1-REQUEST');
    
    return requestResults;
  }
}

/**
 * –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ WB API v2
 */
function testWbApiV2ErrorHandling() {
  const requestStart = Date.now();
  const requestResults = {
    success: false,
    error: null
  };
  
  try {
    log('üîÑ –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ WB API v2', 'INFO', 'WB-API-V2-REQUEST');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –Ω–µ–≤–µ—Ä–Ω—ã–º API –∫–ª—é—á–æ–º
    const feedbacks = getWbFeedbacksV2('invalid-key', false, null);
    
    const requestEnd = Date.now();
    const requestDuration = requestEnd - requestStart;
    
    // –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –≤—ã–±—Ä–æ—Å–∏–ª–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –∑–Ω–∞—á–∏—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç
    requestResults.success = true;
    
    log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ v2 —Ä–∞–±–æ—Ç–∞–µ—Ç (${requestDuration}–º—Å)`, 'SUCCESS', 'WB-API-V2-REQUEST');
    
    return requestResults;
    
  } catch (error) {
    const requestEnd = Date.now();
    const requestDuration = requestEnd - requestStart;
    
    requestResults.success = false;
    requestResults.error = error.message;
    
    log(`‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ v2: ${error.message} (${requestDuration}–º—Å)`, 'ERROR', 'WB-API-V2-REQUEST');
    
    return requestResults;
  }
}

// ======================================================================
// ========================== –°–†–ê–í–ù–ï–ù–ò–ï –í–ï–†–°–ò–ô =========================
// ======================================================================

/**
 * üß™ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ WB API v1 vs v2
 */
function compareWbApiVersions(apiKey, store = null) {
  log('üß™ ===== –°–†–ê–í–ù–ï–ù–ò–ï WB API v1 vs v2 =====', 'INFO', 'WB-API-COMPARISON');
  
  const comparisonResults = {
    startTime: Date.now(),
    v1: null,
    v2: null,
    comparison: {
      v1Better: false,
      v2Better: false,
      recommendation: '',
      reasons: []
    }
  };
  
  try {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º v1
    log('üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WB API v1...', 'INFO', 'WB-API-COMPARISON');
    comparisonResults.v1 = testWbApiV1WithLogging(apiKey, store);
    
    // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
    Utilities.sleep(2000);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º v2
    log('üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WB API v2...', 'INFO', 'WB-API-COMPARISON');
    comparisonResults.v2 = testWbApiV2WithLogging(apiKey, store);
    
    // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    log('üîÑ –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...', 'INFO', 'WB-API-COMPARISON');
    analyzeComparisonResults(comparisonResults);
    
    // –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    log('üß™ ===== –ò–¢–û–ì–ò –°–†–ê–í–ù–ï–ù–ò–Ø =====', 'INFO', 'WB-API-COMPARISON');
    log(`üìä v1 —É—Å–ø–µ—Ö: ${comparisonResults.v1.success ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`, comparisonResults.v1.success ? 'SUCCESS' : 'ERROR', 'WB-API-COMPARISON');
    log(`üìä v2 —É—Å–ø–µ—Ö: ${comparisonResults.v2.success ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`, comparisonResults.v2.success ? 'SUCCESS' : 'ERROR', 'WB-API-COMPARISON');
    log(`üìà v1 –æ—Ç–∑—ã–≤–æ–≤: ${comparisonResults.v1.data.totalFeedbacks}`, 'INFO', 'WB-API-COMPARISON');
    log(`üìà v2 –æ—Ç–∑—ã–≤–æ–≤: ${comparisonResults.v2.data.totalFeedbacks}`, 'INFO', 'WB-API-COMPARISON');
    log(`‚è±Ô∏è v1 –≤—Ä–µ–º—è: ${comparisonResults.v1.performance.totalTime}–º—Å`, 'INFO', 'WB-API-COMPARISON');
    log(`‚è±Ô∏è v2 –≤—Ä–µ–º—è: ${comparisonResults.v2.performance.totalTime}–º—Å`, 'INFO', 'WB-API-COMPARISON');
    
    log(`üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: ${comparisonResults.comparison.recommendation}`, 'INFO', 'WB-API-COMPARISON');
    
    if (comparisonResults.comparison.reasons.length > 0) {
      log('üìã –ü—Ä–∏—á–∏–Ω—ã:', 'INFO', 'WB-API-COMPARISON');
      comparisonResults.comparison.reasons.forEach(reason => {
        log(`  - ${reason}`, 'INFO', 'WB-API-COMPARISON');
      });
    }
    
    return comparisonResults;
    
  } catch (error) {
    log(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è: ${error.message}`, 'ERROR', 'WB-API-COMPARISON');
    return comparisonResults;
  }
}

/**
 * –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
 */
function analyzeComparisonResults(comparisonResults) {
  const v1 = comparisonResults.v1;
  const v2 = comparisonResults.v2;
  const comparison = comparisonResults.comparison;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
  if (v1.success && !v2.success) {
    comparison.v1Better = true;
    comparison.recommendation = '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å WB API v1';
    comparison.reasons.push('v1 —Ä–∞–±–æ—Ç–∞–µ—Ç, v2 –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
  } else if (!v1.success && v2.success) {
    comparison.v2Better = true;
    comparison.recommendation = '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å WB API v2';
    comparison.reasons.push('v2 —Ä–∞–±–æ—Ç–∞–µ—Ç, v1 –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
  } else if (v1.success && v2.success) {
    // –û–±–∞ —Ä–∞–±–æ—Ç–∞—é—Ç, —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    if (v1.data.totalFeedbacks > v2.data.totalFeedbacks) {
      comparison.v1Better = true;
      comparison.recommendation = '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å WB API v1';
      comparison.reasons.push(`v1 –ø–æ–ª—É—á–∞–µ—Ç –±–æ–ª—å—à–µ –æ—Ç–∑—ã–≤–æ–≤ (${v1.data.totalFeedbacks} vs ${v2.data.totalFeedbacks})`);
    } else if (v2.data.totalFeedbacks > v1.data.totalFeedbacks) {
      comparison.v2Better = true;
      comparison.recommendation = '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å WB API v2';
      comparison.reasons.push(`v2 –ø–æ–ª—É—á–∞–µ—Ç –±–æ–ª—å—à–µ –æ—Ç–∑—ã–≤–æ–≤ (${v2.data.totalFeedbacks} vs ${v1.data.totalFeedbacks})`);
    } else {
      // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ, —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏
      if (v1.performance.totalTime < v2.performance.totalTime) {
        comparison.v1Better = true;
        comparison.recommendation = '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å WB API v1';
        comparison.reasons.push(`v1 –±—ã—Å—Ç—Ä–µ–µ (${v1.performance.totalTime}–º—Å vs ${v2.performance.totalTime}–º—Å)`);
      } else if (v2.performance.totalTime < v1.performance.totalTime) {
        comparison.v2Better = true;
        comparison.recommendation = '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å WB API v2';
        comparison.reasons.push(`v2 –±—ã—Å—Ç—Ä–µ–µ (${v2.performance.totalTime}–º—Å vs ${v1.performance.totalTime}–º—Å)`);
      } else {
        comparison.recommendation = '–û–±–∞ API —Ä–∞–±–æ—Ç–∞—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±–æ–π';
        comparison.reasons.push('–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ');
      }
    }
  } else {
    // –û–±–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç
    comparison.recommendation = '–ü—Ä–æ–±–ª–µ–º—ã —Å –æ–±–æ–∏–º–∏ API, —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞';
    comparison.reasons.push('–ù–∏ v1, –Ω–∏ v2 –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç');
  }
}

// ======================================================================
// ========================== –ì–õ–ê–í–ù–´–ï –§–£–ù–ö–¶–ò–ò ==========================
// ======================================================================

/**
 * üöÄ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API
 */
function runFullApiTesting() {
  log('üß™ ===== –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API =====', 'INFO', 'API-TESTING');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const stores = getStores().filter(store => store && store.isActive);
    if (stores.length === 0) {
      log('‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è', 'ERROR', 'API-TESTING');
      return null;
    }
    
    const testStore = stores[0];
    const apiKey = testStore.credentials?.apiKey;
    
    if (!apiKey) {
      log('‚ùå –£ –º–∞–≥–∞–∑–∏–Ω–∞ –Ω–µ—Ç API –∫–ª—é—á–∞', 'ERROR', 'API-TESTING');
      return null;
    }
    
    log(`üè™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –º–∞–≥–∞–∑–∏–Ω–æ–º: ${testStore.name}`, 'INFO', 'API-TESTING');
    
    // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –≤–µ—Ä—Å–∏–∏ WB API
    const comparisonResults = compareWbApiVersions(apiKey, testStore);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –ª–æ–≥
    logApiTestResults(comparisonResults);
    
    return comparisonResults;
    
  } catch (error) {
    log(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API: ${error.message}`, 'ERROR', 'API-TESTING');
    return null;
  }
}

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –ª–æ–≥
 */
function logApiTestResults(results) {
  try {
    const logSheet = getLogSheet();
    if (!logSheet) {
      log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥-–ª–∏—Å—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤', 'WARNING', 'API-TESTING');
      return;
    }
    
    const timestamp = new Date().toISOString();
    const v1Success = results.v1?.success ? '–î–ê' : '–ù–ï–¢';
    const v2Success = results.v2?.success ? '–î–ê' : '–ù–ï–¢';
    const v1Feedbacks = results.v1?.data?.totalFeedbacks || 0;
    const v2Feedbacks = results.v2?.data?.totalFeedbacks || 0;
    const v1Time = results.v1?.performance?.totalTime || 0;
    const v2Time = results.v2?.performance?.totalTime || 0;
    const recommendation = results.comparison?.recommendation || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ';
    
    const logData = [
      timestamp,
      'API-TESTING',
      'INFO',
      `WB API v1: ${v1Success}, ${v1Feedbacks} –æ—Ç–∑—ã–≤–æ–≤, ${v1Time}–º—Å`,
      `WB API v2: ${v2Success}, ${v2Feedbacks} –æ—Ç–∑—ã–≤–æ–≤, ${v2Time}–º—Å`,
      `–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: ${recommendation}`
    ];
    
    logSheet.appendRow(logData);
    log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ª–æ–≥', 'SUCCESS', 'API-TESTING');
    
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${error.message}`, 'ERROR', 'API-TESTING');
  }
}